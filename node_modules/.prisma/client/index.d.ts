
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/index';
declare const prisma: unique symbol
export type PrismaPromise<A> = Promise<A> & {[prisma]: true}
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};


/**
 * Model gd_user
 * 
 */
export type gd_user = {
  user_id: number
  user_email: string
  user_password: string | null
  user_first_name: string | null
  user_last_name: string | null
  user_status: number | null
  user_create_at: Date | null
  user_update_at: Date | null
  user_create_by: number | null
  user_update_by: number | null
  user_deleted: number | null
  user_deleted_at: Date | null
}

/**
 * Model gd_token
 * 
 */
export type gd_token = {
  access_token: string
  user_id: number
  referesh_token: string | null
  token_create_at: string | null
  token_expired_at: string | null
}

/**
 * Model gd_role
 * 
 */
export type gd_role = {
  role_id: number
  role_name: string
  role_create_date: Date | null
  role_update_date: Date | null
  role_create_by: number | null
  role_update_by: number | null
}

/**
 * Model gd_user_role
 * 
 */
export type gd_user_role = {
  user_id: number
  role_id: number
  user_role_create_date: Date | null
  user_role_update_date: Date | null
  user_role_create_by: number | null
  user_role_update_by: number | null
}

/**
 * Model gd_project
 * 
 */
export type gd_project = {
  project_id: number
  project_name: string | null
  project_revision: string | null
  project_create_date: Date | null
  project_update_date: Date | null
  project_create_by: number | null
  project_update_by: number | null
  project_deleted: number | null
  project_deleted_at: Date | null
}

/**
 * Model gd_user_project
 * 
 */
export type gd_user_project = {
  project_id: number
  user_id: number
  user_project_create_date: Date | null
  user_project_update_date: Date | null
  user_project_create_by: number | null
  user_project_update_by: number | null
}

/**
 * Model gd_workflow
 * 
 */
export type gd_workflow = {
  workflow_id: number
  workflow_name: string
  project_id: number | null
  workflow_create_date: Date | null
  workflow_update_date: Date | null
  workflow_create_by: number | null
  workflow_update_by: number | null
  workflow_delete: number | null
  workflow_delete_at: Date | null
}

/**
 * Model gd_file
 * 
 */
export type gd_file = {
  file_id: number
  file_path: string | null
  project_id: number | null
  workflow_id: number | null
  file_create_date: Date | null
  file_update_date: Date | null
  file_create_by: number | null
  file_update_by: number | null
  file_deleted: number | null
  file_deleted_at: Date | null
}

/**
 * Model gd_log
 * 
 */
export type gd_log = {
  log_id: number
  workflow_id: number | null
  log_session_time: Date | null
  log_session_attempt: string | null
  log_last_duration: string | null
  log_status: number | null
  log_created_date: Date | null
  log_updated_date: Date | null
  log_created_by: number | null
  log_updated_by: number | null
}

/**
 * Model gd_import_file
 * 
 */
export type gd_import_file = {
  import_id: number
  import_file_name: string | null
  import_fundname: string | null
  import_uploaded: number | null
  import_status_raw_table: number | null
  import_status_destination_table: number | null
  import_date_uploaded: string | null
  user_id: number | null
}

/**
 * Model gd_datalake_file
 * 
 */
export type gd_datalake_file = {
  dl_file_id: number
  dl_file_name: string | null
  dl_folder_id: number | null
  dl_file_content: string | null
  dl_file_deleted: number | null
  dl_file_created_by: number | null
  dl_file_updated_by: number | null
  dl_file_deleted_at: Date | null
  dl_file_updated_at: Date | null
  dl_file_created_at: Date | null
}

/**
 * Model gd_datalake_folder
 * 
 */
export type gd_datalake_folder = {
  dl_folder_id: number
  dl_folder_name: string | null
  dl_parent_folder_id: number | null
  dl_folder_deleted: number | null
  dl_folder_created_by: number | null
  dl_folder_updated_by: number | null
  dl_folder_deleted_at: Date | null
  dl_folder_updated_at: Date | null
  dl_folder_created_at: Date | null
}


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Gd_users
 * const gd_users = await prisma.gd_user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
      /**
       * @private
       */
      private fetcher;
      /**
       * @private
       */
      private readonly dmmf;
      /**
       * @private
       */
      private connectionPromise?;
      /**
       * @private
       */
      private disconnectionPromise?;
      /**
       * @private
       */
      private readonly engineConfig;
      /**
       * @private
       */
      private readonly measurePerformance;

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Gd_users
   * const gd_users = await prisma.gd_user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<any>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

  /**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends PrismaPromise<any>[]>(arg: [...P]): Promise<UnwrapTuple<P>>;


      /**
   * `prisma.gd_user`: Exposes CRUD operations for the **gd_user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gd_users
    * const gd_users = await prisma.gd_user.findMany()
    * ```
    */
  get gd_user(): Prisma.gd_userDelegate<GlobalReject>;

  /**
   * `prisma.gd_token`: Exposes CRUD operations for the **gd_token** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gd_tokens
    * const gd_tokens = await prisma.gd_token.findMany()
    * ```
    */
  get gd_token(): Prisma.gd_tokenDelegate<GlobalReject>;

  /**
   * `prisma.gd_role`: Exposes CRUD operations for the **gd_role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gd_roles
    * const gd_roles = await prisma.gd_role.findMany()
    * ```
    */
  get gd_role(): Prisma.gd_roleDelegate<GlobalReject>;

  /**
   * `prisma.gd_user_role`: Exposes CRUD operations for the **gd_user_role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gd_user_roles
    * const gd_user_roles = await prisma.gd_user_role.findMany()
    * ```
    */
  get gd_user_role(): Prisma.gd_user_roleDelegate<GlobalReject>;

  /**
   * `prisma.gd_project`: Exposes CRUD operations for the **gd_project** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gd_projects
    * const gd_projects = await prisma.gd_project.findMany()
    * ```
    */
  get gd_project(): Prisma.gd_projectDelegate<GlobalReject>;

  /**
   * `prisma.gd_user_project`: Exposes CRUD operations for the **gd_user_project** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gd_user_projects
    * const gd_user_projects = await prisma.gd_user_project.findMany()
    * ```
    */
  get gd_user_project(): Prisma.gd_user_projectDelegate<GlobalReject>;

  /**
   * `prisma.gd_workflow`: Exposes CRUD operations for the **gd_workflow** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gd_workflows
    * const gd_workflows = await prisma.gd_workflow.findMany()
    * ```
    */
  get gd_workflow(): Prisma.gd_workflowDelegate<GlobalReject>;

  /**
   * `prisma.gd_file`: Exposes CRUD operations for the **gd_file** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gd_files
    * const gd_files = await prisma.gd_file.findMany()
    * ```
    */
  get gd_file(): Prisma.gd_fileDelegate<GlobalReject>;

  /**
   * `prisma.gd_log`: Exposes CRUD operations for the **gd_log** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gd_logs
    * const gd_logs = await prisma.gd_log.findMany()
    * ```
    */
  get gd_log(): Prisma.gd_logDelegate<GlobalReject>;

  /**
   * `prisma.gd_import_file`: Exposes CRUD operations for the **gd_import_file** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gd_import_files
    * const gd_import_files = await prisma.gd_import_file.findMany()
    * ```
    */
  get gd_import_file(): Prisma.gd_import_fileDelegate<GlobalReject>;

  /**
   * `prisma.gd_datalake_file`: Exposes CRUD operations for the **gd_datalake_file** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gd_datalake_files
    * const gd_datalake_files = await prisma.gd_datalake_file.findMany()
    * ```
    */
  get gd_datalake_file(): Prisma.gd_datalake_fileDelegate<GlobalReject>;

  /**
   * `prisma.gd_datalake_folder`: Exposes CRUD operations for the **gd_datalake_folder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gd_datalake_folders
    * const gd_datalake_folders = await prisma.gd_datalake_folder.findMany()
    * ```
    */
  get gd_datalake_folder(): Prisma.gd_datalake_folderDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  /**
   * Prisma Client JS version: 3.5.0
   * Query Engine version: 78a5df6def6943431f4c022e1428dbc3e833cf8e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}
 
  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}
 
  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Same as JsonObject, but allows undefined
   */
  export type InputJsonObject = {[Key in string]?: JsonValue}
 
  export interface InputJsonArray extends Array<JsonValue> {}
 
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: 'DbNull'

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: 'JsonNull'

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: 'AnyNull'

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = {
    [key in keyof T]: T[key] extends false | undefined | null ? never : key
  }[keyof T]

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Buffer
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Exact<A, W = unknown> = 
  W extends unknown ? A extends Narrowable ? Cast<A, W> : Cast<
  {[K in keyof A]: K extends keyof W ? Exact<A[K], W[K]> : never},
  {[K in keyof W]: K extends keyof A ? Exact<A[K], W[K]> : W[K]}>
  : never;

  type Narrowable = string | number | boolean | bigint;

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: Exact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    gd_user: 'gd_user',
    gd_token: 'gd_token',
    gd_role: 'gd_role',
    gd_user_role: 'gd_user_role',
    gd_project: 'gd_project',
    gd_user_project: 'gd_user_project',
    gd_workflow: 'gd_workflow',
    gd_file: 'gd_file',
    gd_log: 'gd_log',
    gd_import_file: 'gd_import_file',
    gd_datalake_file: 'gd_datalake_file',
    gd_datalake_folder: 'gd_datalake_folder'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends boolean
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     *  * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your prisma.schema file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'

  /**
   * These options are being passed in to the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined; 
  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Gd_userCountOutputType
   */


  export type Gd_userCountOutputType = {
    user_tokens: number
    user_roles: number
    user_projects: number
  }

  export type Gd_userCountOutputTypeSelect = {
    user_tokens?: boolean
    user_roles?: boolean
    user_projects?: boolean
  }

  export type Gd_userCountOutputTypeGetPayload<
    S extends boolean | null | undefined | Gd_userCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? Gd_userCountOutputType
    : S extends undefined
    ? never
    : S extends Gd_userCountOutputTypeArgs
    ?'include' extends U
    ? Gd_userCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Gd_userCountOutputType ?Gd_userCountOutputType [P]
  : 
     never
  } 
    : Gd_userCountOutputType
  : Gd_userCountOutputType




  // Custom InputTypes

  /**
   * Gd_userCountOutputType without action
   */
  export type Gd_userCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Gd_userCountOutputType
     * 
    **/
    select?: Gd_userCountOutputTypeSelect | null
  }



  /**
   * Count Type Gd_roleCountOutputType
   */


  export type Gd_roleCountOutputType = {
    user_role: number
  }

  export type Gd_roleCountOutputTypeSelect = {
    user_role?: boolean
  }

  export type Gd_roleCountOutputTypeGetPayload<
    S extends boolean | null | undefined | Gd_roleCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? Gd_roleCountOutputType
    : S extends undefined
    ? never
    : S extends Gd_roleCountOutputTypeArgs
    ?'include' extends U
    ? Gd_roleCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Gd_roleCountOutputType ?Gd_roleCountOutputType [P]
  : 
     never
  } 
    : Gd_roleCountOutputType
  : Gd_roleCountOutputType




  // Custom InputTypes

  /**
   * Gd_roleCountOutputType without action
   */
  export type Gd_roleCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Gd_roleCountOutputType
     * 
    **/
    select?: Gd_roleCountOutputTypeSelect | null
  }



  /**
   * Count Type Gd_projectCountOutputType
   */


  export type Gd_projectCountOutputType = {
    user_projects: number
    workflows: number
    files: number
  }

  export type Gd_projectCountOutputTypeSelect = {
    user_projects?: boolean
    workflows?: boolean
    files?: boolean
  }

  export type Gd_projectCountOutputTypeGetPayload<
    S extends boolean | null | undefined | Gd_projectCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? Gd_projectCountOutputType
    : S extends undefined
    ? never
    : S extends Gd_projectCountOutputTypeArgs
    ?'include' extends U
    ? Gd_projectCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Gd_projectCountOutputType ?Gd_projectCountOutputType [P]
  : 
     never
  } 
    : Gd_projectCountOutputType
  : Gd_projectCountOutputType




  // Custom InputTypes

  /**
   * Gd_projectCountOutputType without action
   */
  export type Gd_projectCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Gd_projectCountOutputType
     * 
    **/
    select?: Gd_projectCountOutputTypeSelect | null
  }



  /**
   * Count Type Gd_workflowCountOutputType
   */


  export type Gd_workflowCountOutputType = {
    logs: number
    files: number
  }

  export type Gd_workflowCountOutputTypeSelect = {
    logs?: boolean
    files?: boolean
  }

  export type Gd_workflowCountOutputTypeGetPayload<
    S extends boolean | null | undefined | Gd_workflowCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? Gd_workflowCountOutputType
    : S extends undefined
    ? never
    : S extends Gd_workflowCountOutputTypeArgs
    ?'include' extends U
    ? Gd_workflowCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Gd_workflowCountOutputType ?Gd_workflowCountOutputType [P]
  : 
     never
  } 
    : Gd_workflowCountOutputType
  : Gd_workflowCountOutputType




  // Custom InputTypes

  /**
   * Gd_workflowCountOutputType without action
   */
  export type Gd_workflowCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Gd_workflowCountOutputType
     * 
    **/
    select?: Gd_workflowCountOutputTypeSelect | null
  }



  /**
   * Count Type Gd_datalake_folderCountOutputType
   */


  export type Gd_datalake_folderCountOutputType = {
    files: number
  }

  export type Gd_datalake_folderCountOutputTypeSelect = {
    files?: boolean
  }

  export type Gd_datalake_folderCountOutputTypeGetPayload<
    S extends boolean | null | undefined | Gd_datalake_folderCountOutputTypeArgs,
    U = keyof S
      > = S extends true
        ? Gd_datalake_folderCountOutputType
    : S extends undefined
    ? never
    : S extends Gd_datalake_folderCountOutputTypeArgs
    ?'include' extends U
    ? Gd_datalake_folderCountOutputType 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Gd_datalake_folderCountOutputType ?Gd_datalake_folderCountOutputType [P]
  : 
     never
  } 
    : Gd_datalake_folderCountOutputType
  : Gd_datalake_folderCountOutputType




  // Custom InputTypes

  /**
   * Gd_datalake_folderCountOutputType without action
   */
  export type Gd_datalake_folderCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Gd_datalake_folderCountOutputType
     * 
    **/
    select?: Gd_datalake_folderCountOutputTypeSelect | null
  }



  /**
   * Models
   */

  /**
   * Model gd_user
   */


  export type AggregateGd_user = {
    _count: Gd_userCountAggregateOutputType | null
    _avg: Gd_userAvgAggregateOutputType | null
    _sum: Gd_userSumAggregateOutputType | null
    _min: Gd_userMinAggregateOutputType | null
    _max: Gd_userMaxAggregateOutputType | null
  }

  export type Gd_userAvgAggregateOutputType = {
    user_id: number | null
    user_status: number | null
    user_create_by: number | null
    user_update_by: number | null
    user_deleted: number | null
  }

  export type Gd_userSumAggregateOutputType = {
    user_id: number | null
    user_status: number | null
    user_create_by: number | null
    user_update_by: number | null
    user_deleted: number | null
  }

  export type Gd_userMinAggregateOutputType = {
    user_id: number | null
    user_email: string | null
    user_password: string | null
    user_first_name: string | null
    user_last_name: string | null
    user_status: number | null
    user_create_at: Date | null
    user_update_at: Date | null
    user_create_by: number | null
    user_update_by: number | null
    user_deleted: number | null
    user_deleted_at: Date | null
  }

  export type Gd_userMaxAggregateOutputType = {
    user_id: number | null
    user_email: string | null
    user_password: string | null
    user_first_name: string | null
    user_last_name: string | null
    user_status: number | null
    user_create_at: Date | null
    user_update_at: Date | null
    user_create_by: number | null
    user_update_by: number | null
    user_deleted: number | null
    user_deleted_at: Date | null
  }

  export type Gd_userCountAggregateOutputType = {
    user_id: number
    user_email: number
    user_password: number
    user_first_name: number
    user_last_name: number
    user_status: number
    user_create_at: number
    user_update_at: number
    user_create_by: number
    user_update_by: number
    user_deleted: number
    user_deleted_at: number
    _all: number
  }


  export type Gd_userAvgAggregateInputType = {
    user_id?: true
    user_status?: true
    user_create_by?: true
    user_update_by?: true
    user_deleted?: true
  }

  export type Gd_userSumAggregateInputType = {
    user_id?: true
    user_status?: true
    user_create_by?: true
    user_update_by?: true
    user_deleted?: true
  }

  export type Gd_userMinAggregateInputType = {
    user_id?: true
    user_email?: true
    user_password?: true
    user_first_name?: true
    user_last_name?: true
    user_status?: true
    user_create_at?: true
    user_update_at?: true
    user_create_by?: true
    user_update_by?: true
    user_deleted?: true
    user_deleted_at?: true
  }

  export type Gd_userMaxAggregateInputType = {
    user_id?: true
    user_email?: true
    user_password?: true
    user_first_name?: true
    user_last_name?: true
    user_status?: true
    user_create_at?: true
    user_update_at?: true
    user_create_by?: true
    user_update_by?: true
    user_deleted?: true
    user_deleted_at?: true
  }

  export type Gd_userCountAggregateInputType = {
    user_id?: true
    user_email?: true
    user_password?: true
    user_first_name?: true
    user_last_name?: true
    user_status?: true
    user_create_at?: true
    user_update_at?: true
    user_create_by?: true
    user_update_by?: true
    user_deleted?: true
    user_deleted_at?: true
    _all?: true
  }

  export type Gd_userAggregateArgs = {
    /**
     * Filter which gd_user to aggregate.
     * 
    **/
    where?: gd_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_users to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_userOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: gd_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gd_users
    **/
    _count?: true | Gd_userCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gd_userAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gd_userSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gd_userMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gd_userMaxAggregateInputType
  }

  export type GetGd_userAggregateType<T extends Gd_userAggregateArgs> = {
        [P in keyof T & keyof AggregateGd_user]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGd_user[P]>
      : GetScalarType<T[P], AggregateGd_user[P]>
  }




  export type Gd_userGroupByArgs = {
    where?: gd_userWhereInput
    orderBy?: Enumerable<gd_userOrderByWithAggregationInput>
    by: Array<Gd_userScalarFieldEnum>
    having?: gd_userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gd_userCountAggregateInputType | true
    _avg?: Gd_userAvgAggregateInputType
    _sum?: Gd_userSumAggregateInputType
    _min?: Gd_userMinAggregateInputType
    _max?: Gd_userMaxAggregateInputType
  }


  export type Gd_userGroupByOutputType = {
    user_id: number
    user_email: string
    user_password: string | null
    user_first_name: string | null
    user_last_name: string | null
    user_status: number | null
    user_create_at: Date | null
    user_update_at: Date | null
    user_create_by: number | null
    user_update_by: number | null
    user_deleted: number | null
    user_deleted_at: Date | null
    _count: Gd_userCountAggregateOutputType | null
    _avg: Gd_userAvgAggregateOutputType | null
    _sum: Gd_userSumAggregateOutputType | null
    _min: Gd_userMinAggregateOutputType | null
    _max: Gd_userMaxAggregateOutputType | null
  }

  type GetGd_userGroupByPayload<T extends Gd_userGroupByArgs> = Promise<
    Array<
      PickArray<Gd_userGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gd_userGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gd_userGroupByOutputType[P]>
            : GetScalarType<T[P], Gd_userGroupByOutputType[P]>
        }
      >
    >


  export type gd_userSelect = {
    user_id?: boolean
    user_email?: boolean
    user_password?: boolean
    user_first_name?: boolean
    user_last_name?: boolean
    user_status?: boolean
    user_create_at?: boolean
    user_update_at?: boolean
    user_create_by?: boolean
    user_update_by?: boolean
    user_deleted?: boolean
    user_deleted_at?: boolean
    user_tokens?: boolean | gd_tokenFindManyArgs
    user_roles?: boolean | gd_user_roleFindManyArgs
    user_projects?: boolean | gd_user_projectFindManyArgs
    _count?: boolean | Gd_userCountOutputTypeArgs
  }

  export type gd_userInclude = {
    user_tokens?: boolean | gd_tokenFindManyArgs
    user_roles?: boolean | gd_user_roleFindManyArgs
    user_projects?: boolean | gd_user_projectFindManyArgs
    _count?: boolean | Gd_userCountOutputTypeArgs
  }

  export type gd_userGetPayload<
    S extends boolean | null | undefined | gd_userArgs,
    U = keyof S
      > = S extends true
        ? gd_user
    : S extends undefined
    ? never
    : S extends gd_userArgs | gd_userFindManyArgs
    ?'include' extends U
    ? gd_user  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user_tokens'
        ? Array < gd_tokenGetPayload<S['include'][P]>>  :
        P extends 'user_roles'
        ? Array < gd_user_roleGetPayload<S['include'][P]>>  :
        P extends 'user_projects'
        ? Array < gd_user_projectGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? Gd_userCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof gd_user ?gd_user [P]
  : 
          P extends 'user_tokens'
        ? Array < gd_tokenGetPayload<S['select'][P]>>  :
        P extends 'user_roles'
        ? Array < gd_user_roleGetPayload<S['select'][P]>>  :
        P extends 'user_projects'
        ? Array < gd_user_projectGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? Gd_userCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : gd_user
  : gd_user


  type gd_userCountArgs = Merge<
    Omit<gd_userFindManyArgs, 'select' | 'include'> & {
      select?: Gd_userCountAggregateInputType | true
    }
  >

  export interface gd_userDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Gd_user that matches the filter.
     * @param {gd_userFindUniqueArgs} args - Arguments to find a Gd_user
     * @example
     * // Get one Gd_user
     * const gd_user = await prisma.gd_user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gd_userFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gd_userFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gd_user'> extends True ? CheckSelect<T, Prisma__gd_userClient<gd_user>, Prisma__gd_userClient<gd_userGetPayload<T>>> : CheckSelect<T, Prisma__gd_userClient<gd_user | null >, Prisma__gd_userClient<gd_userGetPayload<T> | null >>

    /**
     * Find the first Gd_user that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_userFindFirstArgs} args - Arguments to find a Gd_user
     * @example
     * // Get one Gd_user
     * const gd_user = await prisma.gd_user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gd_userFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gd_userFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gd_user'> extends True ? CheckSelect<T, Prisma__gd_userClient<gd_user>, Prisma__gd_userClient<gd_userGetPayload<T>>> : CheckSelect<T, Prisma__gd_userClient<gd_user | null >, Prisma__gd_userClient<gd_userGetPayload<T> | null >>

    /**
     * Find zero or more Gd_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_userFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gd_users
     * const gd_users = await prisma.gd_user.findMany()
     * 
     * // Get first 10 Gd_users
     * const gd_users = await prisma.gd_user.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const gd_userWithUser_idOnly = await prisma.gd_user.findMany({ select: { user_id: true } })
     * 
    **/
    findMany<T extends gd_userFindManyArgs>(
      args?: SelectSubset<T, gd_userFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<gd_user>>, PrismaPromise<Array<gd_userGetPayload<T>>>>

    /**
     * Create a Gd_user.
     * @param {gd_userCreateArgs} args - Arguments to create a Gd_user.
     * @example
     * // Create one Gd_user
     * const Gd_user = await prisma.gd_user.create({
     *   data: {
     *     // ... data to create a Gd_user
     *   }
     * })
     * 
    **/
    create<T extends gd_userCreateArgs>(
      args: SelectSubset<T, gd_userCreateArgs>
    ): CheckSelect<T, Prisma__gd_userClient<gd_user>, Prisma__gd_userClient<gd_userGetPayload<T>>>

    /**
     * Create many Gd_users.
     *     @param {gd_userCreateManyArgs} args - Arguments to create many Gd_users.
     *     @example
     *     // Create many Gd_users
     *     const gd_user = await prisma.gd_user.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gd_userCreateManyArgs>(
      args?: SelectSubset<T, gd_userCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gd_user.
     * @param {gd_userDeleteArgs} args - Arguments to delete one Gd_user.
     * @example
     * // Delete one Gd_user
     * const Gd_user = await prisma.gd_user.delete({
     *   where: {
     *     // ... filter to delete one Gd_user
     *   }
     * })
     * 
    **/
    delete<T extends gd_userDeleteArgs>(
      args: SelectSubset<T, gd_userDeleteArgs>
    ): CheckSelect<T, Prisma__gd_userClient<gd_user>, Prisma__gd_userClient<gd_userGetPayload<T>>>

    /**
     * Update one Gd_user.
     * @param {gd_userUpdateArgs} args - Arguments to update one Gd_user.
     * @example
     * // Update one Gd_user
     * const gd_user = await prisma.gd_user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gd_userUpdateArgs>(
      args: SelectSubset<T, gd_userUpdateArgs>
    ): CheckSelect<T, Prisma__gd_userClient<gd_user>, Prisma__gd_userClient<gd_userGetPayload<T>>>

    /**
     * Delete zero or more Gd_users.
     * @param {gd_userDeleteManyArgs} args - Arguments to filter Gd_users to delete.
     * @example
     * // Delete a few Gd_users
     * const { count } = await prisma.gd_user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gd_userDeleteManyArgs>(
      args?: SelectSubset<T, gd_userDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gd_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gd_users
     * const gd_user = await prisma.gd_user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gd_userUpdateManyArgs>(
      args: SelectSubset<T, gd_userUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gd_user.
     * @param {gd_userUpsertArgs} args - Arguments to update or create a Gd_user.
     * @example
     * // Update or create a Gd_user
     * const gd_user = await prisma.gd_user.upsert({
     *   create: {
     *     // ... data to create a Gd_user
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gd_user we want to update
     *   }
     * })
    **/
    upsert<T extends gd_userUpsertArgs>(
      args: SelectSubset<T, gd_userUpsertArgs>
    ): CheckSelect<T, Prisma__gd_userClient<gd_user>, Prisma__gd_userClient<gd_userGetPayload<T>>>

    /**
     * Count the number of Gd_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_userCountArgs} args - Arguments to filter Gd_users to count.
     * @example
     * // Count the number of Gd_users
     * const count = await prisma.gd_user.count({
     *   where: {
     *     // ... the filter for the Gd_users we want to count
     *   }
     * })
    **/
    count<T extends gd_userCountArgs>(
      args?: Subset<T, gd_userCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gd_userCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gd_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gd_userAggregateArgs>(args: Subset<T, Gd_userAggregateArgs>): PrismaPromise<GetGd_userAggregateType<T>>

    /**
     * Group by Gd_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gd_userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gd_userGroupByArgs['orderBy'] }
        : { orderBy?: Gd_userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gd_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGd_userGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for gd_user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gd_userClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user_tokens<T extends gd_tokenFindManyArgs = {}>(args?: Subset<T, gd_tokenFindManyArgs>): CheckSelect<T, PrismaPromise<Array<gd_token>>, PrismaPromise<Array<gd_tokenGetPayload<T>>>>;

    user_roles<T extends gd_user_roleFindManyArgs = {}>(args?: Subset<T, gd_user_roleFindManyArgs>): CheckSelect<T, PrismaPromise<Array<gd_user_role>>, PrismaPromise<Array<gd_user_roleGetPayload<T>>>>;

    user_projects<T extends gd_user_projectFindManyArgs = {}>(args?: Subset<T, gd_user_projectFindManyArgs>): CheckSelect<T, PrismaPromise<Array<gd_user_project>>, PrismaPromise<Array<gd_user_projectGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * gd_user findUnique
   */
  export type gd_userFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the gd_user
     * 
    **/
    select?: gd_userSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_userInclude | null
    /**
     * Throw an Error if a gd_user can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_user to fetch.
     * 
    **/
    where: gd_userWhereUniqueInput
  }


  /**
   * gd_user findFirst
   */
  export type gd_userFindFirstArgs = {
    /**
     * Select specific fields to fetch from the gd_user
     * 
    **/
    select?: gd_userSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_userInclude | null
    /**
     * Throw an Error if a gd_user can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_user to fetch.
     * 
    **/
    where?: gd_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_users to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_userOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gd_users.
     * 
    **/
    cursor?: gd_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gd_users.
     * 
    **/
    distinct?: Enumerable<Gd_userScalarFieldEnum>
  }


  /**
   * gd_user findMany
   */
  export type gd_userFindManyArgs = {
    /**
     * Select specific fields to fetch from the gd_user
     * 
    **/
    select?: gd_userSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_userInclude | null
    /**
     * Filter, which gd_users to fetch.
     * 
    **/
    where?: gd_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_users to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_userOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gd_users.
     * 
    **/
    cursor?: gd_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gd_userScalarFieldEnum>
  }


  /**
   * gd_user create
   */
  export type gd_userCreateArgs = {
    /**
     * Select specific fields to fetch from the gd_user
     * 
    **/
    select?: gd_userSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_userInclude | null
    /**
     * The data needed to create a gd_user.
     * 
    **/
    data: XOR<gd_userCreateInput, gd_userUncheckedCreateInput>
  }


  /**
   * gd_user createMany
   */
  export type gd_userCreateManyArgs = {
    data: Enumerable<gd_userCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gd_user update
   */
  export type gd_userUpdateArgs = {
    /**
     * Select specific fields to fetch from the gd_user
     * 
    **/
    select?: gd_userSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_userInclude | null
    /**
     * The data needed to update a gd_user.
     * 
    **/
    data: XOR<gd_userUpdateInput, gd_userUncheckedUpdateInput>
    /**
     * Choose, which gd_user to update.
     * 
    **/
    where: gd_userWhereUniqueInput
  }


  /**
   * gd_user updateMany
   */
  export type gd_userUpdateManyArgs = {
    data: XOR<gd_userUpdateManyMutationInput, gd_userUncheckedUpdateManyInput>
    where?: gd_userWhereInput
  }


  /**
   * gd_user upsert
   */
  export type gd_userUpsertArgs = {
    /**
     * Select specific fields to fetch from the gd_user
     * 
    **/
    select?: gd_userSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_userInclude | null
    /**
     * The filter to search for the gd_user to update in case it exists.
     * 
    **/
    where: gd_userWhereUniqueInput
    /**
     * In case the gd_user found by the `where` argument doesn't exist, create a new gd_user with this data.
     * 
    **/
    create: XOR<gd_userCreateInput, gd_userUncheckedCreateInput>
    /**
     * In case the gd_user was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<gd_userUpdateInput, gd_userUncheckedUpdateInput>
  }


  /**
   * gd_user delete
   */
  export type gd_userDeleteArgs = {
    /**
     * Select specific fields to fetch from the gd_user
     * 
    **/
    select?: gd_userSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_userInclude | null
    /**
     * Filter which gd_user to delete.
     * 
    **/
    where: gd_userWhereUniqueInput
  }


  /**
   * gd_user deleteMany
   */
  export type gd_userDeleteManyArgs = {
    where?: gd_userWhereInput
  }


  /**
   * gd_user without action
   */
  export type gd_userArgs = {
    /**
     * Select specific fields to fetch from the gd_user
     * 
    **/
    select?: gd_userSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_userInclude | null
  }



  /**
   * Model gd_token
   */


  export type AggregateGd_token = {
    _count: Gd_tokenCountAggregateOutputType | null
    _avg: Gd_tokenAvgAggregateOutputType | null
    _sum: Gd_tokenSumAggregateOutputType | null
    _min: Gd_tokenMinAggregateOutputType | null
    _max: Gd_tokenMaxAggregateOutputType | null
  }

  export type Gd_tokenAvgAggregateOutputType = {
    user_id: number | null
  }

  export type Gd_tokenSumAggregateOutputType = {
    user_id: number | null
  }

  export type Gd_tokenMinAggregateOutputType = {
    access_token: string | null
    user_id: number | null
    referesh_token: string | null
    token_create_at: string | null
    token_expired_at: string | null
  }

  export type Gd_tokenMaxAggregateOutputType = {
    access_token: string | null
    user_id: number | null
    referesh_token: string | null
    token_create_at: string | null
    token_expired_at: string | null
  }

  export type Gd_tokenCountAggregateOutputType = {
    access_token: number
    user_id: number
    referesh_token: number
    token_create_at: number
    token_expired_at: number
    _all: number
  }


  export type Gd_tokenAvgAggregateInputType = {
    user_id?: true
  }

  export type Gd_tokenSumAggregateInputType = {
    user_id?: true
  }

  export type Gd_tokenMinAggregateInputType = {
    access_token?: true
    user_id?: true
    referesh_token?: true
    token_create_at?: true
    token_expired_at?: true
  }

  export type Gd_tokenMaxAggregateInputType = {
    access_token?: true
    user_id?: true
    referesh_token?: true
    token_create_at?: true
    token_expired_at?: true
  }

  export type Gd_tokenCountAggregateInputType = {
    access_token?: true
    user_id?: true
    referesh_token?: true
    token_create_at?: true
    token_expired_at?: true
    _all?: true
  }

  export type Gd_tokenAggregateArgs = {
    /**
     * Filter which gd_token to aggregate.
     * 
    **/
    where?: gd_tokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_tokens to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_tokenOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: gd_tokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_tokens from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_tokens.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gd_tokens
    **/
    _count?: true | Gd_tokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gd_tokenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gd_tokenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gd_tokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gd_tokenMaxAggregateInputType
  }

  export type GetGd_tokenAggregateType<T extends Gd_tokenAggregateArgs> = {
        [P in keyof T & keyof AggregateGd_token]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGd_token[P]>
      : GetScalarType<T[P], AggregateGd_token[P]>
  }




  export type Gd_tokenGroupByArgs = {
    where?: gd_tokenWhereInput
    orderBy?: Enumerable<gd_tokenOrderByWithAggregationInput>
    by: Array<Gd_tokenScalarFieldEnum>
    having?: gd_tokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gd_tokenCountAggregateInputType | true
    _avg?: Gd_tokenAvgAggregateInputType
    _sum?: Gd_tokenSumAggregateInputType
    _min?: Gd_tokenMinAggregateInputType
    _max?: Gd_tokenMaxAggregateInputType
  }


  export type Gd_tokenGroupByOutputType = {
    access_token: string
    user_id: number
    referesh_token: string | null
    token_create_at: string | null
    token_expired_at: string | null
    _count: Gd_tokenCountAggregateOutputType | null
    _avg: Gd_tokenAvgAggregateOutputType | null
    _sum: Gd_tokenSumAggregateOutputType | null
    _min: Gd_tokenMinAggregateOutputType | null
    _max: Gd_tokenMaxAggregateOutputType | null
  }

  type GetGd_tokenGroupByPayload<T extends Gd_tokenGroupByArgs> = Promise<
    Array<
      PickArray<Gd_tokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gd_tokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gd_tokenGroupByOutputType[P]>
            : GetScalarType<T[P], Gd_tokenGroupByOutputType[P]>
        }
      >
    >


  export type gd_tokenSelect = {
    access_token?: boolean
    user_id?: boolean
    referesh_token?: boolean
    token_create_at?: boolean
    token_expired_at?: boolean
    user?: boolean | gd_userArgs
  }

  export type gd_tokenInclude = {
    user?: boolean | gd_userArgs
  }

  export type gd_tokenGetPayload<
    S extends boolean | null | undefined | gd_tokenArgs,
    U = keyof S
      > = S extends true
        ? gd_token
    : S extends undefined
    ? never
    : S extends gd_tokenArgs | gd_tokenFindManyArgs
    ?'include' extends U
    ? gd_token  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user'
        ? gd_userGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof gd_token ?gd_token [P]
  : 
          P extends 'user'
        ? gd_userGetPayload<S['select'][P]> | null : never
  } 
    : gd_token
  : gd_token


  type gd_tokenCountArgs = Merge<
    Omit<gd_tokenFindManyArgs, 'select' | 'include'> & {
      select?: Gd_tokenCountAggregateInputType | true
    }
  >

  export interface gd_tokenDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Gd_token that matches the filter.
     * @param {gd_tokenFindUniqueArgs} args - Arguments to find a Gd_token
     * @example
     * // Get one Gd_token
     * const gd_token = await prisma.gd_token.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gd_tokenFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gd_tokenFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gd_token'> extends True ? CheckSelect<T, Prisma__gd_tokenClient<gd_token>, Prisma__gd_tokenClient<gd_tokenGetPayload<T>>> : CheckSelect<T, Prisma__gd_tokenClient<gd_token | null >, Prisma__gd_tokenClient<gd_tokenGetPayload<T> | null >>

    /**
     * Find the first Gd_token that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_tokenFindFirstArgs} args - Arguments to find a Gd_token
     * @example
     * // Get one Gd_token
     * const gd_token = await prisma.gd_token.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gd_tokenFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gd_tokenFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gd_token'> extends True ? CheckSelect<T, Prisma__gd_tokenClient<gd_token>, Prisma__gd_tokenClient<gd_tokenGetPayload<T>>> : CheckSelect<T, Prisma__gd_tokenClient<gd_token | null >, Prisma__gd_tokenClient<gd_tokenGetPayload<T> | null >>

    /**
     * Find zero or more Gd_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_tokenFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gd_tokens
     * const gd_tokens = await prisma.gd_token.findMany()
     * 
     * // Get first 10 Gd_tokens
     * const gd_tokens = await prisma.gd_token.findMany({ take: 10 })
     * 
     * // Only select the `access_token`
     * const gd_tokenWithAccess_tokenOnly = await prisma.gd_token.findMany({ select: { access_token: true } })
     * 
    **/
    findMany<T extends gd_tokenFindManyArgs>(
      args?: SelectSubset<T, gd_tokenFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<gd_token>>, PrismaPromise<Array<gd_tokenGetPayload<T>>>>

    /**
     * Create a Gd_token.
     * @param {gd_tokenCreateArgs} args - Arguments to create a Gd_token.
     * @example
     * // Create one Gd_token
     * const Gd_token = await prisma.gd_token.create({
     *   data: {
     *     // ... data to create a Gd_token
     *   }
     * })
     * 
    **/
    create<T extends gd_tokenCreateArgs>(
      args: SelectSubset<T, gd_tokenCreateArgs>
    ): CheckSelect<T, Prisma__gd_tokenClient<gd_token>, Prisma__gd_tokenClient<gd_tokenGetPayload<T>>>

    /**
     * Create many Gd_tokens.
     *     @param {gd_tokenCreateManyArgs} args - Arguments to create many Gd_tokens.
     *     @example
     *     // Create many Gd_tokens
     *     const gd_token = await prisma.gd_token.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gd_tokenCreateManyArgs>(
      args?: SelectSubset<T, gd_tokenCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gd_token.
     * @param {gd_tokenDeleteArgs} args - Arguments to delete one Gd_token.
     * @example
     * // Delete one Gd_token
     * const Gd_token = await prisma.gd_token.delete({
     *   where: {
     *     // ... filter to delete one Gd_token
     *   }
     * })
     * 
    **/
    delete<T extends gd_tokenDeleteArgs>(
      args: SelectSubset<T, gd_tokenDeleteArgs>
    ): CheckSelect<T, Prisma__gd_tokenClient<gd_token>, Prisma__gd_tokenClient<gd_tokenGetPayload<T>>>

    /**
     * Update one Gd_token.
     * @param {gd_tokenUpdateArgs} args - Arguments to update one Gd_token.
     * @example
     * // Update one Gd_token
     * const gd_token = await prisma.gd_token.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gd_tokenUpdateArgs>(
      args: SelectSubset<T, gd_tokenUpdateArgs>
    ): CheckSelect<T, Prisma__gd_tokenClient<gd_token>, Prisma__gd_tokenClient<gd_tokenGetPayload<T>>>

    /**
     * Delete zero or more Gd_tokens.
     * @param {gd_tokenDeleteManyArgs} args - Arguments to filter Gd_tokens to delete.
     * @example
     * // Delete a few Gd_tokens
     * const { count } = await prisma.gd_token.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gd_tokenDeleteManyArgs>(
      args?: SelectSubset<T, gd_tokenDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gd_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_tokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gd_tokens
     * const gd_token = await prisma.gd_token.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gd_tokenUpdateManyArgs>(
      args: SelectSubset<T, gd_tokenUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gd_token.
     * @param {gd_tokenUpsertArgs} args - Arguments to update or create a Gd_token.
     * @example
     * // Update or create a Gd_token
     * const gd_token = await prisma.gd_token.upsert({
     *   create: {
     *     // ... data to create a Gd_token
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gd_token we want to update
     *   }
     * })
    **/
    upsert<T extends gd_tokenUpsertArgs>(
      args: SelectSubset<T, gd_tokenUpsertArgs>
    ): CheckSelect<T, Prisma__gd_tokenClient<gd_token>, Prisma__gd_tokenClient<gd_tokenGetPayload<T>>>

    /**
     * Count the number of Gd_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_tokenCountArgs} args - Arguments to filter Gd_tokens to count.
     * @example
     * // Count the number of Gd_tokens
     * const count = await prisma.gd_token.count({
     *   where: {
     *     // ... the filter for the Gd_tokens we want to count
     *   }
     * })
    **/
    count<T extends gd_tokenCountArgs>(
      args?: Subset<T, gd_tokenCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gd_tokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gd_token.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_tokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gd_tokenAggregateArgs>(args: Subset<T, Gd_tokenAggregateArgs>): PrismaPromise<GetGd_tokenAggregateType<T>>

    /**
     * Group by Gd_token.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_tokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gd_tokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gd_tokenGroupByArgs['orderBy'] }
        : { orderBy?: Gd_tokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gd_tokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGd_tokenGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for gd_token.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gd_tokenClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user<T extends gd_userArgs = {}>(args?: Subset<T, gd_userArgs>): CheckSelect<T, Prisma__gd_userClient<gd_user | null >, Prisma__gd_userClient<gd_userGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * gd_token findUnique
   */
  export type gd_tokenFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the gd_token
     * 
    **/
    select?: gd_tokenSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_tokenInclude | null
    /**
     * Throw an Error if a gd_token can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_token to fetch.
     * 
    **/
    where: gd_tokenWhereUniqueInput
  }


  /**
   * gd_token findFirst
   */
  export type gd_tokenFindFirstArgs = {
    /**
     * Select specific fields to fetch from the gd_token
     * 
    **/
    select?: gd_tokenSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_tokenInclude | null
    /**
     * Throw an Error if a gd_token can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_token to fetch.
     * 
    **/
    where?: gd_tokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_tokens to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_tokenOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gd_tokens.
     * 
    **/
    cursor?: gd_tokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_tokens from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_tokens.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gd_tokens.
     * 
    **/
    distinct?: Enumerable<Gd_tokenScalarFieldEnum>
  }


  /**
   * gd_token findMany
   */
  export type gd_tokenFindManyArgs = {
    /**
     * Select specific fields to fetch from the gd_token
     * 
    **/
    select?: gd_tokenSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_tokenInclude | null
    /**
     * Filter, which gd_tokens to fetch.
     * 
    **/
    where?: gd_tokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_tokens to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_tokenOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gd_tokens.
     * 
    **/
    cursor?: gd_tokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_tokens from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_tokens.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gd_tokenScalarFieldEnum>
  }


  /**
   * gd_token create
   */
  export type gd_tokenCreateArgs = {
    /**
     * Select specific fields to fetch from the gd_token
     * 
    **/
    select?: gd_tokenSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_tokenInclude | null
    /**
     * The data needed to create a gd_token.
     * 
    **/
    data: XOR<gd_tokenCreateInput, gd_tokenUncheckedCreateInput>
  }


  /**
   * gd_token createMany
   */
  export type gd_tokenCreateManyArgs = {
    data: Enumerable<gd_tokenCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gd_token update
   */
  export type gd_tokenUpdateArgs = {
    /**
     * Select specific fields to fetch from the gd_token
     * 
    **/
    select?: gd_tokenSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_tokenInclude | null
    /**
     * The data needed to update a gd_token.
     * 
    **/
    data: XOR<gd_tokenUpdateInput, gd_tokenUncheckedUpdateInput>
    /**
     * Choose, which gd_token to update.
     * 
    **/
    where: gd_tokenWhereUniqueInput
  }


  /**
   * gd_token updateMany
   */
  export type gd_tokenUpdateManyArgs = {
    data: XOR<gd_tokenUpdateManyMutationInput, gd_tokenUncheckedUpdateManyInput>
    where?: gd_tokenWhereInput
  }


  /**
   * gd_token upsert
   */
  export type gd_tokenUpsertArgs = {
    /**
     * Select specific fields to fetch from the gd_token
     * 
    **/
    select?: gd_tokenSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_tokenInclude | null
    /**
     * The filter to search for the gd_token to update in case it exists.
     * 
    **/
    where: gd_tokenWhereUniqueInput
    /**
     * In case the gd_token found by the `where` argument doesn't exist, create a new gd_token with this data.
     * 
    **/
    create: XOR<gd_tokenCreateInput, gd_tokenUncheckedCreateInput>
    /**
     * In case the gd_token was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<gd_tokenUpdateInput, gd_tokenUncheckedUpdateInput>
  }


  /**
   * gd_token delete
   */
  export type gd_tokenDeleteArgs = {
    /**
     * Select specific fields to fetch from the gd_token
     * 
    **/
    select?: gd_tokenSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_tokenInclude | null
    /**
     * Filter which gd_token to delete.
     * 
    **/
    where: gd_tokenWhereUniqueInput
  }


  /**
   * gd_token deleteMany
   */
  export type gd_tokenDeleteManyArgs = {
    where?: gd_tokenWhereInput
  }


  /**
   * gd_token without action
   */
  export type gd_tokenArgs = {
    /**
     * Select specific fields to fetch from the gd_token
     * 
    **/
    select?: gd_tokenSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_tokenInclude | null
  }



  /**
   * Model gd_role
   */


  export type AggregateGd_role = {
    _count: Gd_roleCountAggregateOutputType | null
    _avg: Gd_roleAvgAggregateOutputType | null
    _sum: Gd_roleSumAggregateOutputType | null
    _min: Gd_roleMinAggregateOutputType | null
    _max: Gd_roleMaxAggregateOutputType | null
  }

  export type Gd_roleAvgAggregateOutputType = {
    role_id: number | null
    role_create_by: number | null
    role_update_by: number | null
  }

  export type Gd_roleSumAggregateOutputType = {
    role_id: number | null
    role_create_by: number | null
    role_update_by: number | null
  }

  export type Gd_roleMinAggregateOutputType = {
    role_id: number | null
    role_name: string | null
    role_create_date: Date | null
    role_update_date: Date | null
    role_create_by: number | null
    role_update_by: number | null
  }

  export type Gd_roleMaxAggregateOutputType = {
    role_id: number | null
    role_name: string | null
    role_create_date: Date | null
    role_update_date: Date | null
    role_create_by: number | null
    role_update_by: number | null
  }

  export type Gd_roleCountAggregateOutputType = {
    role_id: number
    role_name: number
    role_create_date: number
    role_update_date: number
    role_create_by: number
    role_update_by: number
    _all: number
  }


  export type Gd_roleAvgAggregateInputType = {
    role_id?: true
    role_create_by?: true
    role_update_by?: true
  }

  export type Gd_roleSumAggregateInputType = {
    role_id?: true
    role_create_by?: true
    role_update_by?: true
  }

  export type Gd_roleMinAggregateInputType = {
    role_id?: true
    role_name?: true
    role_create_date?: true
    role_update_date?: true
    role_create_by?: true
    role_update_by?: true
  }

  export type Gd_roleMaxAggregateInputType = {
    role_id?: true
    role_name?: true
    role_create_date?: true
    role_update_date?: true
    role_create_by?: true
    role_update_by?: true
  }

  export type Gd_roleCountAggregateInputType = {
    role_id?: true
    role_name?: true
    role_create_date?: true
    role_update_date?: true
    role_create_by?: true
    role_update_by?: true
    _all?: true
  }

  export type Gd_roleAggregateArgs = {
    /**
     * Filter which gd_role to aggregate.
     * 
    **/
    where?: gd_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_roles to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_roleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: gd_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_roles from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_roles.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gd_roles
    **/
    _count?: true | Gd_roleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gd_roleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gd_roleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gd_roleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gd_roleMaxAggregateInputType
  }

  export type GetGd_roleAggregateType<T extends Gd_roleAggregateArgs> = {
        [P in keyof T & keyof AggregateGd_role]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGd_role[P]>
      : GetScalarType<T[P], AggregateGd_role[P]>
  }




  export type Gd_roleGroupByArgs = {
    where?: gd_roleWhereInput
    orderBy?: Enumerable<gd_roleOrderByWithAggregationInput>
    by: Array<Gd_roleScalarFieldEnum>
    having?: gd_roleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gd_roleCountAggregateInputType | true
    _avg?: Gd_roleAvgAggregateInputType
    _sum?: Gd_roleSumAggregateInputType
    _min?: Gd_roleMinAggregateInputType
    _max?: Gd_roleMaxAggregateInputType
  }


  export type Gd_roleGroupByOutputType = {
    role_id: number
    role_name: string
    role_create_date: Date | null
    role_update_date: Date | null
    role_create_by: number | null
    role_update_by: number | null
    _count: Gd_roleCountAggregateOutputType | null
    _avg: Gd_roleAvgAggregateOutputType | null
    _sum: Gd_roleSumAggregateOutputType | null
    _min: Gd_roleMinAggregateOutputType | null
    _max: Gd_roleMaxAggregateOutputType | null
  }

  type GetGd_roleGroupByPayload<T extends Gd_roleGroupByArgs> = Promise<
    Array<
      PickArray<Gd_roleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gd_roleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gd_roleGroupByOutputType[P]>
            : GetScalarType<T[P], Gd_roleGroupByOutputType[P]>
        }
      >
    >


  export type gd_roleSelect = {
    role_id?: boolean
    role_name?: boolean
    role_create_date?: boolean
    role_update_date?: boolean
    role_create_by?: boolean
    role_update_by?: boolean
    user_role?: boolean | gd_user_roleFindManyArgs
    _count?: boolean | Gd_roleCountOutputTypeArgs
  }

  export type gd_roleInclude = {
    user_role?: boolean | gd_user_roleFindManyArgs
    _count?: boolean | Gd_roleCountOutputTypeArgs
  }

  export type gd_roleGetPayload<
    S extends boolean | null | undefined | gd_roleArgs,
    U = keyof S
      > = S extends true
        ? gd_role
    : S extends undefined
    ? never
    : S extends gd_roleArgs | gd_roleFindManyArgs
    ?'include' extends U
    ? gd_role  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user_role'
        ? Array < gd_user_roleGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? Gd_roleCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof gd_role ?gd_role [P]
  : 
          P extends 'user_role'
        ? Array < gd_user_roleGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? Gd_roleCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : gd_role
  : gd_role


  type gd_roleCountArgs = Merge<
    Omit<gd_roleFindManyArgs, 'select' | 'include'> & {
      select?: Gd_roleCountAggregateInputType | true
    }
  >

  export interface gd_roleDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Gd_role that matches the filter.
     * @param {gd_roleFindUniqueArgs} args - Arguments to find a Gd_role
     * @example
     * // Get one Gd_role
     * const gd_role = await prisma.gd_role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gd_roleFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gd_roleFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gd_role'> extends True ? CheckSelect<T, Prisma__gd_roleClient<gd_role>, Prisma__gd_roleClient<gd_roleGetPayload<T>>> : CheckSelect<T, Prisma__gd_roleClient<gd_role | null >, Prisma__gd_roleClient<gd_roleGetPayload<T> | null >>

    /**
     * Find the first Gd_role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_roleFindFirstArgs} args - Arguments to find a Gd_role
     * @example
     * // Get one Gd_role
     * const gd_role = await prisma.gd_role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gd_roleFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gd_roleFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gd_role'> extends True ? CheckSelect<T, Prisma__gd_roleClient<gd_role>, Prisma__gd_roleClient<gd_roleGetPayload<T>>> : CheckSelect<T, Prisma__gd_roleClient<gd_role | null >, Prisma__gd_roleClient<gd_roleGetPayload<T> | null >>

    /**
     * Find zero or more Gd_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_roleFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gd_roles
     * const gd_roles = await prisma.gd_role.findMany()
     * 
     * // Get first 10 Gd_roles
     * const gd_roles = await prisma.gd_role.findMany({ take: 10 })
     * 
     * // Only select the `role_id`
     * const gd_roleWithRole_idOnly = await prisma.gd_role.findMany({ select: { role_id: true } })
     * 
    **/
    findMany<T extends gd_roleFindManyArgs>(
      args?: SelectSubset<T, gd_roleFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<gd_role>>, PrismaPromise<Array<gd_roleGetPayload<T>>>>

    /**
     * Create a Gd_role.
     * @param {gd_roleCreateArgs} args - Arguments to create a Gd_role.
     * @example
     * // Create one Gd_role
     * const Gd_role = await prisma.gd_role.create({
     *   data: {
     *     // ... data to create a Gd_role
     *   }
     * })
     * 
    **/
    create<T extends gd_roleCreateArgs>(
      args: SelectSubset<T, gd_roleCreateArgs>
    ): CheckSelect<T, Prisma__gd_roleClient<gd_role>, Prisma__gd_roleClient<gd_roleGetPayload<T>>>

    /**
     * Create many Gd_roles.
     *     @param {gd_roleCreateManyArgs} args - Arguments to create many Gd_roles.
     *     @example
     *     // Create many Gd_roles
     *     const gd_role = await prisma.gd_role.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gd_roleCreateManyArgs>(
      args?: SelectSubset<T, gd_roleCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gd_role.
     * @param {gd_roleDeleteArgs} args - Arguments to delete one Gd_role.
     * @example
     * // Delete one Gd_role
     * const Gd_role = await prisma.gd_role.delete({
     *   where: {
     *     // ... filter to delete one Gd_role
     *   }
     * })
     * 
    **/
    delete<T extends gd_roleDeleteArgs>(
      args: SelectSubset<T, gd_roleDeleteArgs>
    ): CheckSelect<T, Prisma__gd_roleClient<gd_role>, Prisma__gd_roleClient<gd_roleGetPayload<T>>>

    /**
     * Update one Gd_role.
     * @param {gd_roleUpdateArgs} args - Arguments to update one Gd_role.
     * @example
     * // Update one Gd_role
     * const gd_role = await prisma.gd_role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gd_roleUpdateArgs>(
      args: SelectSubset<T, gd_roleUpdateArgs>
    ): CheckSelect<T, Prisma__gd_roleClient<gd_role>, Prisma__gd_roleClient<gd_roleGetPayload<T>>>

    /**
     * Delete zero or more Gd_roles.
     * @param {gd_roleDeleteManyArgs} args - Arguments to filter Gd_roles to delete.
     * @example
     * // Delete a few Gd_roles
     * const { count } = await prisma.gd_role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gd_roleDeleteManyArgs>(
      args?: SelectSubset<T, gd_roleDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gd_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_roleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gd_roles
     * const gd_role = await prisma.gd_role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gd_roleUpdateManyArgs>(
      args: SelectSubset<T, gd_roleUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gd_role.
     * @param {gd_roleUpsertArgs} args - Arguments to update or create a Gd_role.
     * @example
     * // Update or create a Gd_role
     * const gd_role = await prisma.gd_role.upsert({
     *   create: {
     *     // ... data to create a Gd_role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gd_role we want to update
     *   }
     * })
    **/
    upsert<T extends gd_roleUpsertArgs>(
      args: SelectSubset<T, gd_roleUpsertArgs>
    ): CheckSelect<T, Prisma__gd_roleClient<gd_role>, Prisma__gd_roleClient<gd_roleGetPayload<T>>>

    /**
     * Count the number of Gd_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_roleCountArgs} args - Arguments to filter Gd_roles to count.
     * @example
     * // Count the number of Gd_roles
     * const count = await prisma.gd_role.count({
     *   where: {
     *     // ... the filter for the Gd_roles we want to count
     *   }
     * })
    **/
    count<T extends gd_roleCountArgs>(
      args?: Subset<T, gd_roleCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gd_roleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gd_role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_roleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gd_roleAggregateArgs>(args: Subset<T, Gd_roleAggregateArgs>): PrismaPromise<GetGd_roleAggregateType<T>>

    /**
     * Group by Gd_role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_roleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gd_roleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gd_roleGroupByArgs['orderBy'] }
        : { orderBy?: Gd_roleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gd_roleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGd_roleGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for gd_role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gd_roleClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user_role<T extends gd_user_roleFindManyArgs = {}>(args?: Subset<T, gd_user_roleFindManyArgs>): CheckSelect<T, PrismaPromise<Array<gd_user_role>>, PrismaPromise<Array<gd_user_roleGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * gd_role findUnique
   */
  export type gd_roleFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the gd_role
     * 
    **/
    select?: gd_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_roleInclude | null
    /**
     * Throw an Error if a gd_role can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_role to fetch.
     * 
    **/
    where: gd_roleWhereUniqueInput
  }


  /**
   * gd_role findFirst
   */
  export type gd_roleFindFirstArgs = {
    /**
     * Select specific fields to fetch from the gd_role
     * 
    **/
    select?: gd_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_roleInclude | null
    /**
     * Throw an Error if a gd_role can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_role to fetch.
     * 
    **/
    where?: gd_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_roles to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_roleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gd_roles.
     * 
    **/
    cursor?: gd_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_roles from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_roles.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gd_roles.
     * 
    **/
    distinct?: Enumerable<Gd_roleScalarFieldEnum>
  }


  /**
   * gd_role findMany
   */
  export type gd_roleFindManyArgs = {
    /**
     * Select specific fields to fetch from the gd_role
     * 
    **/
    select?: gd_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_roleInclude | null
    /**
     * Filter, which gd_roles to fetch.
     * 
    **/
    where?: gd_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_roles to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_roleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gd_roles.
     * 
    **/
    cursor?: gd_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_roles from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_roles.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gd_roleScalarFieldEnum>
  }


  /**
   * gd_role create
   */
  export type gd_roleCreateArgs = {
    /**
     * Select specific fields to fetch from the gd_role
     * 
    **/
    select?: gd_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_roleInclude | null
    /**
     * The data needed to create a gd_role.
     * 
    **/
    data: XOR<gd_roleCreateInput, gd_roleUncheckedCreateInput>
  }


  /**
   * gd_role createMany
   */
  export type gd_roleCreateManyArgs = {
    data: Enumerable<gd_roleCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gd_role update
   */
  export type gd_roleUpdateArgs = {
    /**
     * Select specific fields to fetch from the gd_role
     * 
    **/
    select?: gd_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_roleInclude | null
    /**
     * The data needed to update a gd_role.
     * 
    **/
    data: XOR<gd_roleUpdateInput, gd_roleUncheckedUpdateInput>
    /**
     * Choose, which gd_role to update.
     * 
    **/
    where: gd_roleWhereUniqueInput
  }


  /**
   * gd_role updateMany
   */
  export type gd_roleUpdateManyArgs = {
    data: XOR<gd_roleUpdateManyMutationInput, gd_roleUncheckedUpdateManyInput>
    where?: gd_roleWhereInput
  }


  /**
   * gd_role upsert
   */
  export type gd_roleUpsertArgs = {
    /**
     * Select specific fields to fetch from the gd_role
     * 
    **/
    select?: gd_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_roleInclude | null
    /**
     * The filter to search for the gd_role to update in case it exists.
     * 
    **/
    where: gd_roleWhereUniqueInput
    /**
     * In case the gd_role found by the `where` argument doesn't exist, create a new gd_role with this data.
     * 
    **/
    create: XOR<gd_roleCreateInput, gd_roleUncheckedCreateInput>
    /**
     * In case the gd_role was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<gd_roleUpdateInput, gd_roleUncheckedUpdateInput>
  }


  /**
   * gd_role delete
   */
  export type gd_roleDeleteArgs = {
    /**
     * Select specific fields to fetch from the gd_role
     * 
    **/
    select?: gd_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_roleInclude | null
    /**
     * Filter which gd_role to delete.
     * 
    **/
    where: gd_roleWhereUniqueInput
  }


  /**
   * gd_role deleteMany
   */
  export type gd_roleDeleteManyArgs = {
    where?: gd_roleWhereInput
  }


  /**
   * gd_role without action
   */
  export type gd_roleArgs = {
    /**
     * Select specific fields to fetch from the gd_role
     * 
    **/
    select?: gd_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_roleInclude | null
  }



  /**
   * Model gd_user_role
   */


  export type AggregateGd_user_role = {
    _count: Gd_user_roleCountAggregateOutputType | null
    _avg: Gd_user_roleAvgAggregateOutputType | null
    _sum: Gd_user_roleSumAggregateOutputType | null
    _min: Gd_user_roleMinAggregateOutputType | null
    _max: Gd_user_roleMaxAggregateOutputType | null
  }

  export type Gd_user_roleAvgAggregateOutputType = {
    user_id: number | null
    role_id: number | null
    user_role_create_by: number | null
    user_role_update_by: number | null
  }

  export type Gd_user_roleSumAggregateOutputType = {
    user_id: number | null
    role_id: number | null
    user_role_create_by: number | null
    user_role_update_by: number | null
  }

  export type Gd_user_roleMinAggregateOutputType = {
    user_id: number | null
    role_id: number | null
    user_role_create_date: Date | null
    user_role_update_date: Date | null
    user_role_create_by: number | null
    user_role_update_by: number | null
  }

  export type Gd_user_roleMaxAggregateOutputType = {
    user_id: number | null
    role_id: number | null
    user_role_create_date: Date | null
    user_role_update_date: Date | null
    user_role_create_by: number | null
    user_role_update_by: number | null
  }

  export type Gd_user_roleCountAggregateOutputType = {
    user_id: number
    role_id: number
    user_role_create_date: number
    user_role_update_date: number
    user_role_create_by: number
    user_role_update_by: number
    _all: number
  }


  export type Gd_user_roleAvgAggregateInputType = {
    user_id?: true
    role_id?: true
    user_role_create_by?: true
    user_role_update_by?: true
  }

  export type Gd_user_roleSumAggregateInputType = {
    user_id?: true
    role_id?: true
    user_role_create_by?: true
    user_role_update_by?: true
  }

  export type Gd_user_roleMinAggregateInputType = {
    user_id?: true
    role_id?: true
    user_role_create_date?: true
    user_role_update_date?: true
    user_role_create_by?: true
    user_role_update_by?: true
  }

  export type Gd_user_roleMaxAggregateInputType = {
    user_id?: true
    role_id?: true
    user_role_create_date?: true
    user_role_update_date?: true
    user_role_create_by?: true
    user_role_update_by?: true
  }

  export type Gd_user_roleCountAggregateInputType = {
    user_id?: true
    role_id?: true
    user_role_create_date?: true
    user_role_update_date?: true
    user_role_create_by?: true
    user_role_update_by?: true
    _all?: true
  }

  export type Gd_user_roleAggregateArgs = {
    /**
     * Filter which gd_user_role to aggregate.
     * 
    **/
    where?: gd_user_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_user_roles to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_user_roleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: gd_user_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_user_roles from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_user_roles.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gd_user_roles
    **/
    _count?: true | Gd_user_roleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gd_user_roleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gd_user_roleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gd_user_roleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gd_user_roleMaxAggregateInputType
  }

  export type GetGd_user_roleAggregateType<T extends Gd_user_roleAggregateArgs> = {
        [P in keyof T & keyof AggregateGd_user_role]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGd_user_role[P]>
      : GetScalarType<T[P], AggregateGd_user_role[P]>
  }




  export type Gd_user_roleGroupByArgs = {
    where?: gd_user_roleWhereInput
    orderBy?: Enumerable<gd_user_roleOrderByWithAggregationInput>
    by: Array<Gd_user_roleScalarFieldEnum>
    having?: gd_user_roleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gd_user_roleCountAggregateInputType | true
    _avg?: Gd_user_roleAvgAggregateInputType
    _sum?: Gd_user_roleSumAggregateInputType
    _min?: Gd_user_roleMinAggregateInputType
    _max?: Gd_user_roleMaxAggregateInputType
  }


  export type Gd_user_roleGroupByOutputType = {
    user_id: number
    role_id: number
    user_role_create_date: Date | null
    user_role_update_date: Date | null
    user_role_create_by: number | null
    user_role_update_by: number | null
    _count: Gd_user_roleCountAggregateOutputType | null
    _avg: Gd_user_roleAvgAggregateOutputType | null
    _sum: Gd_user_roleSumAggregateOutputType | null
    _min: Gd_user_roleMinAggregateOutputType | null
    _max: Gd_user_roleMaxAggregateOutputType | null
  }

  type GetGd_user_roleGroupByPayload<T extends Gd_user_roleGroupByArgs> = Promise<
    Array<
      PickArray<Gd_user_roleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gd_user_roleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gd_user_roleGroupByOutputType[P]>
            : GetScalarType<T[P], Gd_user_roleGroupByOutputType[P]>
        }
      >
    >


  export type gd_user_roleSelect = {
    user_id?: boolean
    role_id?: boolean
    user_role_create_date?: boolean
    user_role_update_date?: boolean
    user_role_create_by?: boolean
    user_role_update_by?: boolean
    user?: boolean | gd_userArgs
    role?: boolean | gd_roleArgs
  }

  export type gd_user_roleInclude = {
    user?: boolean | gd_userArgs
    role?: boolean | gd_roleArgs
  }

  export type gd_user_roleGetPayload<
    S extends boolean | null | undefined | gd_user_roleArgs,
    U = keyof S
      > = S extends true
        ? gd_user_role
    : S extends undefined
    ? never
    : S extends gd_user_roleArgs | gd_user_roleFindManyArgs
    ?'include' extends U
    ? gd_user_role  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user'
        ? gd_userGetPayload<S['include'][P]> | null :
        P extends 'role'
        ? gd_roleGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof gd_user_role ?gd_user_role [P]
  : 
          P extends 'user'
        ? gd_userGetPayload<S['select'][P]> | null :
        P extends 'role'
        ? gd_roleGetPayload<S['select'][P]> | null : never
  } 
    : gd_user_role
  : gd_user_role


  type gd_user_roleCountArgs = Merge<
    Omit<gd_user_roleFindManyArgs, 'select' | 'include'> & {
      select?: Gd_user_roleCountAggregateInputType | true
    }
  >

  export interface gd_user_roleDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Gd_user_role that matches the filter.
     * @param {gd_user_roleFindUniqueArgs} args - Arguments to find a Gd_user_role
     * @example
     * // Get one Gd_user_role
     * const gd_user_role = await prisma.gd_user_role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gd_user_roleFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gd_user_roleFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gd_user_role'> extends True ? CheckSelect<T, Prisma__gd_user_roleClient<gd_user_role>, Prisma__gd_user_roleClient<gd_user_roleGetPayload<T>>> : CheckSelect<T, Prisma__gd_user_roleClient<gd_user_role | null >, Prisma__gd_user_roleClient<gd_user_roleGetPayload<T> | null >>

    /**
     * Find the first Gd_user_role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_user_roleFindFirstArgs} args - Arguments to find a Gd_user_role
     * @example
     * // Get one Gd_user_role
     * const gd_user_role = await prisma.gd_user_role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gd_user_roleFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gd_user_roleFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gd_user_role'> extends True ? CheckSelect<T, Prisma__gd_user_roleClient<gd_user_role>, Prisma__gd_user_roleClient<gd_user_roleGetPayload<T>>> : CheckSelect<T, Prisma__gd_user_roleClient<gd_user_role | null >, Prisma__gd_user_roleClient<gd_user_roleGetPayload<T> | null >>

    /**
     * Find zero or more Gd_user_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_user_roleFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gd_user_roles
     * const gd_user_roles = await prisma.gd_user_role.findMany()
     * 
     * // Get first 10 Gd_user_roles
     * const gd_user_roles = await prisma.gd_user_role.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const gd_user_roleWithUser_idOnly = await prisma.gd_user_role.findMany({ select: { user_id: true } })
     * 
    **/
    findMany<T extends gd_user_roleFindManyArgs>(
      args?: SelectSubset<T, gd_user_roleFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<gd_user_role>>, PrismaPromise<Array<gd_user_roleGetPayload<T>>>>

    /**
     * Create a Gd_user_role.
     * @param {gd_user_roleCreateArgs} args - Arguments to create a Gd_user_role.
     * @example
     * // Create one Gd_user_role
     * const Gd_user_role = await prisma.gd_user_role.create({
     *   data: {
     *     // ... data to create a Gd_user_role
     *   }
     * })
     * 
    **/
    create<T extends gd_user_roleCreateArgs>(
      args: SelectSubset<T, gd_user_roleCreateArgs>
    ): CheckSelect<T, Prisma__gd_user_roleClient<gd_user_role>, Prisma__gd_user_roleClient<gd_user_roleGetPayload<T>>>

    /**
     * Create many Gd_user_roles.
     *     @param {gd_user_roleCreateManyArgs} args - Arguments to create many Gd_user_roles.
     *     @example
     *     // Create many Gd_user_roles
     *     const gd_user_role = await prisma.gd_user_role.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gd_user_roleCreateManyArgs>(
      args?: SelectSubset<T, gd_user_roleCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gd_user_role.
     * @param {gd_user_roleDeleteArgs} args - Arguments to delete one Gd_user_role.
     * @example
     * // Delete one Gd_user_role
     * const Gd_user_role = await prisma.gd_user_role.delete({
     *   where: {
     *     // ... filter to delete one Gd_user_role
     *   }
     * })
     * 
    **/
    delete<T extends gd_user_roleDeleteArgs>(
      args: SelectSubset<T, gd_user_roleDeleteArgs>
    ): CheckSelect<T, Prisma__gd_user_roleClient<gd_user_role>, Prisma__gd_user_roleClient<gd_user_roleGetPayload<T>>>

    /**
     * Update one Gd_user_role.
     * @param {gd_user_roleUpdateArgs} args - Arguments to update one Gd_user_role.
     * @example
     * // Update one Gd_user_role
     * const gd_user_role = await prisma.gd_user_role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gd_user_roleUpdateArgs>(
      args: SelectSubset<T, gd_user_roleUpdateArgs>
    ): CheckSelect<T, Prisma__gd_user_roleClient<gd_user_role>, Prisma__gd_user_roleClient<gd_user_roleGetPayload<T>>>

    /**
     * Delete zero or more Gd_user_roles.
     * @param {gd_user_roleDeleteManyArgs} args - Arguments to filter Gd_user_roles to delete.
     * @example
     * // Delete a few Gd_user_roles
     * const { count } = await prisma.gd_user_role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gd_user_roleDeleteManyArgs>(
      args?: SelectSubset<T, gd_user_roleDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gd_user_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_user_roleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gd_user_roles
     * const gd_user_role = await prisma.gd_user_role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gd_user_roleUpdateManyArgs>(
      args: SelectSubset<T, gd_user_roleUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gd_user_role.
     * @param {gd_user_roleUpsertArgs} args - Arguments to update or create a Gd_user_role.
     * @example
     * // Update or create a Gd_user_role
     * const gd_user_role = await prisma.gd_user_role.upsert({
     *   create: {
     *     // ... data to create a Gd_user_role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gd_user_role we want to update
     *   }
     * })
    **/
    upsert<T extends gd_user_roleUpsertArgs>(
      args: SelectSubset<T, gd_user_roleUpsertArgs>
    ): CheckSelect<T, Prisma__gd_user_roleClient<gd_user_role>, Prisma__gd_user_roleClient<gd_user_roleGetPayload<T>>>

    /**
     * Count the number of Gd_user_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_user_roleCountArgs} args - Arguments to filter Gd_user_roles to count.
     * @example
     * // Count the number of Gd_user_roles
     * const count = await prisma.gd_user_role.count({
     *   where: {
     *     // ... the filter for the Gd_user_roles we want to count
     *   }
     * })
    **/
    count<T extends gd_user_roleCountArgs>(
      args?: Subset<T, gd_user_roleCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gd_user_roleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gd_user_role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_user_roleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gd_user_roleAggregateArgs>(args: Subset<T, Gd_user_roleAggregateArgs>): PrismaPromise<GetGd_user_roleAggregateType<T>>

    /**
     * Group by Gd_user_role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_user_roleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gd_user_roleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gd_user_roleGroupByArgs['orderBy'] }
        : { orderBy?: Gd_user_roleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gd_user_roleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGd_user_roleGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for gd_user_role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gd_user_roleClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user<T extends gd_userArgs = {}>(args?: Subset<T, gd_userArgs>): CheckSelect<T, Prisma__gd_userClient<gd_user | null >, Prisma__gd_userClient<gd_userGetPayload<T> | null >>;

    role<T extends gd_roleArgs = {}>(args?: Subset<T, gd_roleArgs>): CheckSelect<T, Prisma__gd_roleClient<gd_role | null >, Prisma__gd_roleClient<gd_roleGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * gd_user_role findUnique
   */
  export type gd_user_roleFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the gd_user_role
     * 
    **/
    select?: gd_user_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_roleInclude | null
    /**
     * Throw an Error if a gd_user_role can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_user_role to fetch.
     * 
    **/
    where: gd_user_roleWhereUniqueInput
  }


  /**
   * gd_user_role findFirst
   */
  export type gd_user_roleFindFirstArgs = {
    /**
     * Select specific fields to fetch from the gd_user_role
     * 
    **/
    select?: gd_user_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_roleInclude | null
    /**
     * Throw an Error if a gd_user_role can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_user_role to fetch.
     * 
    **/
    where?: gd_user_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_user_roles to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_user_roleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gd_user_roles.
     * 
    **/
    cursor?: gd_user_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_user_roles from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_user_roles.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gd_user_roles.
     * 
    **/
    distinct?: Enumerable<Gd_user_roleScalarFieldEnum>
  }


  /**
   * gd_user_role findMany
   */
  export type gd_user_roleFindManyArgs = {
    /**
     * Select specific fields to fetch from the gd_user_role
     * 
    **/
    select?: gd_user_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_roleInclude | null
    /**
     * Filter, which gd_user_roles to fetch.
     * 
    **/
    where?: gd_user_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_user_roles to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_user_roleOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gd_user_roles.
     * 
    **/
    cursor?: gd_user_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_user_roles from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_user_roles.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gd_user_roleScalarFieldEnum>
  }


  /**
   * gd_user_role create
   */
  export type gd_user_roleCreateArgs = {
    /**
     * Select specific fields to fetch from the gd_user_role
     * 
    **/
    select?: gd_user_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_roleInclude | null
    /**
     * The data needed to create a gd_user_role.
     * 
    **/
    data: XOR<gd_user_roleCreateInput, gd_user_roleUncheckedCreateInput>
  }


  /**
   * gd_user_role createMany
   */
  export type gd_user_roleCreateManyArgs = {
    data: Enumerable<gd_user_roleCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gd_user_role update
   */
  export type gd_user_roleUpdateArgs = {
    /**
     * Select specific fields to fetch from the gd_user_role
     * 
    **/
    select?: gd_user_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_roleInclude | null
    /**
     * The data needed to update a gd_user_role.
     * 
    **/
    data: XOR<gd_user_roleUpdateInput, gd_user_roleUncheckedUpdateInput>
    /**
     * Choose, which gd_user_role to update.
     * 
    **/
    where: gd_user_roleWhereUniqueInput
  }


  /**
   * gd_user_role updateMany
   */
  export type gd_user_roleUpdateManyArgs = {
    data: XOR<gd_user_roleUpdateManyMutationInput, gd_user_roleUncheckedUpdateManyInput>
    where?: gd_user_roleWhereInput
  }


  /**
   * gd_user_role upsert
   */
  export type gd_user_roleUpsertArgs = {
    /**
     * Select specific fields to fetch from the gd_user_role
     * 
    **/
    select?: gd_user_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_roleInclude | null
    /**
     * The filter to search for the gd_user_role to update in case it exists.
     * 
    **/
    where: gd_user_roleWhereUniqueInput
    /**
     * In case the gd_user_role found by the `where` argument doesn't exist, create a new gd_user_role with this data.
     * 
    **/
    create: XOR<gd_user_roleCreateInput, gd_user_roleUncheckedCreateInput>
    /**
     * In case the gd_user_role was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<gd_user_roleUpdateInput, gd_user_roleUncheckedUpdateInput>
  }


  /**
   * gd_user_role delete
   */
  export type gd_user_roleDeleteArgs = {
    /**
     * Select specific fields to fetch from the gd_user_role
     * 
    **/
    select?: gd_user_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_roleInclude | null
    /**
     * Filter which gd_user_role to delete.
     * 
    **/
    where: gd_user_roleWhereUniqueInput
  }


  /**
   * gd_user_role deleteMany
   */
  export type gd_user_roleDeleteManyArgs = {
    where?: gd_user_roleWhereInput
  }


  /**
   * gd_user_role without action
   */
  export type gd_user_roleArgs = {
    /**
     * Select specific fields to fetch from the gd_user_role
     * 
    **/
    select?: gd_user_roleSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_roleInclude | null
  }



  /**
   * Model gd_project
   */


  export type AggregateGd_project = {
    _count: Gd_projectCountAggregateOutputType | null
    _avg: Gd_projectAvgAggregateOutputType | null
    _sum: Gd_projectSumAggregateOutputType | null
    _min: Gd_projectMinAggregateOutputType | null
    _max: Gd_projectMaxAggregateOutputType | null
  }

  export type Gd_projectAvgAggregateOutputType = {
    project_id: number | null
    project_create_by: number | null
    project_update_by: number | null
    project_deleted: number | null
  }

  export type Gd_projectSumAggregateOutputType = {
    project_id: number | null
    project_create_by: number | null
    project_update_by: number | null
    project_deleted: number | null
  }

  export type Gd_projectMinAggregateOutputType = {
    project_id: number | null
    project_name: string | null
    project_revision: string | null
    project_create_date: Date | null
    project_update_date: Date | null
    project_create_by: number | null
    project_update_by: number | null
    project_deleted: number | null
    project_deleted_at: Date | null
  }

  export type Gd_projectMaxAggregateOutputType = {
    project_id: number | null
    project_name: string | null
    project_revision: string | null
    project_create_date: Date | null
    project_update_date: Date | null
    project_create_by: number | null
    project_update_by: number | null
    project_deleted: number | null
    project_deleted_at: Date | null
  }

  export type Gd_projectCountAggregateOutputType = {
    project_id: number
    project_name: number
    project_revision: number
    project_create_date: number
    project_update_date: number
    project_create_by: number
    project_update_by: number
    project_deleted: number
    project_deleted_at: number
    _all: number
  }


  export type Gd_projectAvgAggregateInputType = {
    project_id?: true
    project_create_by?: true
    project_update_by?: true
    project_deleted?: true
  }

  export type Gd_projectSumAggregateInputType = {
    project_id?: true
    project_create_by?: true
    project_update_by?: true
    project_deleted?: true
  }

  export type Gd_projectMinAggregateInputType = {
    project_id?: true
    project_name?: true
    project_revision?: true
    project_create_date?: true
    project_update_date?: true
    project_create_by?: true
    project_update_by?: true
    project_deleted?: true
    project_deleted_at?: true
  }

  export type Gd_projectMaxAggregateInputType = {
    project_id?: true
    project_name?: true
    project_revision?: true
    project_create_date?: true
    project_update_date?: true
    project_create_by?: true
    project_update_by?: true
    project_deleted?: true
    project_deleted_at?: true
  }

  export type Gd_projectCountAggregateInputType = {
    project_id?: true
    project_name?: true
    project_revision?: true
    project_create_date?: true
    project_update_date?: true
    project_create_by?: true
    project_update_by?: true
    project_deleted?: true
    project_deleted_at?: true
    _all?: true
  }

  export type Gd_projectAggregateArgs = {
    /**
     * Filter which gd_project to aggregate.
     * 
    **/
    where?: gd_projectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_projects to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_projectOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: gd_projectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_projects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gd_projects
    **/
    _count?: true | Gd_projectCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gd_projectAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gd_projectSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gd_projectMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gd_projectMaxAggregateInputType
  }

  export type GetGd_projectAggregateType<T extends Gd_projectAggregateArgs> = {
        [P in keyof T & keyof AggregateGd_project]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGd_project[P]>
      : GetScalarType<T[P], AggregateGd_project[P]>
  }




  export type Gd_projectGroupByArgs = {
    where?: gd_projectWhereInput
    orderBy?: Enumerable<gd_projectOrderByWithAggregationInput>
    by: Array<Gd_projectScalarFieldEnum>
    having?: gd_projectScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gd_projectCountAggregateInputType | true
    _avg?: Gd_projectAvgAggregateInputType
    _sum?: Gd_projectSumAggregateInputType
    _min?: Gd_projectMinAggregateInputType
    _max?: Gd_projectMaxAggregateInputType
  }


  export type Gd_projectGroupByOutputType = {
    project_id: number
    project_name: string | null
    project_revision: string | null
    project_create_date: Date | null
    project_update_date: Date | null
    project_create_by: number | null
    project_update_by: number | null
    project_deleted: number | null
    project_deleted_at: Date | null
    _count: Gd_projectCountAggregateOutputType | null
    _avg: Gd_projectAvgAggregateOutputType | null
    _sum: Gd_projectSumAggregateOutputType | null
    _min: Gd_projectMinAggregateOutputType | null
    _max: Gd_projectMaxAggregateOutputType | null
  }

  type GetGd_projectGroupByPayload<T extends Gd_projectGroupByArgs> = Promise<
    Array<
      PickArray<Gd_projectGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gd_projectGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gd_projectGroupByOutputType[P]>
            : GetScalarType<T[P], Gd_projectGroupByOutputType[P]>
        }
      >
    >


  export type gd_projectSelect = {
    project_id?: boolean
    project_name?: boolean
    project_revision?: boolean
    project_create_date?: boolean
    project_update_date?: boolean
    project_create_by?: boolean
    project_update_by?: boolean
    project_deleted?: boolean
    project_deleted_at?: boolean
    user_projects?: boolean | gd_user_projectFindManyArgs
    workflows?: boolean | gd_workflowFindManyArgs
    files?: boolean | gd_fileFindManyArgs
    _count?: boolean | Gd_projectCountOutputTypeArgs
  }

  export type gd_projectInclude = {
    user_projects?: boolean | gd_user_projectFindManyArgs
    workflows?: boolean | gd_workflowFindManyArgs
    files?: boolean | gd_fileFindManyArgs
    _count?: boolean | Gd_projectCountOutputTypeArgs
  }

  export type gd_projectGetPayload<
    S extends boolean | null | undefined | gd_projectArgs,
    U = keyof S
      > = S extends true
        ? gd_project
    : S extends undefined
    ? never
    : S extends gd_projectArgs | gd_projectFindManyArgs
    ?'include' extends U
    ? gd_project  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user_projects'
        ? Array < gd_user_projectGetPayload<S['include'][P]>>  :
        P extends 'workflows'
        ? Array < gd_workflowGetPayload<S['include'][P]>>  :
        P extends 'files'
        ? Array < gd_fileGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? Gd_projectCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof gd_project ?gd_project [P]
  : 
          P extends 'user_projects'
        ? Array < gd_user_projectGetPayload<S['select'][P]>>  :
        P extends 'workflows'
        ? Array < gd_workflowGetPayload<S['select'][P]>>  :
        P extends 'files'
        ? Array < gd_fileGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? Gd_projectCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : gd_project
  : gd_project


  type gd_projectCountArgs = Merge<
    Omit<gd_projectFindManyArgs, 'select' | 'include'> & {
      select?: Gd_projectCountAggregateInputType | true
    }
  >

  export interface gd_projectDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Gd_project that matches the filter.
     * @param {gd_projectFindUniqueArgs} args - Arguments to find a Gd_project
     * @example
     * // Get one Gd_project
     * const gd_project = await prisma.gd_project.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gd_projectFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gd_projectFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gd_project'> extends True ? CheckSelect<T, Prisma__gd_projectClient<gd_project>, Prisma__gd_projectClient<gd_projectGetPayload<T>>> : CheckSelect<T, Prisma__gd_projectClient<gd_project | null >, Prisma__gd_projectClient<gd_projectGetPayload<T> | null >>

    /**
     * Find the first Gd_project that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_projectFindFirstArgs} args - Arguments to find a Gd_project
     * @example
     * // Get one Gd_project
     * const gd_project = await prisma.gd_project.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gd_projectFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gd_projectFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gd_project'> extends True ? CheckSelect<T, Prisma__gd_projectClient<gd_project>, Prisma__gd_projectClient<gd_projectGetPayload<T>>> : CheckSelect<T, Prisma__gd_projectClient<gd_project | null >, Prisma__gd_projectClient<gd_projectGetPayload<T> | null >>

    /**
     * Find zero or more Gd_projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_projectFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gd_projects
     * const gd_projects = await prisma.gd_project.findMany()
     * 
     * // Get first 10 Gd_projects
     * const gd_projects = await prisma.gd_project.findMany({ take: 10 })
     * 
     * // Only select the `project_id`
     * const gd_projectWithProject_idOnly = await prisma.gd_project.findMany({ select: { project_id: true } })
     * 
    **/
    findMany<T extends gd_projectFindManyArgs>(
      args?: SelectSubset<T, gd_projectFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<gd_project>>, PrismaPromise<Array<gd_projectGetPayload<T>>>>

    /**
     * Create a Gd_project.
     * @param {gd_projectCreateArgs} args - Arguments to create a Gd_project.
     * @example
     * // Create one Gd_project
     * const Gd_project = await prisma.gd_project.create({
     *   data: {
     *     // ... data to create a Gd_project
     *   }
     * })
     * 
    **/
    create<T extends gd_projectCreateArgs>(
      args: SelectSubset<T, gd_projectCreateArgs>
    ): CheckSelect<T, Prisma__gd_projectClient<gd_project>, Prisma__gd_projectClient<gd_projectGetPayload<T>>>

    /**
     * Create many Gd_projects.
     *     @param {gd_projectCreateManyArgs} args - Arguments to create many Gd_projects.
     *     @example
     *     // Create many Gd_projects
     *     const gd_project = await prisma.gd_project.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gd_projectCreateManyArgs>(
      args?: SelectSubset<T, gd_projectCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gd_project.
     * @param {gd_projectDeleteArgs} args - Arguments to delete one Gd_project.
     * @example
     * // Delete one Gd_project
     * const Gd_project = await prisma.gd_project.delete({
     *   where: {
     *     // ... filter to delete one Gd_project
     *   }
     * })
     * 
    **/
    delete<T extends gd_projectDeleteArgs>(
      args: SelectSubset<T, gd_projectDeleteArgs>
    ): CheckSelect<T, Prisma__gd_projectClient<gd_project>, Prisma__gd_projectClient<gd_projectGetPayload<T>>>

    /**
     * Update one Gd_project.
     * @param {gd_projectUpdateArgs} args - Arguments to update one Gd_project.
     * @example
     * // Update one Gd_project
     * const gd_project = await prisma.gd_project.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gd_projectUpdateArgs>(
      args: SelectSubset<T, gd_projectUpdateArgs>
    ): CheckSelect<T, Prisma__gd_projectClient<gd_project>, Prisma__gd_projectClient<gd_projectGetPayload<T>>>

    /**
     * Delete zero or more Gd_projects.
     * @param {gd_projectDeleteManyArgs} args - Arguments to filter Gd_projects to delete.
     * @example
     * // Delete a few Gd_projects
     * const { count } = await prisma.gd_project.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gd_projectDeleteManyArgs>(
      args?: SelectSubset<T, gd_projectDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gd_projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_projectUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gd_projects
     * const gd_project = await prisma.gd_project.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gd_projectUpdateManyArgs>(
      args: SelectSubset<T, gd_projectUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gd_project.
     * @param {gd_projectUpsertArgs} args - Arguments to update or create a Gd_project.
     * @example
     * // Update or create a Gd_project
     * const gd_project = await prisma.gd_project.upsert({
     *   create: {
     *     // ... data to create a Gd_project
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gd_project we want to update
     *   }
     * })
    **/
    upsert<T extends gd_projectUpsertArgs>(
      args: SelectSubset<T, gd_projectUpsertArgs>
    ): CheckSelect<T, Prisma__gd_projectClient<gd_project>, Prisma__gd_projectClient<gd_projectGetPayload<T>>>

    /**
     * Count the number of Gd_projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_projectCountArgs} args - Arguments to filter Gd_projects to count.
     * @example
     * // Count the number of Gd_projects
     * const count = await prisma.gd_project.count({
     *   where: {
     *     // ... the filter for the Gd_projects we want to count
     *   }
     * })
    **/
    count<T extends gd_projectCountArgs>(
      args?: Subset<T, gd_projectCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gd_projectCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gd_project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_projectAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gd_projectAggregateArgs>(args: Subset<T, Gd_projectAggregateArgs>): PrismaPromise<GetGd_projectAggregateType<T>>

    /**
     * Group by Gd_project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_projectGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gd_projectGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gd_projectGroupByArgs['orderBy'] }
        : { orderBy?: Gd_projectGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gd_projectGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGd_projectGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for gd_project.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gd_projectClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user_projects<T extends gd_user_projectFindManyArgs = {}>(args?: Subset<T, gd_user_projectFindManyArgs>): CheckSelect<T, PrismaPromise<Array<gd_user_project>>, PrismaPromise<Array<gd_user_projectGetPayload<T>>>>;

    workflows<T extends gd_workflowFindManyArgs = {}>(args?: Subset<T, gd_workflowFindManyArgs>): CheckSelect<T, PrismaPromise<Array<gd_workflow>>, PrismaPromise<Array<gd_workflowGetPayload<T>>>>;

    files<T extends gd_fileFindManyArgs = {}>(args?: Subset<T, gd_fileFindManyArgs>): CheckSelect<T, PrismaPromise<Array<gd_file>>, PrismaPromise<Array<gd_fileGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * gd_project findUnique
   */
  export type gd_projectFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the gd_project
     * 
    **/
    select?: gd_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_projectInclude | null
    /**
     * Throw an Error if a gd_project can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_project to fetch.
     * 
    **/
    where: gd_projectWhereUniqueInput
  }


  /**
   * gd_project findFirst
   */
  export type gd_projectFindFirstArgs = {
    /**
     * Select specific fields to fetch from the gd_project
     * 
    **/
    select?: gd_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_projectInclude | null
    /**
     * Throw an Error if a gd_project can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_project to fetch.
     * 
    **/
    where?: gd_projectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_projects to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_projectOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gd_projects.
     * 
    **/
    cursor?: gd_projectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_projects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gd_projects.
     * 
    **/
    distinct?: Enumerable<Gd_projectScalarFieldEnum>
  }


  /**
   * gd_project findMany
   */
  export type gd_projectFindManyArgs = {
    /**
     * Select specific fields to fetch from the gd_project
     * 
    **/
    select?: gd_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_projectInclude | null
    /**
     * Filter, which gd_projects to fetch.
     * 
    **/
    where?: gd_projectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_projects to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_projectOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gd_projects.
     * 
    **/
    cursor?: gd_projectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_projects.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gd_projectScalarFieldEnum>
  }


  /**
   * gd_project create
   */
  export type gd_projectCreateArgs = {
    /**
     * Select specific fields to fetch from the gd_project
     * 
    **/
    select?: gd_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_projectInclude | null
    /**
     * The data needed to create a gd_project.
     * 
    **/
    data: XOR<gd_projectCreateInput, gd_projectUncheckedCreateInput>
  }


  /**
   * gd_project createMany
   */
  export type gd_projectCreateManyArgs = {
    data: Enumerable<gd_projectCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gd_project update
   */
  export type gd_projectUpdateArgs = {
    /**
     * Select specific fields to fetch from the gd_project
     * 
    **/
    select?: gd_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_projectInclude | null
    /**
     * The data needed to update a gd_project.
     * 
    **/
    data: XOR<gd_projectUpdateInput, gd_projectUncheckedUpdateInput>
    /**
     * Choose, which gd_project to update.
     * 
    **/
    where: gd_projectWhereUniqueInput
  }


  /**
   * gd_project updateMany
   */
  export type gd_projectUpdateManyArgs = {
    data: XOR<gd_projectUpdateManyMutationInput, gd_projectUncheckedUpdateManyInput>
    where?: gd_projectWhereInput
  }


  /**
   * gd_project upsert
   */
  export type gd_projectUpsertArgs = {
    /**
     * Select specific fields to fetch from the gd_project
     * 
    **/
    select?: gd_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_projectInclude | null
    /**
     * The filter to search for the gd_project to update in case it exists.
     * 
    **/
    where: gd_projectWhereUniqueInput
    /**
     * In case the gd_project found by the `where` argument doesn't exist, create a new gd_project with this data.
     * 
    **/
    create: XOR<gd_projectCreateInput, gd_projectUncheckedCreateInput>
    /**
     * In case the gd_project was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<gd_projectUpdateInput, gd_projectUncheckedUpdateInput>
  }


  /**
   * gd_project delete
   */
  export type gd_projectDeleteArgs = {
    /**
     * Select specific fields to fetch from the gd_project
     * 
    **/
    select?: gd_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_projectInclude | null
    /**
     * Filter which gd_project to delete.
     * 
    **/
    where: gd_projectWhereUniqueInput
  }


  /**
   * gd_project deleteMany
   */
  export type gd_projectDeleteManyArgs = {
    where?: gd_projectWhereInput
  }


  /**
   * gd_project without action
   */
  export type gd_projectArgs = {
    /**
     * Select specific fields to fetch from the gd_project
     * 
    **/
    select?: gd_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_projectInclude | null
  }



  /**
   * Model gd_user_project
   */


  export type AggregateGd_user_project = {
    _count: Gd_user_projectCountAggregateOutputType | null
    _avg: Gd_user_projectAvgAggregateOutputType | null
    _sum: Gd_user_projectSumAggregateOutputType | null
    _min: Gd_user_projectMinAggregateOutputType | null
    _max: Gd_user_projectMaxAggregateOutputType | null
  }

  export type Gd_user_projectAvgAggregateOutputType = {
    project_id: number | null
    user_id: number | null
    user_project_create_by: number | null
    user_project_update_by: number | null
  }

  export type Gd_user_projectSumAggregateOutputType = {
    project_id: number | null
    user_id: number | null
    user_project_create_by: number | null
    user_project_update_by: number | null
  }

  export type Gd_user_projectMinAggregateOutputType = {
    project_id: number | null
    user_id: number | null
    user_project_create_date: Date | null
    user_project_update_date: Date | null
    user_project_create_by: number | null
    user_project_update_by: number | null
  }

  export type Gd_user_projectMaxAggregateOutputType = {
    project_id: number | null
    user_id: number | null
    user_project_create_date: Date | null
    user_project_update_date: Date | null
    user_project_create_by: number | null
    user_project_update_by: number | null
  }

  export type Gd_user_projectCountAggregateOutputType = {
    project_id: number
    user_id: number
    user_project_create_date: number
    user_project_update_date: number
    user_project_create_by: number
    user_project_update_by: number
    _all: number
  }


  export type Gd_user_projectAvgAggregateInputType = {
    project_id?: true
    user_id?: true
    user_project_create_by?: true
    user_project_update_by?: true
  }

  export type Gd_user_projectSumAggregateInputType = {
    project_id?: true
    user_id?: true
    user_project_create_by?: true
    user_project_update_by?: true
  }

  export type Gd_user_projectMinAggregateInputType = {
    project_id?: true
    user_id?: true
    user_project_create_date?: true
    user_project_update_date?: true
    user_project_create_by?: true
    user_project_update_by?: true
  }

  export type Gd_user_projectMaxAggregateInputType = {
    project_id?: true
    user_id?: true
    user_project_create_date?: true
    user_project_update_date?: true
    user_project_create_by?: true
    user_project_update_by?: true
  }

  export type Gd_user_projectCountAggregateInputType = {
    project_id?: true
    user_id?: true
    user_project_create_date?: true
    user_project_update_date?: true
    user_project_create_by?: true
    user_project_update_by?: true
    _all?: true
  }

  export type Gd_user_projectAggregateArgs = {
    /**
     * Filter which gd_user_project to aggregate.
     * 
    **/
    where?: gd_user_projectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_user_projects to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_user_projectOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: gd_user_projectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_user_projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_user_projects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gd_user_projects
    **/
    _count?: true | Gd_user_projectCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gd_user_projectAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gd_user_projectSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gd_user_projectMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gd_user_projectMaxAggregateInputType
  }

  export type GetGd_user_projectAggregateType<T extends Gd_user_projectAggregateArgs> = {
        [P in keyof T & keyof AggregateGd_user_project]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGd_user_project[P]>
      : GetScalarType<T[P], AggregateGd_user_project[P]>
  }




  export type Gd_user_projectGroupByArgs = {
    where?: gd_user_projectWhereInput
    orderBy?: Enumerable<gd_user_projectOrderByWithAggregationInput>
    by: Array<Gd_user_projectScalarFieldEnum>
    having?: gd_user_projectScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gd_user_projectCountAggregateInputType | true
    _avg?: Gd_user_projectAvgAggregateInputType
    _sum?: Gd_user_projectSumAggregateInputType
    _min?: Gd_user_projectMinAggregateInputType
    _max?: Gd_user_projectMaxAggregateInputType
  }


  export type Gd_user_projectGroupByOutputType = {
    project_id: number
    user_id: number
    user_project_create_date: Date | null
    user_project_update_date: Date | null
    user_project_create_by: number | null
    user_project_update_by: number | null
    _count: Gd_user_projectCountAggregateOutputType | null
    _avg: Gd_user_projectAvgAggregateOutputType | null
    _sum: Gd_user_projectSumAggregateOutputType | null
    _min: Gd_user_projectMinAggregateOutputType | null
    _max: Gd_user_projectMaxAggregateOutputType | null
  }

  type GetGd_user_projectGroupByPayload<T extends Gd_user_projectGroupByArgs> = Promise<
    Array<
      PickArray<Gd_user_projectGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gd_user_projectGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gd_user_projectGroupByOutputType[P]>
            : GetScalarType<T[P], Gd_user_projectGroupByOutputType[P]>
        }
      >
    >


  export type gd_user_projectSelect = {
    project_id?: boolean
    user_id?: boolean
    user_project_create_date?: boolean
    user_project_update_date?: boolean
    user_project_create_by?: boolean
    user_project_update_by?: boolean
    user?: boolean | gd_userArgs
    project?: boolean | gd_projectArgs
  }

  export type gd_user_projectInclude = {
    user?: boolean | gd_userArgs
    project?: boolean | gd_projectArgs
  }

  export type gd_user_projectGetPayload<
    S extends boolean | null | undefined | gd_user_projectArgs,
    U = keyof S
      > = S extends true
        ? gd_user_project
    : S extends undefined
    ? never
    : S extends gd_user_projectArgs | gd_user_projectFindManyArgs
    ?'include' extends U
    ? gd_user_project  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user'
        ? gd_userGetPayload<S['include'][P]> | null :
        P extends 'project'
        ? gd_projectGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof gd_user_project ?gd_user_project [P]
  : 
          P extends 'user'
        ? gd_userGetPayload<S['select'][P]> | null :
        P extends 'project'
        ? gd_projectGetPayload<S['select'][P]> : never
  } 
    : gd_user_project
  : gd_user_project


  type gd_user_projectCountArgs = Merge<
    Omit<gd_user_projectFindManyArgs, 'select' | 'include'> & {
      select?: Gd_user_projectCountAggregateInputType | true
    }
  >

  export interface gd_user_projectDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Gd_user_project that matches the filter.
     * @param {gd_user_projectFindUniqueArgs} args - Arguments to find a Gd_user_project
     * @example
     * // Get one Gd_user_project
     * const gd_user_project = await prisma.gd_user_project.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gd_user_projectFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gd_user_projectFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gd_user_project'> extends True ? CheckSelect<T, Prisma__gd_user_projectClient<gd_user_project>, Prisma__gd_user_projectClient<gd_user_projectGetPayload<T>>> : CheckSelect<T, Prisma__gd_user_projectClient<gd_user_project | null >, Prisma__gd_user_projectClient<gd_user_projectGetPayload<T> | null >>

    /**
     * Find the first Gd_user_project that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_user_projectFindFirstArgs} args - Arguments to find a Gd_user_project
     * @example
     * // Get one Gd_user_project
     * const gd_user_project = await prisma.gd_user_project.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gd_user_projectFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gd_user_projectFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gd_user_project'> extends True ? CheckSelect<T, Prisma__gd_user_projectClient<gd_user_project>, Prisma__gd_user_projectClient<gd_user_projectGetPayload<T>>> : CheckSelect<T, Prisma__gd_user_projectClient<gd_user_project | null >, Prisma__gd_user_projectClient<gd_user_projectGetPayload<T> | null >>

    /**
     * Find zero or more Gd_user_projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_user_projectFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gd_user_projects
     * const gd_user_projects = await prisma.gd_user_project.findMany()
     * 
     * // Get first 10 Gd_user_projects
     * const gd_user_projects = await prisma.gd_user_project.findMany({ take: 10 })
     * 
     * // Only select the `project_id`
     * const gd_user_projectWithProject_idOnly = await prisma.gd_user_project.findMany({ select: { project_id: true } })
     * 
    **/
    findMany<T extends gd_user_projectFindManyArgs>(
      args?: SelectSubset<T, gd_user_projectFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<gd_user_project>>, PrismaPromise<Array<gd_user_projectGetPayload<T>>>>

    /**
     * Create a Gd_user_project.
     * @param {gd_user_projectCreateArgs} args - Arguments to create a Gd_user_project.
     * @example
     * // Create one Gd_user_project
     * const Gd_user_project = await prisma.gd_user_project.create({
     *   data: {
     *     // ... data to create a Gd_user_project
     *   }
     * })
     * 
    **/
    create<T extends gd_user_projectCreateArgs>(
      args: SelectSubset<T, gd_user_projectCreateArgs>
    ): CheckSelect<T, Prisma__gd_user_projectClient<gd_user_project>, Prisma__gd_user_projectClient<gd_user_projectGetPayload<T>>>

    /**
     * Create many Gd_user_projects.
     *     @param {gd_user_projectCreateManyArgs} args - Arguments to create many Gd_user_projects.
     *     @example
     *     // Create many Gd_user_projects
     *     const gd_user_project = await prisma.gd_user_project.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gd_user_projectCreateManyArgs>(
      args?: SelectSubset<T, gd_user_projectCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gd_user_project.
     * @param {gd_user_projectDeleteArgs} args - Arguments to delete one Gd_user_project.
     * @example
     * // Delete one Gd_user_project
     * const Gd_user_project = await prisma.gd_user_project.delete({
     *   where: {
     *     // ... filter to delete one Gd_user_project
     *   }
     * })
     * 
    **/
    delete<T extends gd_user_projectDeleteArgs>(
      args: SelectSubset<T, gd_user_projectDeleteArgs>
    ): CheckSelect<T, Prisma__gd_user_projectClient<gd_user_project>, Prisma__gd_user_projectClient<gd_user_projectGetPayload<T>>>

    /**
     * Update one Gd_user_project.
     * @param {gd_user_projectUpdateArgs} args - Arguments to update one Gd_user_project.
     * @example
     * // Update one Gd_user_project
     * const gd_user_project = await prisma.gd_user_project.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gd_user_projectUpdateArgs>(
      args: SelectSubset<T, gd_user_projectUpdateArgs>
    ): CheckSelect<T, Prisma__gd_user_projectClient<gd_user_project>, Prisma__gd_user_projectClient<gd_user_projectGetPayload<T>>>

    /**
     * Delete zero or more Gd_user_projects.
     * @param {gd_user_projectDeleteManyArgs} args - Arguments to filter Gd_user_projects to delete.
     * @example
     * // Delete a few Gd_user_projects
     * const { count } = await prisma.gd_user_project.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gd_user_projectDeleteManyArgs>(
      args?: SelectSubset<T, gd_user_projectDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gd_user_projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_user_projectUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gd_user_projects
     * const gd_user_project = await prisma.gd_user_project.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gd_user_projectUpdateManyArgs>(
      args: SelectSubset<T, gd_user_projectUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gd_user_project.
     * @param {gd_user_projectUpsertArgs} args - Arguments to update or create a Gd_user_project.
     * @example
     * // Update or create a Gd_user_project
     * const gd_user_project = await prisma.gd_user_project.upsert({
     *   create: {
     *     // ... data to create a Gd_user_project
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gd_user_project we want to update
     *   }
     * })
    **/
    upsert<T extends gd_user_projectUpsertArgs>(
      args: SelectSubset<T, gd_user_projectUpsertArgs>
    ): CheckSelect<T, Prisma__gd_user_projectClient<gd_user_project>, Prisma__gd_user_projectClient<gd_user_projectGetPayload<T>>>

    /**
     * Count the number of Gd_user_projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_user_projectCountArgs} args - Arguments to filter Gd_user_projects to count.
     * @example
     * // Count the number of Gd_user_projects
     * const count = await prisma.gd_user_project.count({
     *   where: {
     *     // ... the filter for the Gd_user_projects we want to count
     *   }
     * })
    **/
    count<T extends gd_user_projectCountArgs>(
      args?: Subset<T, gd_user_projectCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gd_user_projectCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gd_user_project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_user_projectAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gd_user_projectAggregateArgs>(args: Subset<T, Gd_user_projectAggregateArgs>): PrismaPromise<GetGd_user_projectAggregateType<T>>

    /**
     * Group by Gd_user_project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_user_projectGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gd_user_projectGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gd_user_projectGroupByArgs['orderBy'] }
        : { orderBy?: Gd_user_projectGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gd_user_projectGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGd_user_projectGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for gd_user_project.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gd_user_projectClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user<T extends gd_userArgs = {}>(args?: Subset<T, gd_userArgs>): CheckSelect<T, Prisma__gd_userClient<gd_user | null >, Prisma__gd_userClient<gd_userGetPayload<T> | null >>;

    project<T extends gd_projectArgs = {}>(args?: Subset<T, gd_projectArgs>): CheckSelect<T, Prisma__gd_projectClient<gd_project | null >, Prisma__gd_projectClient<gd_projectGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * gd_user_project findUnique
   */
  export type gd_user_projectFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the gd_user_project
     * 
    **/
    select?: gd_user_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_projectInclude | null
    /**
     * Throw an Error if a gd_user_project can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_user_project to fetch.
     * 
    **/
    where: gd_user_projectWhereUniqueInput
  }


  /**
   * gd_user_project findFirst
   */
  export type gd_user_projectFindFirstArgs = {
    /**
     * Select specific fields to fetch from the gd_user_project
     * 
    **/
    select?: gd_user_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_projectInclude | null
    /**
     * Throw an Error if a gd_user_project can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_user_project to fetch.
     * 
    **/
    where?: gd_user_projectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_user_projects to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_user_projectOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gd_user_projects.
     * 
    **/
    cursor?: gd_user_projectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_user_projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_user_projects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gd_user_projects.
     * 
    **/
    distinct?: Enumerable<Gd_user_projectScalarFieldEnum>
  }


  /**
   * gd_user_project findMany
   */
  export type gd_user_projectFindManyArgs = {
    /**
     * Select specific fields to fetch from the gd_user_project
     * 
    **/
    select?: gd_user_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_projectInclude | null
    /**
     * Filter, which gd_user_projects to fetch.
     * 
    **/
    where?: gd_user_projectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_user_projects to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_user_projectOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gd_user_projects.
     * 
    **/
    cursor?: gd_user_projectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_user_projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_user_projects.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gd_user_projectScalarFieldEnum>
  }


  /**
   * gd_user_project create
   */
  export type gd_user_projectCreateArgs = {
    /**
     * Select specific fields to fetch from the gd_user_project
     * 
    **/
    select?: gd_user_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_projectInclude | null
    /**
     * The data needed to create a gd_user_project.
     * 
    **/
    data: XOR<gd_user_projectCreateInput, gd_user_projectUncheckedCreateInput>
  }


  /**
   * gd_user_project createMany
   */
  export type gd_user_projectCreateManyArgs = {
    data: Enumerable<gd_user_projectCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gd_user_project update
   */
  export type gd_user_projectUpdateArgs = {
    /**
     * Select specific fields to fetch from the gd_user_project
     * 
    **/
    select?: gd_user_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_projectInclude | null
    /**
     * The data needed to update a gd_user_project.
     * 
    **/
    data: XOR<gd_user_projectUpdateInput, gd_user_projectUncheckedUpdateInput>
    /**
     * Choose, which gd_user_project to update.
     * 
    **/
    where: gd_user_projectWhereUniqueInput
  }


  /**
   * gd_user_project updateMany
   */
  export type gd_user_projectUpdateManyArgs = {
    data: XOR<gd_user_projectUpdateManyMutationInput, gd_user_projectUncheckedUpdateManyInput>
    where?: gd_user_projectWhereInput
  }


  /**
   * gd_user_project upsert
   */
  export type gd_user_projectUpsertArgs = {
    /**
     * Select specific fields to fetch from the gd_user_project
     * 
    **/
    select?: gd_user_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_projectInclude | null
    /**
     * The filter to search for the gd_user_project to update in case it exists.
     * 
    **/
    where: gd_user_projectWhereUniqueInput
    /**
     * In case the gd_user_project found by the `where` argument doesn't exist, create a new gd_user_project with this data.
     * 
    **/
    create: XOR<gd_user_projectCreateInput, gd_user_projectUncheckedCreateInput>
    /**
     * In case the gd_user_project was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<gd_user_projectUpdateInput, gd_user_projectUncheckedUpdateInput>
  }


  /**
   * gd_user_project delete
   */
  export type gd_user_projectDeleteArgs = {
    /**
     * Select specific fields to fetch from the gd_user_project
     * 
    **/
    select?: gd_user_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_projectInclude | null
    /**
     * Filter which gd_user_project to delete.
     * 
    **/
    where: gd_user_projectWhereUniqueInput
  }


  /**
   * gd_user_project deleteMany
   */
  export type gd_user_projectDeleteManyArgs = {
    where?: gd_user_projectWhereInput
  }


  /**
   * gd_user_project without action
   */
  export type gd_user_projectArgs = {
    /**
     * Select specific fields to fetch from the gd_user_project
     * 
    **/
    select?: gd_user_projectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_user_projectInclude | null
  }



  /**
   * Model gd_workflow
   */


  export type AggregateGd_workflow = {
    _count: Gd_workflowCountAggregateOutputType | null
    _avg: Gd_workflowAvgAggregateOutputType | null
    _sum: Gd_workflowSumAggregateOutputType | null
    _min: Gd_workflowMinAggregateOutputType | null
    _max: Gd_workflowMaxAggregateOutputType | null
  }

  export type Gd_workflowAvgAggregateOutputType = {
    workflow_id: number | null
    project_id: number | null
    workflow_create_by: number | null
    workflow_update_by: number | null
    workflow_delete: number | null
  }

  export type Gd_workflowSumAggregateOutputType = {
    workflow_id: number | null
    project_id: number | null
    workflow_create_by: number | null
    workflow_update_by: number | null
    workflow_delete: number | null
  }

  export type Gd_workflowMinAggregateOutputType = {
    workflow_id: number | null
    workflow_name: string | null
    project_id: number | null
    workflow_create_date: Date | null
    workflow_update_date: Date | null
    workflow_create_by: number | null
    workflow_update_by: number | null
    workflow_delete: number | null
    workflow_delete_at: Date | null
  }

  export type Gd_workflowMaxAggregateOutputType = {
    workflow_id: number | null
    workflow_name: string | null
    project_id: number | null
    workflow_create_date: Date | null
    workflow_update_date: Date | null
    workflow_create_by: number | null
    workflow_update_by: number | null
    workflow_delete: number | null
    workflow_delete_at: Date | null
  }

  export type Gd_workflowCountAggregateOutputType = {
    workflow_id: number
    workflow_name: number
    project_id: number
    workflow_create_date: number
    workflow_update_date: number
    workflow_create_by: number
    workflow_update_by: number
    workflow_delete: number
    workflow_delete_at: number
    _all: number
  }


  export type Gd_workflowAvgAggregateInputType = {
    workflow_id?: true
    project_id?: true
    workflow_create_by?: true
    workflow_update_by?: true
    workflow_delete?: true
  }

  export type Gd_workflowSumAggregateInputType = {
    workflow_id?: true
    project_id?: true
    workflow_create_by?: true
    workflow_update_by?: true
    workflow_delete?: true
  }

  export type Gd_workflowMinAggregateInputType = {
    workflow_id?: true
    workflow_name?: true
    project_id?: true
    workflow_create_date?: true
    workflow_update_date?: true
    workflow_create_by?: true
    workflow_update_by?: true
    workflow_delete?: true
    workflow_delete_at?: true
  }

  export type Gd_workflowMaxAggregateInputType = {
    workflow_id?: true
    workflow_name?: true
    project_id?: true
    workflow_create_date?: true
    workflow_update_date?: true
    workflow_create_by?: true
    workflow_update_by?: true
    workflow_delete?: true
    workflow_delete_at?: true
  }

  export type Gd_workflowCountAggregateInputType = {
    workflow_id?: true
    workflow_name?: true
    project_id?: true
    workflow_create_date?: true
    workflow_update_date?: true
    workflow_create_by?: true
    workflow_update_by?: true
    workflow_delete?: true
    workflow_delete_at?: true
    _all?: true
  }

  export type Gd_workflowAggregateArgs = {
    /**
     * Filter which gd_workflow to aggregate.
     * 
    **/
    where?: gd_workflowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_workflows to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_workflowOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: gd_workflowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_workflows from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_workflows.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gd_workflows
    **/
    _count?: true | Gd_workflowCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gd_workflowAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gd_workflowSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gd_workflowMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gd_workflowMaxAggregateInputType
  }

  export type GetGd_workflowAggregateType<T extends Gd_workflowAggregateArgs> = {
        [P in keyof T & keyof AggregateGd_workflow]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGd_workflow[P]>
      : GetScalarType<T[P], AggregateGd_workflow[P]>
  }




  export type Gd_workflowGroupByArgs = {
    where?: gd_workflowWhereInput
    orderBy?: Enumerable<gd_workflowOrderByWithAggregationInput>
    by: Array<Gd_workflowScalarFieldEnum>
    having?: gd_workflowScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gd_workflowCountAggregateInputType | true
    _avg?: Gd_workflowAvgAggregateInputType
    _sum?: Gd_workflowSumAggregateInputType
    _min?: Gd_workflowMinAggregateInputType
    _max?: Gd_workflowMaxAggregateInputType
  }


  export type Gd_workflowGroupByOutputType = {
    workflow_id: number
    workflow_name: string
    project_id: number | null
    workflow_create_date: Date | null
    workflow_update_date: Date | null
    workflow_create_by: number | null
    workflow_update_by: number | null
    workflow_delete: number | null
    workflow_delete_at: Date | null
    _count: Gd_workflowCountAggregateOutputType | null
    _avg: Gd_workflowAvgAggregateOutputType | null
    _sum: Gd_workflowSumAggregateOutputType | null
    _min: Gd_workflowMinAggregateOutputType | null
    _max: Gd_workflowMaxAggregateOutputType | null
  }

  type GetGd_workflowGroupByPayload<T extends Gd_workflowGroupByArgs> = Promise<
    Array<
      PickArray<Gd_workflowGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gd_workflowGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gd_workflowGroupByOutputType[P]>
            : GetScalarType<T[P], Gd_workflowGroupByOutputType[P]>
        }
      >
    >


  export type gd_workflowSelect = {
    workflow_id?: boolean
    workflow_name?: boolean
    project_id?: boolean
    workflow_create_date?: boolean
    workflow_update_date?: boolean
    workflow_create_by?: boolean
    workflow_update_by?: boolean
    workflow_delete?: boolean
    workflow_delete_at?: boolean
    project?: boolean | gd_projectArgs
    logs?: boolean | gd_logFindManyArgs
    files?: boolean | gd_fileFindManyArgs
    _count?: boolean | Gd_workflowCountOutputTypeArgs
  }

  export type gd_workflowInclude = {
    project?: boolean | gd_projectArgs
    logs?: boolean | gd_logFindManyArgs
    files?: boolean | gd_fileFindManyArgs
    _count?: boolean | Gd_workflowCountOutputTypeArgs
  }

  export type gd_workflowGetPayload<
    S extends boolean | null | undefined | gd_workflowArgs,
    U = keyof S
      > = S extends true
        ? gd_workflow
    : S extends undefined
    ? never
    : S extends gd_workflowArgs | gd_workflowFindManyArgs
    ?'include' extends U
    ? gd_workflow  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'project'
        ? gd_projectGetPayload<S['include'][P]> | null :
        P extends 'logs'
        ? Array < gd_logGetPayload<S['include'][P]>>  :
        P extends 'files'
        ? Array < gd_fileGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? Gd_workflowCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof gd_workflow ?gd_workflow [P]
  : 
          P extends 'project'
        ? gd_projectGetPayload<S['select'][P]> | null :
        P extends 'logs'
        ? Array < gd_logGetPayload<S['select'][P]>>  :
        P extends 'files'
        ? Array < gd_fileGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? Gd_workflowCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : gd_workflow
  : gd_workflow


  type gd_workflowCountArgs = Merge<
    Omit<gd_workflowFindManyArgs, 'select' | 'include'> & {
      select?: Gd_workflowCountAggregateInputType | true
    }
  >

  export interface gd_workflowDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Gd_workflow that matches the filter.
     * @param {gd_workflowFindUniqueArgs} args - Arguments to find a Gd_workflow
     * @example
     * // Get one Gd_workflow
     * const gd_workflow = await prisma.gd_workflow.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gd_workflowFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gd_workflowFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gd_workflow'> extends True ? CheckSelect<T, Prisma__gd_workflowClient<gd_workflow>, Prisma__gd_workflowClient<gd_workflowGetPayload<T>>> : CheckSelect<T, Prisma__gd_workflowClient<gd_workflow | null >, Prisma__gd_workflowClient<gd_workflowGetPayload<T> | null >>

    /**
     * Find the first Gd_workflow that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_workflowFindFirstArgs} args - Arguments to find a Gd_workflow
     * @example
     * // Get one Gd_workflow
     * const gd_workflow = await prisma.gd_workflow.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gd_workflowFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gd_workflowFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gd_workflow'> extends True ? CheckSelect<T, Prisma__gd_workflowClient<gd_workflow>, Prisma__gd_workflowClient<gd_workflowGetPayload<T>>> : CheckSelect<T, Prisma__gd_workflowClient<gd_workflow | null >, Prisma__gd_workflowClient<gd_workflowGetPayload<T> | null >>

    /**
     * Find zero or more Gd_workflows that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_workflowFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gd_workflows
     * const gd_workflows = await prisma.gd_workflow.findMany()
     * 
     * // Get first 10 Gd_workflows
     * const gd_workflows = await prisma.gd_workflow.findMany({ take: 10 })
     * 
     * // Only select the `workflow_id`
     * const gd_workflowWithWorkflow_idOnly = await prisma.gd_workflow.findMany({ select: { workflow_id: true } })
     * 
    **/
    findMany<T extends gd_workflowFindManyArgs>(
      args?: SelectSubset<T, gd_workflowFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<gd_workflow>>, PrismaPromise<Array<gd_workflowGetPayload<T>>>>

    /**
     * Create a Gd_workflow.
     * @param {gd_workflowCreateArgs} args - Arguments to create a Gd_workflow.
     * @example
     * // Create one Gd_workflow
     * const Gd_workflow = await prisma.gd_workflow.create({
     *   data: {
     *     // ... data to create a Gd_workflow
     *   }
     * })
     * 
    **/
    create<T extends gd_workflowCreateArgs>(
      args: SelectSubset<T, gd_workflowCreateArgs>
    ): CheckSelect<T, Prisma__gd_workflowClient<gd_workflow>, Prisma__gd_workflowClient<gd_workflowGetPayload<T>>>

    /**
     * Create many Gd_workflows.
     *     @param {gd_workflowCreateManyArgs} args - Arguments to create many Gd_workflows.
     *     @example
     *     // Create many Gd_workflows
     *     const gd_workflow = await prisma.gd_workflow.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gd_workflowCreateManyArgs>(
      args?: SelectSubset<T, gd_workflowCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gd_workflow.
     * @param {gd_workflowDeleteArgs} args - Arguments to delete one Gd_workflow.
     * @example
     * // Delete one Gd_workflow
     * const Gd_workflow = await prisma.gd_workflow.delete({
     *   where: {
     *     // ... filter to delete one Gd_workflow
     *   }
     * })
     * 
    **/
    delete<T extends gd_workflowDeleteArgs>(
      args: SelectSubset<T, gd_workflowDeleteArgs>
    ): CheckSelect<T, Prisma__gd_workflowClient<gd_workflow>, Prisma__gd_workflowClient<gd_workflowGetPayload<T>>>

    /**
     * Update one Gd_workflow.
     * @param {gd_workflowUpdateArgs} args - Arguments to update one Gd_workflow.
     * @example
     * // Update one Gd_workflow
     * const gd_workflow = await prisma.gd_workflow.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gd_workflowUpdateArgs>(
      args: SelectSubset<T, gd_workflowUpdateArgs>
    ): CheckSelect<T, Prisma__gd_workflowClient<gd_workflow>, Prisma__gd_workflowClient<gd_workflowGetPayload<T>>>

    /**
     * Delete zero or more Gd_workflows.
     * @param {gd_workflowDeleteManyArgs} args - Arguments to filter Gd_workflows to delete.
     * @example
     * // Delete a few Gd_workflows
     * const { count } = await prisma.gd_workflow.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gd_workflowDeleteManyArgs>(
      args?: SelectSubset<T, gd_workflowDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gd_workflows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_workflowUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gd_workflows
     * const gd_workflow = await prisma.gd_workflow.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gd_workflowUpdateManyArgs>(
      args: SelectSubset<T, gd_workflowUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gd_workflow.
     * @param {gd_workflowUpsertArgs} args - Arguments to update or create a Gd_workflow.
     * @example
     * // Update or create a Gd_workflow
     * const gd_workflow = await prisma.gd_workflow.upsert({
     *   create: {
     *     // ... data to create a Gd_workflow
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gd_workflow we want to update
     *   }
     * })
    **/
    upsert<T extends gd_workflowUpsertArgs>(
      args: SelectSubset<T, gd_workflowUpsertArgs>
    ): CheckSelect<T, Prisma__gd_workflowClient<gd_workflow>, Prisma__gd_workflowClient<gd_workflowGetPayload<T>>>

    /**
     * Count the number of Gd_workflows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_workflowCountArgs} args - Arguments to filter Gd_workflows to count.
     * @example
     * // Count the number of Gd_workflows
     * const count = await prisma.gd_workflow.count({
     *   where: {
     *     // ... the filter for the Gd_workflows we want to count
     *   }
     * })
    **/
    count<T extends gd_workflowCountArgs>(
      args?: Subset<T, gd_workflowCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gd_workflowCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gd_workflow.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_workflowAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gd_workflowAggregateArgs>(args: Subset<T, Gd_workflowAggregateArgs>): PrismaPromise<GetGd_workflowAggregateType<T>>

    /**
     * Group by Gd_workflow.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_workflowGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gd_workflowGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gd_workflowGroupByArgs['orderBy'] }
        : { orderBy?: Gd_workflowGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gd_workflowGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGd_workflowGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for gd_workflow.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gd_workflowClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    project<T extends gd_projectArgs = {}>(args?: Subset<T, gd_projectArgs>): CheckSelect<T, Prisma__gd_projectClient<gd_project | null >, Prisma__gd_projectClient<gd_projectGetPayload<T> | null >>;

    logs<T extends gd_logFindManyArgs = {}>(args?: Subset<T, gd_logFindManyArgs>): CheckSelect<T, PrismaPromise<Array<gd_log>>, PrismaPromise<Array<gd_logGetPayload<T>>>>;

    files<T extends gd_fileFindManyArgs = {}>(args?: Subset<T, gd_fileFindManyArgs>): CheckSelect<T, PrismaPromise<Array<gd_file>>, PrismaPromise<Array<gd_fileGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * gd_workflow findUnique
   */
  export type gd_workflowFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the gd_workflow
     * 
    **/
    select?: gd_workflowSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_workflowInclude | null
    /**
     * Throw an Error if a gd_workflow can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_workflow to fetch.
     * 
    **/
    where: gd_workflowWhereUniqueInput
  }


  /**
   * gd_workflow findFirst
   */
  export type gd_workflowFindFirstArgs = {
    /**
     * Select specific fields to fetch from the gd_workflow
     * 
    **/
    select?: gd_workflowSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_workflowInclude | null
    /**
     * Throw an Error if a gd_workflow can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_workflow to fetch.
     * 
    **/
    where?: gd_workflowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_workflows to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_workflowOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gd_workflows.
     * 
    **/
    cursor?: gd_workflowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_workflows from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_workflows.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gd_workflows.
     * 
    **/
    distinct?: Enumerable<Gd_workflowScalarFieldEnum>
  }


  /**
   * gd_workflow findMany
   */
  export type gd_workflowFindManyArgs = {
    /**
     * Select specific fields to fetch from the gd_workflow
     * 
    **/
    select?: gd_workflowSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_workflowInclude | null
    /**
     * Filter, which gd_workflows to fetch.
     * 
    **/
    where?: gd_workflowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_workflows to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_workflowOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gd_workflows.
     * 
    **/
    cursor?: gd_workflowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_workflows from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_workflows.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gd_workflowScalarFieldEnum>
  }


  /**
   * gd_workflow create
   */
  export type gd_workflowCreateArgs = {
    /**
     * Select specific fields to fetch from the gd_workflow
     * 
    **/
    select?: gd_workflowSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_workflowInclude | null
    /**
     * The data needed to create a gd_workflow.
     * 
    **/
    data: XOR<gd_workflowCreateInput, gd_workflowUncheckedCreateInput>
  }


  /**
   * gd_workflow createMany
   */
  export type gd_workflowCreateManyArgs = {
    data: Enumerable<gd_workflowCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gd_workflow update
   */
  export type gd_workflowUpdateArgs = {
    /**
     * Select specific fields to fetch from the gd_workflow
     * 
    **/
    select?: gd_workflowSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_workflowInclude | null
    /**
     * The data needed to update a gd_workflow.
     * 
    **/
    data: XOR<gd_workflowUpdateInput, gd_workflowUncheckedUpdateInput>
    /**
     * Choose, which gd_workflow to update.
     * 
    **/
    where: gd_workflowWhereUniqueInput
  }


  /**
   * gd_workflow updateMany
   */
  export type gd_workflowUpdateManyArgs = {
    data: XOR<gd_workflowUpdateManyMutationInput, gd_workflowUncheckedUpdateManyInput>
    where?: gd_workflowWhereInput
  }


  /**
   * gd_workflow upsert
   */
  export type gd_workflowUpsertArgs = {
    /**
     * Select specific fields to fetch from the gd_workflow
     * 
    **/
    select?: gd_workflowSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_workflowInclude | null
    /**
     * The filter to search for the gd_workflow to update in case it exists.
     * 
    **/
    where: gd_workflowWhereUniqueInput
    /**
     * In case the gd_workflow found by the `where` argument doesn't exist, create a new gd_workflow with this data.
     * 
    **/
    create: XOR<gd_workflowCreateInput, gd_workflowUncheckedCreateInput>
    /**
     * In case the gd_workflow was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<gd_workflowUpdateInput, gd_workflowUncheckedUpdateInput>
  }


  /**
   * gd_workflow delete
   */
  export type gd_workflowDeleteArgs = {
    /**
     * Select specific fields to fetch from the gd_workflow
     * 
    **/
    select?: gd_workflowSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_workflowInclude | null
    /**
     * Filter which gd_workflow to delete.
     * 
    **/
    where: gd_workflowWhereUniqueInput
  }


  /**
   * gd_workflow deleteMany
   */
  export type gd_workflowDeleteManyArgs = {
    where?: gd_workflowWhereInput
  }


  /**
   * gd_workflow without action
   */
  export type gd_workflowArgs = {
    /**
     * Select specific fields to fetch from the gd_workflow
     * 
    **/
    select?: gd_workflowSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_workflowInclude | null
  }



  /**
   * Model gd_file
   */


  export type AggregateGd_file = {
    _count: Gd_fileCountAggregateOutputType | null
    _avg: Gd_fileAvgAggregateOutputType | null
    _sum: Gd_fileSumAggregateOutputType | null
    _min: Gd_fileMinAggregateOutputType | null
    _max: Gd_fileMaxAggregateOutputType | null
  }

  export type Gd_fileAvgAggregateOutputType = {
    file_id: number | null
    project_id: number | null
    workflow_id: number | null
    file_create_by: number | null
    file_update_by: number | null
    file_deleted: number | null
  }

  export type Gd_fileSumAggregateOutputType = {
    file_id: number | null
    project_id: number | null
    workflow_id: number | null
    file_create_by: number | null
    file_update_by: number | null
    file_deleted: number | null
  }

  export type Gd_fileMinAggregateOutputType = {
    file_id: number | null
    file_path: string | null
    project_id: number | null
    workflow_id: number | null
    file_create_date: Date | null
    file_update_date: Date | null
    file_create_by: number | null
    file_update_by: number | null
    file_deleted: number | null
    file_deleted_at: Date | null
  }

  export type Gd_fileMaxAggregateOutputType = {
    file_id: number | null
    file_path: string | null
    project_id: number | null
    workflow_id: number | null
    file_create_date: Date | null
    file_update_date: Date | null
    file_create_by: number | null
    file_update_by: number | null
    file_deleted: number | null
    file_deleted_at: Date | null
  }

  export type Gd_fileCountAggregateOutputType = {
    file_id: number
    file_path: number
    project_id: number
    workflow_id: number
    file_create_date: number
    file_update_date: number
    file_create_by: number
    file_update_by: number
    file_deleted: number
    file_deleted_at: number
    _all: number
  }


  export type Gd_fileAvgAggregateInputType = {
    file_id?: true
    project_id?: true
    workflow_id?: true
    file_create_by?: true
    file_update_by?: true
    file_deleted?: true
  }

  export type Gd_fileSumAggregateInputType = {
    file_id?: true
    project_id?: true
    workflow_id?: true
    file_create_by?: true
    file_update_by?: true
    file_deleted?: true
  }

  export type Gd_fileMinAggregateInputType = {
    file_id?: true
    file_path?: true
    project_id?: true
    workflow_id?: true
    file_create_date?: true
    file_update_date?: true
    file_create_by?: true
    file_update_by?: true
    file_deleted?: true
    file_deleted_at?: true
  }

  export type Gd_fileMaxAggregateInputType = {
    file_id?: true
    file_path?: true
    project_id?: true
    workflow_id?: true
    file_create_date?: true
    file_update_date?: true
    file_create_by?: true
    file_update_by?: true
    file_deleted?: true
    file_deleted_at?: true
  }

  export type Gd_fileCountAggregateInputType = {
    file_id?: true
    file_path?: true
    project_id?: true
    workflow_id?: true
    file_create_date?: true
    file_update_date?: true
    file_create_by?: true
    file_update_by?: true
    file_deleted?: true
    file_deleted_at?: true
    _all?: true
  }

  export type Gd_fileAggregateArgs = {
    /**
     * Filter which gd_file to aggregate.
     * 
    **/
    where?: gd_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_files to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_fileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: gd_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gd_files
    **/
    _count?: true | Gd_fileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gd_fileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gd_fileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gd_fileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gd_fileMaxAggregateInputType
  }

  export type GetGd_fileAggregateType<T extends Gd_fileAggregateArgs> = {
        [P in keyof T & keyof AggregateGd_file]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGd_file[P]>
      : GetScalarType<T[P], AggregateGd_file[P]>
  }




  export type Gd_fileGroupByArgs = {
    where?: gd_fileWhereInput
    orderBy?: Enumerable<gd_fileOrderByWithAggregationInput>
    by: Array<Gd_fileScalarFieldEnum>
    having?: gd_fileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gd_fileCountAggregateInputType | true
    _avg?: Gd_fileAvgAggregateInputType
    _sum?: Gd_fileSumAggregateInputType
    _min?: Gd_fileMinAggregateInputType
    _max?: Gd_fileMaxAggregateInputType
  }


  export type Gd_fileGroupByOutputType = {
    file_id: number
    file_path: string | null
    project_id: number | null
    workflow_id: number | null
    file_create_date: Date | null
    file_update_date: Date | null
    file_create_by: number | null
    file_update_by: number | null
    file_deleted: number | null
    file_deleted_at: Date | null
    _count: Gd_fileCountAggregateOutputType | null
    _avg: Gd_fileAvgAggregateOutputType | null
    _sum: Gd_fileSumAggregateOutputType | null
    _min: Gd_fileMinAggregateOutputType | null
    _max: Gd_fileMaxAggregateOutputType | null
  }

  type GetGd_fileGroupByPayload<T extends Gd_fileGroupByArgs> = Promise<
    Array<
      PickArray<Gd_fileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gd_fileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gd_fileGroupByOutputType[P]>
            : GetScalarType<T[P], Gd_fileGroupByOutputType[P]>
        }
      >
    >


  export type gd_fileSelect = {
    file_id?: boolean
    file_path?: boolean
    project_id?: boolean
    workflow_id?: boolean
    file_create_date?: boolean
    file_update_date?: boolean
    file_create_by?: boolean
    file_update_by?: boolean
    file_deleted?: boolean
    file_deleted_at?: boolean
    project?: boolean | gd_projectArgs
    workflow?: boolean | gd_workflowArgs
  }

  export type gd_fileInclude = {
    project?: boolean | gd_projectArgs
    workflow?: boolean | gd_workflowArgs
  }

  export type gd_fileGetPayload<
    S extends boolean | null | undefined | gd_fileArgs,
    U = keyof S
      > = S extends true
        ? gd_file
    : S extends undefined
    ? never
    : S extends gd_fileArgs | gd_fileFindManyArgs
    ?'include' extends U
    ? gd_file  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'project'
        ? gd_projectGetPayload<S['include'][P]> | null :
        P extends 'workflow'
        ? gd_workflowGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof gd_file ?gd_file [P]
  : 
          P extends 'project'
        ? gd_projectGetPayload<S['select'][P]> | null :
        P extends 'workflow'
        ? gd_workflowGetPayload<S['select'][P]> | null : never
  } 
    : gd_file
  : gd_file


  type gd_fileCountArgs = Merge<
    Omit<gd_fileFindManyArgs, 'select' | 'include'> & {
      select?: Gd_fileCountAggregateInputType | true
    }
  >

  export interface gd_fileDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Gd_file that matches the filter.
     * @param {gd_fileFindUniqueArgs} args - Arguments to find a Gd_file
     * @example
     * // Get one Gd_file
     * const gd_file = await prisma.gd_file.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gd_fileFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gd_fileFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gd_file'> extends True ? CheckSelect<T, Prisma__gd_fileClient<gd_file>, Prisma__gd_fileClient<gd_fileGetPayload<T>>> : CheckSelect<T, Prisma__gd_fileClient<gd_file | null >, Prisma__gd_fileClient<gd_fileGetPayload<T> | null >>

    /**
     * Find the first Gd_file that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_fileFindFirstArgs} args - Arguments to find a Gd_file
     * @example
     * // Get one Gd_file
     * const gd_file = await prisma.gd_file.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gd_fileFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gd_fileFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gd_file'> extends True ? CheckSelect<T, Prisma__gd_fileClient<gd_file>, Prisma__gd_fileClient<gd_fileGetPayload<T>>> : CheckSelect<T, Prisma__gd_fileClient<gd_file | null >, Prisma__gd_fileClient<gd_fileGetPayload<T> | null >>

    /**
     * Find zero or more Gd_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_fileFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gd_files
     * const gd_files = await prisma.gd_file.findMany()
     * 
     * // Get first 10 Gd_files
     * const gd_files = await prisma.gd_file.findMany({ take: 10 })
     * 
     * // Only select the `file_id`
     * const gd_fileWithFile_idOnly = await prisma.gd_file.findMany({ select: { file_id: true } })
     * 
    **/
    findMany<T extends gd_fileFindManyArgs>(
      args?: SelectSubset<T, gd_fileFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<gd_file>>, PrismaPromise<Array<gd_fileGetPayload<T>>>>

    /**
     * Create a Gd_file.
     * @param {gd_fileCreateArgs} args - Arguments to create a Gd_file.
     * @example
     * // Create one Gd_file
     * const Gd_file = await prisma.gd_file.create({
     *   data: {
     *     // ... data to create a Gd_file
     *   }
     * })
     * 
    **/
    create<T extends gd_fileCreateArgs>(
      args: SelectSubset<T, gd_fileCreateArgs>
    ): CheckSelect<T, Prisma__gd_fileClient<gd_file>, Prisma__gd_fileClient<gd_fileGetPayload<T>>>

    /**
     * Create many Gd_files.
     *     @param {gd_fileCreateManyArgs} args - Arguments to create many Gd_files.
     *     @example
     *     // Create many Gd_files
     *     const gd_file = await prisma.gd_file.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gd_fileCreateManyArgs>(
      args?: SelectSubset<T, gd_fileCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gd_file.
     * @param {gd_fileDeleteArgs} args - Arguments to delete one Gd_file.
     * @example
     * // Delete one Gd_file
     * const Gd_file = await prisma.gd_file.delete({
     *   where: {
     *     // ... filter to delete one Gd_file
     *   }
     * })
     * 
    **/
    delete<T extends gd_fileDeleteArgs>(
      args: SelectSubset<T, gd_fileDeleteArgs>
    ): CheckSelect<T, Prisma__gd_fileClient<gd_file>, Prisma__gd_fileClient<gd_fileGetPayload<T>>>

    /**
     * Update one Gd_file.
     * @param {gd_fileUpdateArgs} args - Arguments to update one Gd_file.
     * @example
     * // Update one Gd_file
     * const gd_file = await prisma.gd_file.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gd_fileUpdateArgs>(
      args: SelectSubset<T, gd_fileUpdateArgs>
    ): CheckSelect<T, Prisma__gd_fileClient<gd_file>, Prisma__gd_fileClient<gd_fileGetPayload<T>>>

    /**
     * Delete zero or more Gd_files.
     * @param {gd_fileDeleteManyArgs} args - Arguments to filter Gd_files to delete.
     * @example
     * // Delete a few Gd_files
     * const { count } = await prisma.gd_file.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gd_fileDeleteManyArgs>(
      args?: SelectSubset<T, gd_fileDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gd_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_fileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gd_files
     * const gd_file = await prisma.gd_file.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gd_fileUpdateManyArgs>(
      args: SelectSubset<T, gd_fileUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gd_file.
     * @param {gd_fileUpsertArgs} args - Arguments to update or create a Gd_file.
     * @example
     * // Update or create a Gd_file
     * const gd_file = await prisma.gd_file.upsert({
     *   create: {
     *     // ... data to create a Gd_file
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gd_file we want to update
     *   }
     * })
    **/
    upsert<T extends gd_fileUpsertArgs>(
      args: SelectSubset<T, gd_fileUpsertArgs>
    ): CheckSelect<T, Prisma__gd_fileClient<gd_file>, Prisma__gd_fileClient<gd_fileGetPayload<T>>>

    /**
     * Count the number of Gd_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_fileCountArgs} args - Arguments to filter Gd_files to count.
     * @example
     * // Count the number of Gd_files
     * const count = await prisma.gd_file.count({
     *   where: {
     *     // ... the filter for the Gd_files we want to count
     *   }
     * })
    **/
    count<T extends gd_fileCountArgs>(
      args?: Subset<T, gd_fileCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gd_fileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gd_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_fileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gd_fileAggregateArgs>(args: Subset<T, Gd_fileAggregateArgs>): PrismaPromise<GetGd_fileAggregateType<T>>

    /**
     * Group by Gd_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_fileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gd_fileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gd_fileGroupByArgs['orderBy'] }
        : { orderBy?: Gd_fileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gd_fileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGd_fileGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for gd_file.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gd_fileClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    project<T extends gd_projectArgs = {}>(args?: Subset<T, gd_projectArgs>): CheckSelect<T, Prisma__gd_projectClient<gd_project | null >, Prisma__gd_projectClient<gd_projectGetPayload<T> | null >>;

    workflow<T extends gd_workflowArgs = {}>(args?: Subset<T, gd_workflowArgs>): CheckSelect<T, Prisma__gd_workflowClient<gd_workflow | null >, Prisma__gd_workflowClient<gd_workflowGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * gd_file findUnique
   */
  export type gd_fileFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the gd_file
     * 
    **/
    select?: gd_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_fileInclude | null
    /**
     * Throw an Error if a gd_file can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_file to fetch.
     * 
    **/
    where: gd_fileWhereUniqueInput
  }


  /**
   * gd_file findFirst
   */
  export type gd_fileFindFirstArgs = {
    /**
     * Select specific fields to fetch from the gd_file
     * 
    **/
    select?: gd_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_fileInclude | null
    /**
     * Throw an Error if a gd_file can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_file to fetch.
     * 
    **/
    where?: gd_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_files to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_fileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gd_files.
     * 
    **/
    cursor?: gd_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gd_files.
     * 
    **/
    distinct?: Enumerable<Gd_fileScalarFieldEnum>
  }


  /**
   * gd_file findMany
   */
  export type gd_fileFindManyArgs = {
    /**
     * Select specific fields to fetch from the gd_file
     * 
    **/
    select?: gd_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_fileInclude | null
    /**
     * Filter, which gd_files to fetch.
     * 
    **/
    where?: gd_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_files to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_fileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gd_files.
     * 
    **/
    cursor?: gd_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gd_fileScalarFieldEnum>
  }


  /**
   * gd_file create
   */
  export type gd_fileCreateArgs = {
    /**
     * Select specific fields to fetch from the gd_file
     * 
    **/
    select?: gd_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_fileInclude | null
    /**
     * The data needed to create a gd_file.
     * 
    **/
    data: XOR<gd_fileCreateInput, gd_fileUncheckedCreateInput>
  }


  /**
   * gd_file createMany
   */
  export type gd_fileCreateManyArgs = {
    data: Enumerable<gd_fileCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gd_file update
   */
  export type gd_fileUpdateArgs = {
    /**
     * Select specific fields to fetch from the gd_file
     * 
    **/
    select?: gd_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_fileInclude | null
    /**
     * The data needed to update a gd_file.
     * 
    **/
    data: XOR<gd_fileUpdateInput, gd_fileUncheckedUpdateInput>
    /**
     * Choose, which gd_file to update.
     * 
    **/
    where: gd_fileWhereUniqueInput
  }


  /**
   * gd_file updateMany
   */
  export type gd_fileUpdateManyArgs = {
    data: XOR<gd_fileUpdateManyMutationInput, gd_fileUncheckedUpdateManyInput>
    where?: gd_fileWhereInput
  }


  /**
   * gd_file upsert
   */
  export type gd_fileUpsertArgs = {
    /**
     * Select specific fields to fetch from the gd_file
     * 
    **/
    select?: gd_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_fileInclude | null
    /**
     * The filter to search for the gd_file to update in case it exists.
     * 
    **/
    where: gd_fileWhereUniqueInput
    /**
     * In case the gd_file found by the `where` argument doesn't exist, create a new gd_file with this data.
     * 
    **/
    create: XOR<gd_fileCreateInput, gd_fileUncheckedCreateInput>
    /**
     * In case the gd_file was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<gd_fileUpdateInput, gd_fileUncheckedUpdateInput>
  }


  /**
   * gd_file delete
   */
  export type gd_fileDeleteArgs = {
    /**
     * Select specific fields to fetch from the gd_file
     * 
    **/
    select?: gd_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_fileInclude | null
    /**
     * Filter which gd_file to delete.
     * 
    **/
    where: gd_fileWhereUniqueInput
  }


  /**
   * gd_file deleteMany
   */
  export type gd_fileDeleteManyArgs = {
    where?: gd_fileWhereInput
  }


  /**
   * gd_file without action
   */
  export type gd_fileArgs = {
    /**
     * Select specific fields to fetch from the gd_file
     * 
    **/
    select?: gd_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_fileInclude | null
  }



  /**
   * Model gd_log
   */


  export type AggregateGd_log = {
    _count: Gd_logCountAggregateOutputType | null
    _avg: Gd_logAvgAggregateOutputType | null
    _sum: Gd_logSumAggregateOutputType | null
    _min: Gd_logMinAggregateOutputType | null
    _max: Gd_logMaxAggregateOutputType | null
  }

  export type Gd_logAvgAggregateOutputType = {
    log_id: number | null
    workflow_id: number | null
    log_status: number | null
    log_created_by: number | null
    log_updated_by: number | null
  }

  export type Gd_logSumAggregateOutputType = {
    log_id: number | null
    workflow_id: number | null
    log_status: number | null
    log_created_by: number | null
    log_updated_by: number | null
  }

  export type Gd_logMinAggregateOutputType = {
    log_id: number | null
    workflow_id: number | null
    log_session_time: Date | null
    log_session_attempt: string | null
    log_last_duration: string | null
    log_status: number | null
    log_created_date: Date | null
    log_updated_date: Date | null
    log_created_by: number | null
    log_updated_by: number | null
  }

  export type Gd_logMaxAggregateOutputType = {
    log_id: number | null
    workflow_id: number | null
    log_session_time: Date | null
    log_session_attempt: string | null
    log_last_duration: string | null
    log_status: number | null
    log_created_date: Date | null
    log_updated_date: Date | null
    log_created_by: number | null
    log_updated_by: number | null
  }

  export type Gd_logCountAggregateOutputType = {
    log_id: number
    workflow_id: number
    log_session_time: number
    log_session_attempt: number
    log_last_duration: number
    log_status: number
    log_created_date: number
    log_updated_date: number
    log_created_by: number
    log_updated_by: number
    _all: number
  }


  export type Gd_logAvgAggregateInputType = {
    log_id?: true
    workflow_id?: true
    log_status?: true
    log_created_by?: true
    log_updated_by?: true
  }

  export type Gd_logSumAggregateInputType = {
    log_id?: true
    workflow_id?: true
    log_status?: true
    log_created_by?: true
    log_updated_by?: true
  }

  export type Gd_logMinAggregateInputType = {
    log_id?: true
    workflow_id?: true
    log_session_time?: true
    log_session_attempt?: true
    log_last_duration?: true
    log_status?: true
    log_created_date?: true
    log_updated_date?: true
    log_created_by?: true
    log_updated_by?: true
  }

  export type Gd_logMaxAggregateInputType = {
    log_id?: true
    workflow_id?: true
    log_session_time?: true
    log_session_attempt?: true
    log_last_duration?: true
    log_status?: true
    log_created_date?: true
    log_updated_date?: true
    log_created_by?: true
    log_updated_by?: true
  }

  export type Gd_logCountAggregateInputType = {
    log_id?: true
    workflow_id?: true
    log_session_time?: true
    log_session_attempt?: true
    log_last_duration?: true
    log_status?: true
    log_created_date?: true
    log_updated_date?: true
    log_created_by?: true
    log_updated_by?: true
    _all?: true
  }

  export type Gd_logAggregateArgs = {
    /**
     * Filter which gd_log to aggregate.
     * 
    **/
    where?: gd_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_logs to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_logOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: gd_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_logs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_logs.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gd_logs
    **/
    _count?: true | Gd_logCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gd_logAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gd_logSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gd_logMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gd_logMaxAggregateInputType
  }

  export type GetGd_logAggregateType<T extends Gd_logAggregateArgs> = {
        [P in keyof T & keyof AggregateGd_log]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGd_log[P]>
      : GetScalarType<T[P], AggregateGd_log[P]>
  }




  export type Gd_logGroupByArgs = {
    where?: gd_logWhereInput
    orderBy?: Enumerable<gd_logOrderByWithAggregationInput>
    by: Array<Gd_logScalarFieldEnum>
    having?: gd_logScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gd_logCountAggregateInputType | true
    _avg?: Gd_logAvgAggregateInputType
    _sum?: Gd_logSumAggregateInputType
    _min?: Gd_logMinAggregateInputType
    _max?: Gd_logMaxAggregateInputType
  }


  export type Gd_logGroupByOutputType = {
    log_id: number
    workflow_id: number | null
    log_session_time: Date | null
    log_session_attempt: string | null
    log_last_duration: string | null
    log_status: number | null
    log_created_date: Date | null
    log_updated_date: Date | null
    log_created_by: number | null
    log_updated_by: number | null
    _count: Gd_logCountAggregateOutputType | null
    _avg: Gd_logAvgAggregateOutputType | null
    _sum: Gd_logSumAggregateOutputType | null
    _min: Gd_logMinAggregateOutputType | null
    _max: Gd_logMaxAggregateOutputType | null
  }

  type GetGd_logGroupByPayload<T extends Gd_logGroupByArgs> = Promise<
    Array<
      PickArray<Gd_logGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gd_logGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gd_logGroupByOutputType[P]>
            : GetScalarType<T[P], Gd_logGroupByOutputType[P]>
        }
      >
    >


  export type gd_logSelect = {
    log_id?: boolean
    workflow_id?: boolean
    log_session_time?: boolean
    log_session_attempt?: boolean
    log_last_duration?: boolean
    log_status?: boolean
    log_created_date?: boolean
    log_updated_date?: boolean
    log_created_by?: boolean
    log_updated_by?: boolean
    workflow?: boolean | gd_workflowArgs
  }

  export type gd_logInclude = {
    workflow?: boolean | gd_workflowArgs
  }

  export type gd_logGetPayload<
    S extends boolean | null | undefined | gd_logArgs,
    U = keyof S
      > = S extends true
        ? gd_log
    : S extends undefined
    ? never
    : S extends gd_logArgs | gd_logFindManyArgs
    ?'include' extends U
    ? gd_log  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'workflow'
        ? gd_workflowGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof gd_log ?gd_log [P]
  : 
          P extends 'workflow'
        ? gd_workflowGetPayload<S['select'][P]> | null : never
  } 
    : gd_log
  : gd_log


  type gd_logCountArgs = Merge<
    Omit<gd_logFindManyArgs, 'select' | 'include'> & {
      select?: Gd_logCountAggregateInputType | true
    }
  >

  export interface gd_logDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Gd_log that matches the filter.
     * @param {gd_logFindUniqueArgs} args - Arguments to find a Gd_log
     * @example
     * // Get one Gd_log
     * const gd_log = await prisma.gd_log.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gd_logFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gd_logFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gd_log'> extends True ? CheckSelect<T, Prisma__gd_logClient<gd_log>, Prisma__gd_logClient<gd_logGetPayload<T>>> : CheckSelect<T, Prisma__gd_logClient<gd_log | null >, Prisma__gd_logClient<gd_logGetPayload<T> | null >>

    /**
     * Find the first Gd_log that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_logFindFirstArgs} args - Arguments to find a Gd_log
     * @example
     * // Get one Gd_log
     * const gd_log = await prisma.gd_log.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gd_logFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gd_logFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gd_log'> extends True ? CheckSelect<T, Prisma__gd_logClient<gd_log>, Prisma__gd_logClient<gd_logGetPayload<T>>> : CheckSelect<T, Prisma__gd_logClient<gd_log | null >, Prisma__gd_logClient<gd_logGetPayload<T> | null >>

    /**
     * Find zero or more Gd_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_logFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gd_logs
     * const gd_logs = await prisma.gd_log.findMany()
     * 
     * // Get first 10 Gd_logs
     * const gd_logs = await prisma.gd_log.findMany({ take: 10 })
     * 
     * // Only select the `log_id`
     * const gd_logWithLog_idOnly = await prisma.gd_log.findMany({ select: { log_id: true } })
     * 
    **/
    findMany<T extends gd_logFindManyArgs>(
      args?: SelectSubset<T, gd_logFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<gd_log>>, PrismaPromise<Array<gd_logGetPayload<T>>>>

    /**
     * Create a Gd_log.
     * @param {gd_logCreateArgs} args - Arguments to create a Gd_log.
     * @example
     * // Create one Gd_log
     * const Gd_log = await prisma.gd_log.create({
     *   data: {
     *     // ... data to create a Gd_log
     *   }
     * })
     * 
    **/
    create<T extends gd_logCreateArgs>(
      args: SelectSubset<T, gd_logCreateArgs>
    ): CheckSelect<T, Prisma__gd_logClient<gd_log>, Prisma__gd_logClient<gd_logGetPayload<T>>>

    /**
     * Create many Gd_logs.
     *     @param {gd_logCreateManyArgs} args - Arguments to create many Gd_logs.
     *     @example
     *     // Create many Gd_logs
     *     const gd_log = await prisma.gd_log.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gd_logCreateManyArgs>(
      args?: SelectSubset<T, gd_logCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gd_log.
     * @param {gd_logDeleteArgs} args - Arguments to delete one Gd_log.
     * @example
     * // Delete one Gd_log
     * const Gd_log = await prisma.gd_log.delete({
     *   where: {
     *     // ... filter to delete one Gd_log
     *   }
     * })
     * 
    **/
    delete<T extends gd_logDeleteArgs>(
      args: SelectSubset<T, gd_logDeleteArgs>
    ): CheckSelect<T, Prisma__gd_logClient<gd_log>, Prisma__gd_logClient<gd_logGetPayload<T>>>

    /**
     * Update one Gd_log.
     * @param {gd_logUpdateArgs} args - Arguments to update one Gd_log.
     * @example
     * // Update one Gd_log
     * const gd_log = await prisma.gd_log.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gd_logUpdateArgs>(
      args: SelectSubset<T, gd_logUpdateArgs>
    ): CheckSelect<T, Prisma__gd_logClient<gd_log>, Prisma__gd_logClient<gd_logGetPayload<T>>>

    /**
     * Delete zero or more Gd_logs.
     * @param {gd_logDeleteManyArgs} args - Arguments to filter Gd_logs to delete.
     * @example
     * // Delete a few Gd_logs
     * const { count } = await prisma.gd_log.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gd_logDeleteManyArgs>(
      args?: SelectSubset<T, gd_logDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gd_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_logUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gd_logs
     * const gd_log = await prisma.gd_log.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gd_logUpdateManyArgs>(
      args: SelectSubset<T, gd_logUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gd_log.
     * @param {gd_logUpsertArgs} args - Arguments to update or create a Gd_log.
     * @example
     * // Update or create a Gd_log
     * const gd_log = await prisma.gd_log.upsert({
     *   create: {
     *     // ... data to create a Gd_log
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gd_log we want to update
     *   }
     * })
    **/
    upsert<T extends gd_logUpsertArgs>(
      args: SelectSubset<T, gd_logUpsertArgs>
    ): CheckSelect<T, Prisma__gd_logClient<gd_log>, Prisma__gd_logClient<gd_logGetPayload<T>>>

    /**
     * Count the number of Gd_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_logCountArgs} args - Arguments to filter Gd_logs to count.
     * @example
     * // Count the number of Gd_logs
     * const count = await prisma.gd_log.count({
     *   where: {
     *     // ... the filter for the Gd_logs we want to count
     *   }
     * })
    **/
    count<T extends gd_logCountArgs>(
      args?: Subset<T, gd_logCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gd_logCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gd_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_logAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gd_logAggregateArgs>(args: Subset<T, Gd_logAggregateArgs>): PrismaPromise<GetGd_logAggregateType<T>>

    /**
     * Group by Gd_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_logGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gd_logGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gd_logGroupByArgs['orderBy'] }
        : { orderBy?: Gd_logGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gd_logGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGd_logGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for gd_log.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gd_logClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    workflow<T extends gd_workflowArgs = {}>(args?: Subset<T, gd_workflowArgs>): CheckSelect<T, Prisma__gd_workflowClient<gd_workflow | null >, Prisma__gd_workflowClient<gd_workflowGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * gd_log findUnique
   */
  export type gd_logFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the gd_log
     * 
    **/
    select?: gd_logSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_logInclude | null
    /**
     * Throw an Error if a gd_log can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_log to fetch.
     * 
    **/
    where: gd_logWhereUniqueInput
  }


  /**
   * gd_log findFirst
   */
  export type gd_logFindFirstArgs = {
    /**
     * Select specific fields to fetch from the gd_log
     * 
    **/
    select?: gd_logSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_logInclude | null
    /**
     * Throw an Error if a gd_log can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_log to fetch.
     * 
    **/
    where?: gd_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_logs to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_logOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gd_logs.
     * 
    **/
    cursor?: gd_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_logs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_logs.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gd_logs.
     * 
    **/
    distinct?: Enumerable<Gd_logScalarFieldEnum>
  }


  /**
   * gd_log findMany
   */
  export type gd_logFindManyArgs = {
    /**
     * Select specific fields to fetch from the gd_log
     * 
    **/
    select?: gd_logSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_logInclude | null
    /**
     * Filter, which gd_logs to fetch.
     * 
    **/
    where?: gd_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_logs to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_logOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gd_logs.
     * 
    **/
    cursor?: gd_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_logs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_logs.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gd_logScalarFieldEnum>
  }


  /**
   * gd_log create
   */
  export type gd_logCreateArgs = {
    /**
     * Select specific fields to fetch from the gd_log
     * 
    **/
    select?: gd_logSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_logInclude | null
    /**
     * The data needed to create a gd_log.
     * 
    **/
    data: XOR<gd_logCreateInput, gd_logUncheckedCreateInput>
  }


  /**
   * gd_log createMany
   */
  export type gd_logCreateManyArgs = {
    data: Enumerable<gd_logCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gd_log update
   */
  export type gd_logUpdateArgs = {
    /**
     * Select specific fields to fetch from the gd_log
     * 
    **/
    select?: gd_logSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_logInclude | null
    /**
     * The data needed to update a gd_log.
     * 
    **/
    data: XOR<gd_logUpdateInput, gd_logUncheckedUpdateInput>
    /**
     * Choose, which gd_log to update.
     * 
    **/
    where: gd_logWhereUniqueInput
  }


  /**
   * gd_log updateMany
   */
  export type gd_logUpdateManyArgs = {
    data: XOR<gd_logUpdateManyMutationInput, gd_logUncheckedUpdateManyInput>
    where?: gd_logWhereInput
  }


  /**
   * gd_log upsert
   */
  export type gd_logUpsertArgs = {
    /**
     * Select specific fields to fetch from the gd_log
     * 
    **/
    select?: gd_logSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_logInclude | null
    /**
     * The filter to search for the gd_log to update in case it exists.
     * 
    **/
    where: gd_logWhereUniqueInput
    /**
     * In case the gd_log found by the `where` argument doesn't exist, create a new gd_log with this data.
     * 
    **/
    create: XOR<gd_logCreateInput, gd_logUncheckedCreateInput>
    /**
     * In case the gd_log was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<gd_logUpdateInput, gd_logUncheckedUpdateInput>
  }


  /**
   * gd_log delete
   */
  export type gd_logDeleteArgs = {
    /**
     * Select specific fields to fetch from the gd_log
     * 
    **/
    select?: gd_logSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_logInclude | null
    /**
     * Filter which gd_log to delete.
     * 
    **/
    where: gd_logWhereUniqueInput
  }


  /**
   * gd_log deleteMany
   */
  export type gd_logDeleteManyArgs = {
    where?: gd_logWhereInput
  }


  /**
   * gd_log without action
   */
  export type gd_logArgs = {
    /**
     * Select specific fields to fetch from the gd_log
     * 
    **/
    select?: gd_logSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_logInclude | null
  }



  /**
   * Model gd_import_file
   */


  export type AggregateGd_import_file = {
    _count: Gd_import_fileCountAggregateOutputType | null
    _avg: Gd_import_fileAvgAggregateOutputType | null
    _sum: Gd_import_fileSumAggregateOutputType | null
    _min: Gd_import_fileMinAggregateOutputType | null
    _max: Gd_import_fileMaxAggregateOutputType | null
  }

  export type Gd_import_fileAvgAggregateOutputType = {
    import_id: number | null
    import_uploaded: number | null
    import_status_raw_table: number | null
    import_status_destination_table: number | null
    user_id: number | null
  }

  export type Gd_import_fileSumAggregateOutputType = {
    import_id: number | null
    import_uploaded: number | null
    import_status_raw_table: number | null
    import_status_destination_table: number | null
    user_id: number | null
  }

  export type Gd_import_fileMinAggregateOutputType = {
    import_id: number | null
    import_file_name: string | null
    import_fundname: string | null
    import_uploaded: number | null
    import_status_raw_table: number | null
    import_status_destination_table: number | null
    import_date_uploaded: string | null
    user_id: number | null
  }

  export type Gd_import_fileMaxAggregateOutputType = {
    import_id: number | null
    import_file_name: string | null
    import_fundname: string | null
    import_uploaded: number | null
    import_status_raw_table: number | null
    import_status_destination_table: number | null
    import_date_uploaded: string | null
    user_id: number | null
  }

  export type Gd_import_fileCountAggregateOutputType = {
    import_id: number
    import_file_name: number
    import_fundname: number
    import_uploaded: number
    import_status_raw_table: number
    import_status_destination_table: number
    import_date_uploaded: number
    user_id: number
    _all: number
  }


  export type Gd_import_fileAvgAggregateInputType = {
    import_id?: true
    import_uploaded?: true
    import_status_raw_table?: true
    import_status_destination_table?: true
    user_id?: true
  }

  export type Gd_import_fileSumAggregateInputType = {
    import_id?: true
    import_uploaded?: true
    import_status_raw_table?: true
    import_status_destination_table?: true
    user_id?: true
  }

  export type Gd_import_fileMinAggregateInputType = {
    import_id?: true
    import_file_name?: true
    import_fundname?: true
    import_uploaded?: true
    import_status_raw_table?: true
    import_status_destination_table?: true
    import_date_uploaded?: true
    user_id?: true
  }

  export type Gd_import_fileMaxAggregateInputType = {
    import_id?: true
    import_file_name?: true
    import_fundname?: true
    import_uploaded?: true
    import_status_raw_table?: true
    import_status_destination_table?: true
    import_date_uploaded?: true
    user_id?: true
  }

  export type Gd_import_fileCountAggregateInputType = {
    import_id?: true
    import_file_name?: true
    import_fundname?: true
    import_uploaded?: true
    import_status_raw_table?: true
    import_status_destination_table?: true
    import_date_uploaded?: true
    user_id?: true
    _all?: true
  }

  export type Gd_import_fileAggregateArgs = {
    /**
     * Filter which gd_import_file to aggregate.
     * 
    **/
    where?: gd_import_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_import_files to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_import_fileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: gd_import_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_import_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_import_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gd_import_files
    **/
    _count?: true | Gd_import_fileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gd_import_fileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gd_import_fileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gd_import_fileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gd_import_fileMaxAggregateInputType
  }

  export type GetGd_import_fileAggregateType<T extends Gd_import_fileAggregateArgs> = {
        [P in keyof T & keyof AggregateGd_import_file]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGd_import_file[P]>
      : GetScalarType<T[P], AggregateGd_import_file[P]>
  }




  export type Gd_import_fileGroupByArgs = {
    where?: gd_import_fileWhereInput
    orderBy?: Enumerable<gd_import_fileOrderByWithAggregationInput>
    by: Array<Gd_import_fileScalarFieldEnum>
    having?: gd_import_fileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gd_import_fileCountAggregateInputType | true
    _avg?: Gd_import_fileAvgAggregateInputType
    _sum?: Gd_import_fileSumAggregateInputType
    _min?: Gd_import_fileMinAggregateInputType
    _max?: Gd_import_fileMaxAggregateInputType
  }


  export type Gd_import_fileGroupByOutputType = {
    import_id: number
    import_file_name: string | null
    import_fundname: string | null
    import_uploaded: number | null
    import_status_raw_table: number | null
    import_status_destination_table: number | null
    import_date_uploaded: string | null
    user_id: number | null
    _count: Gd_import_fileCountAggregateOutputType | null
    _avg: Gd_import_fileAvgAggregateOutputType | null
    _sum: Gd_import_fileSumAggregateOutputType | null
    _min: Gd_import_fileMinAggregateOutputType | null
    _max: Gd_import_fileMaxAggregateOutputType | null
  }

  type GetGd_import_fileGroupByPayload<T extends Gd_import_fileGroupByArgs> = Promise<
    Array<
      PickArray<Gd_import_fileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gd_import_fileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gd_import_fileGroupByOutputType[P]>
            : GetScalarType<T[P], Gd_import_fileGroupByOutputType[P]>
        }
      >
    >


  export type gd_import_fileSelect = {
    import_id?: boolean
    import_file_name?: boolean
    import_fundname?: boolean
    import_uploaded?: boolean
    import_status_raw_table?: boolean
    import_status_destination_table?: boolean
    import_date_uploaded?: boolean
    user_id?: boolean
  }

  export type gd_import_fileGetPayload<
    S extends boolean | null | undefined | gd_import_fileArgs,
    U = keyof S
      > = S extends true
        ? gd_import_file
    : S extends undefined
    ? never
    : S extends gd_import_fileArgs | gd_import_fileFindManyArgs
    ?'include' extends U
    ? gd_import_file 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof gd_import_file ?gd_import_file [P]
  : 
     never
  } 
    : gd_import_file
  : gd_import_file


  type gd_import_fileCountArgs = Merge<
    Omit<gd_import_fileFindManyArgs, 'select' | 'include'> & {
      select?: Gd_import_fileCountAggregateInputType | true
    }
  >

  export interface gd_import_fileDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Gd_import_file that matches the filter.
     * @param {gd_import_fileFindUniqueArgs} args - Arguments to find a Gd_import_file
     * @example
     * // Get one Gd_import_file
     * const gd_import_file = await prisma.gd_import_file.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gd_import_fileFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gd_import_fileFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gd_import_file'> extends True ? CheckSelect<T, Prisma__gd_import_fileClient<gd_import_file>, Prisma__gd_import_fileClient<gd_import_fileGetPayload<T>>> : CheckSelect<T, Prisma__gd_import_fileClient<gd_import_file | null >, Prisma__gd_import_fileClient<gd_import_fileGetPayload<T> | null >>

    /**
     * Find the first Gd_import_file that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_import_fileFindFirstArgs} args - Arguments to find a Gd_import_file
     * @example
     * // Get one Gd_import_file
     * const gd_import_file = await prisma.gd_import_file.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gd_import_fileFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gd_import_fileFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gd_import_file'> extends True ? CheckSelect<T, Prisma__gd_import_fileClient<gd_import_file>, Prisma__gd_import_fileClient<gd_import_fileGetPayload<T>>> : CheckSelect<T, Prisma__gd_import_fileClient<gd_import_file | null >, Prisma__gd_import_fileClient<gd_import_fileGetPayload<T> | null >>

    /**
     * Find zero or more Gd_import_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_import_fileFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gd_import_files
     * const gd_import_files = await prisma.gd_import_file.findMany()
     * 
     * // Get first 10 Gd_import_files
     * const gd_import_files = await prisma.gd_import_file.findMany({ take: 10 })
     * 
     * // Only select the `import_id`
     * const gd_import_fileWithImport_idOnly = await prisma.gd_import_file.findMany({ select: { import_id: true } })
     * 
    **/
    findMany<T extends gd_import_fileFindManyArgs>(
      args?: SelectSubset<T, gd_import_fileFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<gd_import_file>>, PrismaPromise<Array<gd_import_fileGetPayload<T>>>>

    /**
     * Create a Gd_import_file.
     * @param {gd_import_fileCreateArgs} args - Arguments to create a Gd_import_file.
     * @example
     * // Create one Gd_import_file
     * const Gd_import_file = await prisma.gd_import_file.create({
     *   data: {
     *     // ... data to create a Gd_import_file
     *   }
     * })
     * 
    **/
    create<T extends gd_import_fileCreateArgs>(
      args: SelectSubset<T, gd_import_fileCreateArgs>
    ): CheckSelect<T, Prisma__gd_import_fileClient<gd_import_file>, Prisma__gd_import_fileClient<gd_import_fileGetPayload<T>>>

    /**
     * Create many Gd_import_files.
     *     @param {gd_import_fileCreateManyArgs} args - Arguments to create many Gd_import_files.
     *     @example
     *     // Create many Gd_import_files
     *     const gd_import_file = await prisma.gd_import_file.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gd_import_fileCreateManyArgs>(
      args?: SelectSubset<T, gd_import_fileCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gd_import_file.
     * @param {gd_import_fileDeleteArgs} args - Arguments to delete one Gd_import_file.
     * @example
     * // Delete one Gd_import_file
     * const Gd_import_file = await prisma.gd_import_file.delete({
     *   where: {
     *     // ... filter to delete one Gd_import_file
     *   }
     * })
     * 
    **/
    delete<T extends gd_import_fileDeleteArgs>(
      args: SelectSubset<T, gd_import_fileDeleteArgs>
    ): CheckSelect<T, Prisma__gd_import_fileClient<gd_import_file>, Prisma__gd_import_fileClient<gd_import_fileGetPayload<T>>>

    /**
     * Update one Gd_import_file.
     * @param {gd_import_fileUpdateArgs} args - Arguments to update one Gd_import_file.
     * @example
     * // Update one Gd_import_file
     * const gd_import_file = await prisma.gd_import_file.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gd_import_fileUpdateArgs>(
      args: SelectSubset<T, gd_import_fileUpdateArgs>
    ): CheckSelect<T, Prisma__gd_import_fileClient<gd_import_file>, Prisma__gd_import_fileClient<gd_import_fileGetPayload<T>>>

    /**
     * Delete zero or more Gd_import_files.
     * @param {gd_import_fileDeleteManyArgs} args - Arguments to filter Gd_import_files to delete.
     * @example
     * // Delete a few Gd_import_files
     * const { count } = await prisma.gd_import_file.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gd_import_fileDeleteManyArgs>(
      args?: SelectSubset<T, gd_import_fileDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gd_import_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_import_fileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gd_import_files
     * const gd_import_file = await prisma.gd_import_file.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gd_import_fileUpdateManyArgs>(
      args: SelectSubset<T, gd_import_fileUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gd_import_file.
     * @param {gd_import_fileUpsertArgs} args - Arguments to update or create a Gd_import_file.
     * @example
     * // Update or create a Gd_import_file
     * const gd_import_file = await prisma.gd_import_file.upsert({
     *   create: {
     *     // ... data to create a Gd_import_file
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gd_import_file we want to update
     *   }
     * })
    **/
    upsert<T extends gd_import_fileUpsertArgs>(
      args: SelectSubset<T, gd_import_fileUpsertArgs>
    ): CheckSelect<T, Prisma__gd_import_fileClient<gd_import_file>, Prisma__gd_import_fileClient<gd_import_fileGetPayload<T>>>

    /**
     * Count the number of Gd_import_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_import_fileCountArgs} args - Arguments to filter Gd_import_files to count.
     * @example
     * // Count the number of Gd_import_files
     * const count = await prisma.gd_import_file.count({
     *   where: {
     *     // ... the filter for the Gd_import_files we want to count
     *   }
     * })
    **/
    count<T extends gd_import_fileCountArgs>(
      args?: Subset<T, gd_import_fileCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gd_import_fileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gd_import_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_import_fileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gd_import_fileAggregateArgs>(args: Subset<T, Gd_import_fileAggregateArgs>): PrismaPromise<GetGd_import_fileAggregateType<T>>

    /**
     * Group by Gd_import_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_import_fileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gd_import_fileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gd_import_fileGroupByArgs['orderBy'] }
        : { orderBy?: Gd_import_fileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gd_import_fileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGd_import_fileGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for gd_import_file.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gd_import_fileClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * gd_import_file findUnique
   */
  export type gd_import_fileFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the gd_import_file
     * 
    **/
    select?: gd_import_fileSelect | null
    /**
     * Throw an Error if a gd_import_file can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_import_file to fetch.
     * 
    **/
    where: gd_import_fileWhereUniqueInput
  }


  /**
   * gd_import_file findFirst
   */
  export type gd_import_fileFindFirstArgs = {
    /**
     * Select specific fields to fetch from the gd_import_file
     * 
    **/
    select?: gd_import_fileSelect | null
    /**
     * Throw an Error if a gd_import_file can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_import_file to fetch.
     * 
    **/
    where?: gd_import_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_import_files to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_import_fileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gd_import_files.
     * 
    **/
    cursor?: gd_import_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_import_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_import_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gd_import_files.
     * 
    **/
    distinct?: Enumerable<Gd_import_fileScalarFieldEnum>
  }


  /**
   * gd_import_file findMany
   */
  export type gd_import_fileFindManyArgs = {
    /**
     * Select specific fields to fetch from the gd_import_file
     * 
    **/
    select?: gd_import_fileSelect | null
    /**
     * Filter, which gd_import_files to fetch.
     * 
    **/
    where?: gd_import_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_import_files to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_import_fileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gd_import_files.
     * 
    **/
    cursor?: gd_import_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_import_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_import_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gd_import_fileScalarFieldEnum>
  }


  /**
   * gd_import_file create
   */
  export type gd_import_fileCreateArgs = {
    /**
     * Select specific fields to fetch from the gd_import_file
     * 
    **/
    select?: gd_import_fileSelect | null
    /**
     * The data needed to create a gd_import_file.
     * 
    **/
    data: XOR<gd_import_fileCreateInput, gd_import_fileUncheckedCreateInput>
  }


  /**
   * gd_import_file createMany
   */
  export type gd_import_fileCreateManyArgs = {
    data: Enumerable<gd_import_fileCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gd_import_file update
   */
  export type gd_import_fileUpdateArgs = {
    /**
     * Select specific fields to fetch from the gd_import_file
     * 
    **/
    select?: gd_import_fileSelect | null
    /**
     * The data needed to update a gd_import_file.
     * 
    **/
    data: XOR<gd_import_fileUpdateInput, gd_import_fileUncheckedUpdateInput>
    /**
     * Choose, which gd_import_file to update.
     * 
    **/
    where: gd_import_fileWhereUniqueInput
  }


  /**
   * gd_import_file updateMany
   */
  export type gd_import_fileUpdateManyArgs = {
    data: XOR<gd_import_fileUpdateManyMutationInput, gd_import_fileUncheckedUpdateManyInput>
    where?: gd_import_fileWhereInput
  }


  /**
   * gd_import_file upsert
   */
  export type gd_import_fileUpsertArgs = {
    /**
     * Select specific fields to fetch from the gd_import_file
     * 
    **/
    select?: gd_import_fileSelect | null
    /**
     * The filter to search for the gd_import_file to update in case it exists.
     * 
    **/
    where: gd_import_fileWhereUniqueInput
    /**
     * In case the gd_import_file found by the `where` argument doesn't exist, create a new gd_import_file with this data.
     * 
    **/
    create: XOR<gd_import_fileCreateInput, gd_import_fileUncheckedCreateInput>
    /**
     * In case the gd_import_file was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<gd_import_fileUpdateInput, gd_import_fileUncheckedUpdateInput>
  }


  /**
   * gd_import_file delete
   */
  export type gd_import_fileDeleteArgs = {
    /**
     * Select specific fields to fetch from the gd_import_file
     * 
    **/
    select?: gd_import_fileSelect | null
    /**
     * Filter which gd_import_file to delete.
     * 
    **/
    where: gd_import_fileWhereUniqueInput
  }


  /**
   * gd_import_file deleteMany
   */
  export type gd_import_fileDeleteManyArgs = {
    where?: gd_import_fileWhereInput
  }


  /**
   * gd_import_file without action
   */
  export type gd_import_fileArgs = {
    /**
     * Select specific fields to fetch from the gd_import_file
     * 
    **/
    select?: gd_import_fileSelect | null
  }



  /**
   * Model gd_datalake_file
   */


  export type AggregateGd_datalake_file = {
    _count: Gd_datalake_fileCountAggregateOutputType | null
    _avg: Gd_datalake_fileAvgAggregateOutputType | null
    _sum: Gd_datalake_fileSumAggregateOutputType | null
    _min: Gd_datalake_fileMinAggregateOutputType | null
    _max: Gd_datalake_fileMaxAggregateOutputType | null
  }

  export type Gd_datalake_fileAvgAggregateOutputType = {
    dl_file_id: number | null
    dl_folder_id: number | null
    dl_file_deleted: number | null
    dl_file_created_by: number | null
    dl_file_updated_by: number | null
  }

  export type Gd_datalake_fileSumAggregateOutputType = {
    dl_file_id: number | null
    dl_folder_id: number | null
    dl_file_deleted: number | null
    dl_file_created_by: number | null
    dl_file_updated_by: number | null
  }

  export type Gd_datalake_fileMinAggregateOutputType = {
    dl_file_id: number | null
    dl_file_name: string | null
    dl_folder_id: number | null
    dl_file_content: string | null
    dl_file_deleted: number | null
    dl_file_created_by: number | null
    dl_file_updated_by: number | null
    dl_file_deleted_at: Date | null
    dl_file_updated_at: Date | null
    dl_file_created_at: Date | null
  }

  export type Gd_datalake_fileMaxAggregateOutputType = {
    dl_file_id: number | null
    dl_file_name: string | null
    dl_folder_id: number | null
    dl_file_content: string | null
    dl_file_deleted: number | null
    dl_file_created_by: number | null
    dl_file_updated_by: number | null
    dl_file_deleted_at: Date | null
    dl_file_updated_at: Date | null
    dl_file_created_at: Date | null
  }

  export type Gd_datalake_fileCountAggregateOutputType = {
    dl_file_id: number
    dl_file_name: number
    dl_folder_id: number
    dl_file_content: number
    dl_file_deleted: number
    dl_file_created_by: number
    dl_file_updated_by: number
    dl_file_deleted_at: number
    dl_file_updated_at: number
    dl_file_created_at: number
    _all: number
  }


  export type Gd_datalake_fileAvgAggregateInputType = {
    dl_file_id?: true
    dl_folder_id?: true
    dl_file_deleted?: true
    dl_file_created_by?: true
    dl_file_updated_by?: true
  }

  export type Gd_datalake_fileSumAggregateInputType = {
    dl_file_id?: true
    dl_folder_id?: true
    dl_file_deleted?: true
    dl_file_created_by?: true
    dl_file_updated_by?: true
  }

  export type Gd_datalake_fileMinAggregateInputType = {
    dl_file_id?: true
    dl_file_name?: true
    dl_folder_id?: true
    dl_file_content?: true
    dl_file_deleted?: true
    dl_file_created_by?: true
    dl_file_updated_by?: true
    dl_file_deleted_at?: true
    dl_file_updated_at?: true
    dl_file_created_at?: true
  }

  export type Gd_datalake_fileMaxAggregateInputType = {
    dl_file_id?: true
    dl_file_name?: true
    dl_folder_id?: true
    dl_file_content?: true
    dl_file_deleted?: true
    dl_file_created_by?: true
    dl_file_updated_by?: true
    dl_file_deleted_at?: true
    dl_file_updated_at?: true
    dl_file_created_at?: true
  }

  export type Gd_datalake_fileCountAggregateInputType = {
    dl_file_id?: true
    dl_file_name?: true
    dl_folder_id?: true
    dl_file_content?: true
    dl_file_deleted?: true
    dl_file_created_by?: true
    dl_file_updated_by?: true
    dl_file_deleted_at?: true
    dl_file_updated_at?: true
    dl_file_created_at?: true
    _all?: true
  }

  export type Gd_datalake_fileAggregateArgs = {
    /**
     * Filter which gd_datalake_file to aggregate.
     * 
    **/
    where?: gd_datalake_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_datalake_files to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_datalake_fileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: gd_datalake_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_datalake_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_datalake_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gd_datalake_files
    **/
    _count?: true | Gd_datalake_fileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gd_datalake_fileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gd_datalake_fileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gd_datalake_fileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gd_datalake_fileMaxAggregateInputType
  }

  export type GetGd_datalake_fileAggregateType<T extends Gd_datalake_fileAggregateArgs> = {
        [P in keyof T & keyof AggregateGd_datalake_file]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGd_datalake_file[P]>
      : GetScalarType<T[P], AggregateGd_datalake_file[P]>
  }




  export type Gd_datalake_fileGroupByArgs = {
    where?: gd_datalake_fileWhereInput
    orderBy?: Enumerable<gd_datalake_fileOrderByWithAggregationInput>
    by: Array<Gd_datalake_fileScalarFieldEnum>
    having?: gd_datalake_fileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gd_datalake_fileCountAggregateInputType | true
    _avg?: Gd_datalake_fileAvgAggregateInputType
    _sum?: Gd_datalake_fileSumAggregateInputType
    _min?: Gd_datalake_fileMinAggregateInputType
    _max?: Gd_datalake_fileMaxAggregateInputType
  }


  export type Gd_datalake_fileGroupByOutputType = {
    dl_file_id: number
    dl_file_name: string | null
    dl_folder_id: number | null
    dl_file_content: string | null
    dl_file_deleted: number | null
    dl_file_created_by: number | null
    dl_file_updated_by: number | null
    dl_file_deleted_at: Date | null
    dl_file_updated_at: Date | null
    dl_file_created_at: Date | null
    _count: Gd_datalake_fileCountAggregateOutputType | null
    _avg: Gd_datalake_fileAvgAggregateOutputType | null
    _sum: Gd_datalake_fileSumAggregateOutputType | null
    _min: Gd_datalake_fileMinAggregateOutputType | null
    _max: Gd_datalake_fileMaxAggregateOutputType | null
  }

  type GetGd_datalake_fileGroupByPayload<T extends Gd_datalake_fileGroupByArgs> = Promise<
    Array<
      PickArray<Gd_datalake_fileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gd_datalake_fileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gd_datalake_fileGroupByOutputType[P]>
            : GetScalarType<T[P], Gd_datalake_fileGroupByOutputType[P]>
        }
      >
    >


  export type gd_datalake_fileSelect = {
    dl_file_id?: boolean
    dl_file_name?: boolean
    dl_folder_id?: boolean
    dl_file_content?: boolean
    dl_file_deleted?: boolean
    dl_file_created_by?: boolean
    dl_file_updated_by?: boolean
    dl_file_deleted_at?: boolean
    dl_file_updated_at?: boolean
    dl_file_created_at?: boolean
    folder?: boolean | gd_datalake_folderArgs
  }

  export type gd_datalake_fileInclude = {
    folder?: boolean | gd_datalake_folderArgs
  }

  export type gd_datalake_fileGetPayload<
    S extends boolean | null | undefined | gd_datalake_fileArgs,
    U = keyof S
      > = S extends true
        ? gd_datalake_file
    : S extends undefined
    ? never
    : S extends gd_datalake_fileArgs | gd_datalake_fileFindManyArgs
    ?'include' extends U
    ? gd_datalake_file  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'folder'
        ? gd_datalake_folderGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof gd_datalake_file ?gd_datalake_file [P]
  : 
          P extends 'folder'
        ? gd_datalake_folderGetPayload<S['select'][P]> | null : never
  } 
    : gd_datalake_file
  : gd_datalake_file


  type gd_datalake_fileCountArgs = Merge<
    Omit<gd_datalake_fileFindManyArgs, 'select' | 'include'> & {
      select?: Gd_datalake_fileCountAggregateInputType | true
    }
  >

  export interface gd_datalake_fileDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Gd_datalake_file that matches the filter.
     * @param {gd_datalake_fileFindUniqueArgs} args - Arguments to find a Gd_datalake_file
     * @example
     * // Get one Gd_datalake_file
     * const gd_datalake_file = await prisma.gd_datalake_file.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gd_datalake_fileFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gd_datalake_fileFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gd_datalake_file'> extends True ? CheckSelect<T, Prisma__gd_datalake_fileClient<gd_datalake_file>, Prisma__gd_datalake_fileClient<gd_datalake_fileGetPayload<T>>> : CheckSelect<T, Prisma__gd_datalake_fileClient<gd_datalake_file | null >, Prisma__gd_datalake_fileClient<gd_datalake_fileGetPayload<T> | null >>

    /**
     * Find the first Gd_datalake_file that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_datalake_fileFindFirstArgs} args - Arguments to find a Gd_datalake_file
     * @example
     * // Get one Gd_datalake_file
     * const gd_datalake_file = await prisma.gd_datalake_file.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gd_datalake_fileFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gd_datalake_fileFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gd_datalake_file'> extends True ? CheckSelect<T, Prisma__gd_datalake_fileClient<gd_datalake_file>, Prisma__gd_datalake_fileClient<gd_datalake_fileGetPayload<T>>> : CheckSelect<T, Prisma__gd_datalake_fileClient<gd_datalake_file | null >, Prisma__gd_datalake_fileClient<gd_datalake_fileGetPayload<T> | null >>

    /**
     * Find zero or more Gd_datalake_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_datalake_fileFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gd_datalake_files
     * const gd_datalake_files = await prisma.gd_datalake_file.findMany()
     * 
     * // Get first 10 Gd_datalake_files
     * const gd_datalake_files = await prisma.gd_datalake_file.findMany({ take: 10 })
     * 
     * // Only select the `dl_file_id`
     * const gd_datalake_fileWithDl_file_idOnly = await prisma.gd_datalake_file.findMany({ select: { dl_file_id: true } })
     * 
    **/
    findMany<T extends gd_datalake_fileFindManyArgs>(
      args?: SelectSubset<T, gd_datalake_fileFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<gd_datalake_file>>, PrismaPromise<Array<gd_datalake_fileGetPayload<T>>>>

    /**
     * Create a Gd_datalake_file.
     * @param {gd_datalake_fileCreateArgs} args - Arguments to create a Gd_datalake_file.
     * @example
     * // Create one Gd_datalake_file
     * const Gd_datalake_file = await prisma.gd_datalake_file.create({
     *   data: {
     *     // ... data to create a Gd_datalake_file
     *   }
     * })
     * 
    **/
    create<T extends gd_datalake_fileCreateArgs>(
      args: SelectSubset<T, gd_datalake_fileCreateArgs>
    ): CheckSelect<T, Prisma__gd_datalake_fileClient<gd_datalake_file>, Prisma__gd_datalake_fileClient<gd_datalake_fileGetPayload<T>>>

    /**
     * Create many Gd_datalake_files.
     *     @param {gd_datalake_fileCreateManyArgs} args - Arguments to create many Gd_datalake_files.
     *     @example
     *     // Create many Gd_datalake_files
     *     const gd_datalake_file = await prisma.gd_datalake_file.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gd_datalake_fileCreateManyArgs>(
      args?: SelectSubset<T, gd_datalake_fileCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gd_datalake_file.
     * @param {gd_datalake_fileDeleteArgs} args - Arguments to delete one Gd_datalake_file.
     * @example
     * // Delete one Gd_datalake_file
     * const Gd_datalake_file = await prisma.gd_datalake_file.delete({
     *   where: {
     *     // ... filter to delete one Gd_datalake_file
     *   }
     * })
     * 
    **/
    delete<T extends gd_datalake_fileDeleteArgs>(
      args: SelectSubset<T, gd_datalake_fileDeleteArgs>
    ): CheckSelect<T, Prisma__gd_datalake_fileClient<gd_datalake_file>, Prisma__gd_datalake_fileClient<gd_datalake_fileGetPayload<T>>>

    /**
     * Update one Gd_datalake_file.
     * @param {gd_datalake_fileUpdateArgs} args - Arguments to update one Gd_datalake_file.
     * @example
     * // Update one Gd_datalake_file
     * const gd_datalake_file = await prisma.gd_datalake_file.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gd_datalake_fileUpdateArgs>(
      args: SelectSubset<T, gd_datalake_fileUpdateArgs>
    ): CheckSelect<T, Prisma__gd_datalake_fileClient<gd_datalake_file>, Prisma__gd_datalake_fileClient<gd_datalake_fileGetPayload<T>>>

    /**
     * Delete zero or more Gd_datalake_files.
     * @param {gd_datalake_fileDeleteManyArgs} args - Arguments to filter Gd_datalake_files to delete.
     * @example
     * // Delete a few Gd_datalake_files
     * const { count } = await prisma.gd_datalake_file.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gd_datalake_fileDeleteManyArgs>(
      args?: SelectSubset<T, gd_datalake_fileDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gd_datalake_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_datalake_fileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gd_datalake_files
     * const gd_datalake_file = await prisma.gd_datalake_file.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gd_datalake_fileUpdateManyArgs>(
      args: SelectSubset<T, gd_datalake_fileUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gd_datalake_file.
     * @param {gd_datalake_fileUpsertArgs} args - Arguments to update or create a Gd_datalake_file.
     * @example
     * // Update or create a Gd_datalake_file
     * const gd_datalake_file = await prisma.gd_datalake_file.upsert({
     *   create: {
     *     // ... data to create a Gd_datalake_file
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gd_datalake_file we want to update
     *   }
     * })
    **/
    upsert<T extends gd_datalake_fileUpsertArgs>(
      args: SelectSubset<T, gd_datalake_fileUpsertArgs>
    ): CheckSelect<T, Prisma__gd_datalake_fileClient<gd_datalake_file>, Prisma__gd_datalake_fileClient<gd_datalake_fileGetPayload<T>>>

    /**
     * Count the number of Gd_datalake_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_datalake_fileCountArgs} args - Arguments to filter Gd_datalake_files to count.
     * @example
     * // Count the number of Gd_datalake_files
     * const count = await prisma.gd_datalake_file.count({
     *   where: {
     *     // ... the filter for the Gd_datalake_files we want to count
     *   }
     * })
    **/
    count<T extends gd_datalake_fileCountArgs>(
      args?: Subset<T, gd_datalake_fileCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gd_datalake_fileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gd_datalake_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_datalake_fileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gd_datalake_fileAggregateArgs>(args: Subset<T, Gd_datalake_fileAggregateArgs>): PrismaPromise<GetGd_datalake_fileAggregateType<T>>

    /**
     * Group by Gd_datalake_file.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_datalake_fileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gd_datalake_fileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gd_datalake_fileGroupByArgs['orderBy'] }
        : { orderBy?: Gd_datalake_fileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gd_datalake_fileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGd_datalake_fileGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for gd_datalake_file.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gd_datalake_fileClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    folder<T extends gd_datalake_folderArgs = {}>(args?: Subset<T, gd_datalake_folderArgs>): CheckSelect<T, Prisma__gd_datalake_folderClient<gd_datalake_folder | null >, Prisma__gd_datalake_folderClient<gd_datalake_folderGetPayload<T> | null >>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * gd_datalake_file findUnique
   */
  export type gd_datalake_fileFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_file
     * 
    **/
    select?: gd_datalake_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_fileInclude | null
    /**
     * Throw an Error if a gd_datalake_file can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_datalake_file to fetch.
     * 
    **/
    where: gd_datalake_fileWhereUniqueInput
  }


  /**
   * gd_datalake_file findFirst
   */
  export type gd_datalake_fileFindFirstArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_file
     * 
    **/
    select?: gd_datalake_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_fileInclude | null
    /**
     * Throw an Error if a gd_datalake_file can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_datalake_file to fetch.
     * 
    **/
    where?: gd_datalake_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_datalake_files to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_datalake_fileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gd_datalake_files.
     * 
    **/
    cursor?: gd_datalake_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_datalake_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_datalake_files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gd_datalake_files.
     * 
    **/
    distinct?: Enumerable<Gd_datalake_fileScalarFieldEnum>
  }


  /**
   * gd_datalake_file findMany
   */
  export type gd_datalake_fileFindManyArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_file
     * 
    **/
    select?: gd_datalake_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_fileInclude | null
    /**
     * Filter, which gd_datalake_files to fetch.
     * 
    **/
    where?: gd_datalake_fileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_datalake_files to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_datalake_fileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gd_datalake_files.
     * 
    **/
    cursor?: gd_datalake_fileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_datalake_files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_datalake_files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gd_datalake_fileScalarFieldEnum>
  }


  /**
   * gd_datalake_file create
   */
  export type gd_datalake_fileCreateArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_file
     * 
    **/
    select?: gd_datalake_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_fileInclude | null
    /**
     * The data needed to create a gd_datalake_file.
     * 
    **/
    data: XOR<gd_datalake_fileCreateInput, gd_datalake_fileUncheckedCreateInput>
  }


  /**
   * gd_datalake_file createMany
   */
  export type gd_datalake_fileCreateManyArgs = {
    data: Enumerable<gd_datalake_fileCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gd_datalake_file update
   */
  export type gd_datalake_fileUpdateArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_file
     * 
    **/
    select?: gd_datalake_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_fileInclude | null
    /**
     * The data needed to update a gd_datalake_file.
     * 
    **/
    data: XOR<gd_datalake_fileUpdateInput, gd_datalake_fileUncheckedUpdateInput>
    /**
     * Choose, which gd_datalake_file to update.
     * 
    **/
    where: gd_datalake_fileWhereUniqueInput
  }


  /**
   * gd_datalake_file updateMany
   */
  export type gd_datalake_fileUpdateManyArgs = {
    data: XOR<gd_datalake_fileUpdateManyMutationInput, gd_datalake_fileUncheckedUpdateManyInput>
    where?: gd_datalake_fileWhereInput
  }


  /**
   * gd_datalake_file upsert
   */
  export type gd_datalake_fileUpsertArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_file
     * 
    **/
    select?: gd_datalake_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_fileInclude | null
    /**
     * The filter to search for the gd_datalake_file to update in case it exists.
     * 
    **/
    where: gd_datalake_fileWhereUniqueInput
    /**
     * In case the gd_datalake_file found by the `where` argument doesn't exist, create a new gd_datalake_file with this data.
     * 
    **/
    create: XOR<gd_datalake_fileCreateInput, gd_datalake_fileUncheckedCreateInput>
    /**
     * In case the gd_datalake_file was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<gd_datalake_fileUpdateInput, gd_datalake_fileUncheckedUpdateInput>
  }


  /**
   * gd_datalake_file delete
   */
  export type gd_datalake_fileDeleteArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_file
     * 
    **/
    select?: gd_datalake_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_fileInclude | null
    /**
     * Filter which gd_datalake_file to delete.
     * 
    **/
    where: gd_datalake_fileWhereUniqueInput
  }


  /**
   * gd_datalake_file deleteMany
   */
  export type gd_datalake_fileDeleteManyArgs = {
    where?: gd_datalake_fileWhereInput
  }


  /**
   * gd_datalake_file without action
   */
  export type gd_datalake_fileArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_file
     * 
    **/
    select?: gd_datalake_fileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_fileInclude | null
  }



  /**
   * Model gd_datalake_folder
   */


  export type AggregateGd_datalake_folder = {
    _count: Gd_datalake_folderCountAggregateOutputType | null
    _avg: Gd_datalake_folderAvgAggregateOutputType | null
    _sum: Gd_datalake_folderSumAggregateOutputType | null
    _min: Gd_datalake_folderMinAggregateOutputType | null
    _max: Gd_datalake_folderMaxAggregateOutputType | null
  }

  export type Gd_datalake_folderAvgAggregateOutputType = {
    dl_folder_id: number | null
    dl_parent_folder_id: number | null
    dl_folder_deleted: number | null
    dl_folder_created_by: number | null
    dl_folder_updated_by: number | null
  }

  export type Gd_datalake_folderSumAggregateOutputType = {
    dl_folder_id: number | null
    dl_parent_folder_id: number | null
    dl_folder_deleted: number | null
    dl_folder_created_by: number | null
    dl_folder_updated_by: number | null
  }

  export type Gd_datalake_folderMinAggregateOutputType = {
    dl_folder_id: number | null
    dl_folder_name: string | null
    dl_parent_folder_id: number | null
    dl_folder_deleted: number | null
    dl_folder_created_by: number | null
    dl_folder_updated_by: number | null
    dl_folder_deleted_at: Date | null
    dl_folder_updated_at: Date | null
    dl_folder_created_at: Date | null
  }

  export type Gd_datalake_folderMaxAggregateOutputType = {
    dl_folder_id: number | null
    dl_folder_name: string | null
    dl_parent_folder_id: number | null
    dl_folder_deleted: number | null
    dl_folder_created_by: number | null
    dl_folder_updated_by: number | null
    dl_folder_deleted_at: Date | null
    dl_folder_updated_at: Date | null
    dl_folder_created_at: Date | null
  }

  export type Gd_datalake_folderCountAggregateOutputType = {
    dl_folder_id: number
    dl_folder_name: number
    dl_parent_folder_id: number
    dl_folder_deleted: number
    dl_folder_created_by: number
    dl_folder_updated_by: number
    dl_folder_deleted_at: number
    dl_folder_updated_at: number
    dl_folder_created_at: number
    _all: number
  }


  export type Gd_datalake_folderAvgAggregateInputType = {
    dl_folder_id?: true
    dl_parent_folder_id?: true
    dl_folder_deleted?: true
    dl_folder_created_by?: true
    dl_folder_updated_by?: true
  }

  export type Gd_datalake_folderSumAggregateInputType = {
    dl_folder_id?: true
    dl_parent_folder_id?: true
    dl_folder_deleted?: true
    dl_folder_created_by?: true
    dl_folder_updated_by?: true
  }

  export type Gd_datalake_folderMinAggregateInputType = {
    dl_folder_id?: true
    dl_folder_name?: true
    dl_parent_folder_id?: true
    dl_folder_deleted?: true
    dl_folder_created_by?: true
    dl_folder_updated_by?: true
    dl_folder_deleted_at?: true
    dl_folder_updated_at?: true
    dl_folder_created_at?: true
  }

  export type Gd_datalake_folderMaxAggregateInputType = {
    dl_folder_id?: true
    dl_folder_name?: true
    dl_parent_folder_id?: true
    dl_folder_deleted?: true
    dl_folder_created_by?: true
    dl_folder_updated_by?: true
    dl_folder_deleted_at?: true
    dl_folder_updated_at?: true
    dl_folder_created_at?: true
  }

  export type Gd_datalake_folderCountAggregateInputType = {
    dl_folder_id?: true
    dl_folder_name?: true
    dl_parent_folder_id?: true
    dl_folder_deleted?: true
    dl_folder_created_by?: true
    dl_folder_updated_by?: true
    dl_folder_deleted_at?: true
    dl_folder_updated_at?: true
    dl_folder_created_at?: true
    _all?: true
  }

  export type Gd_datalake_folderAggregateArgs = {
    /**
     * Filter which gd_datalake_folder to aggregate.
     * 
    **/
    where?: gd_datalake_folderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_datalake_folders to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_datalake_folderOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: gd_datalake_folderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_datalake_folders from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_datalake_folders.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned gd_datalake_folders
    **/
    _count?: true | Gd_datalake_folderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gd_datalake_folderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gd_datalake_folderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gd_datalake_folderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gd_datalake_folderMaxAggregateInputType
  }

  export type GetGd_datalake_folderAggregateType<T extends Gd_datalake_folderAggregateArgs> = {
        [P in keyof T & keyof AggregateGd_datalake_folder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGd_datalake_folder[P]>
      : GetScalarType<T[P], AggregateGd_datalake_folder[P]>
  }




  export type Gd_datalake_folderGroupByArgs = {
    where?: gd_datalake_folderWhereInput
    orderBy?: Enumerable<gd_datalake_folderOrderByWithAggregationInput>
    by: Array<Gd_datalake_folderScalarFieldEnum>
    having?: gd_datalake_folderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gd_datalake_folderCountAggregateInputType | true
    _avg?: Gd_datalake_folderAvgAggregateInputType
    _sum?: Gd_datalake_folderSumAggregateInputType
    _min?: Gd_datalake_folderMinAggregateInputType
    _max?: Gd_datalake_folderMaxAggregateInputType
  }


  export type Gd_datalake_folderGroupByOutputType = {
    dl_folder_id: number
    dl_folder_name: string | null
    dl_parent_folder_id: number | null
    dl_folder_deleted: number | null
    dl_folder_created_by: number | null
    dl_folder_updated_by: number | null
    dl_folder_deleted_at: Date | null
    dl_folder_updated_at: Date | null
    dl_folder_created_at: Date | null
    _count: Gd_datalake_folderCountAggregateOutputType | null
    _avg: Gd_datalake_folderAvgAggregateOutputType | null
    _sum: Gd_datalake_folderSumAggregateOutputType | null
    _min: Gd_datalake_folderMinAggregateOutputType | null
    _max: Gd_datalake_folderMaxAggregateOutputType | null
  }

  type GetGd_datalake_folderGroupByPayload<T extends Gd_datalake_folderGroupByArgs> = Promise<
    Array<
      PickArray<Gd_datalake_folderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gd_datalake_folderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gd_datalake_folderGroupByOutputType[P]>
            : GetScalarType<T[P], Gd_datalake_folderGroupByOutputType[P]>
        }
      >
    >


  export type gd_datalake_folderSelect = {
    dl_folder_id?: boolean
    dl_folder_name?: boolean
    dl_parent_folder_id?: boolean
    dl_folder_deleted?: boolean
    dl_folder_created_by?: boolean
    dl_folder_updated_by?: boolean
    dl_folder_deleted_at?: boolean
    dl_folder_updated_at?: boolean
    dl_folder_created_at?: boolean
    files?: boolean | gd_datalake_fileFindManyArgs
    _count?: boolean | Gd_datalake_folderCountOutputTypeArgs
  }

  export type gd_datalake_folderInclude = {
    files?: boolean | gd_datalake_fileFindManyArgs
    _count?: boolean | Gd_datalake_folderCountOutputTypeArgs
  }

  export type gd_datalake_folderGetPayload<
    S extends boolean | null | undefined | gd_datalake_folderArgs,
    U = keyof S
      > = S extends true
        ? gd_datalake_folder
    : S extends undefined
    ? never
    : S extends gd_datalake_folderArgs | gd_datalake_folderFindManyArgs
    ?'include' extends U
    ? gd_datalake_folder  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'files'
        ? Array < gd_datalake_fileGetPayload<S['include'][P]>>  :
        P extends '_count'
        ? Gd_datalake_folderCountOutputTypeGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof gd_datalake_folder ?gd_datalake_folder [P]
  : 
          P extends 'files'
        ? Array < gd_datalake_fileGetPayload<S['select'][P]>>  :
        P extends '_count'
        ? Gd_datalake_folderCountOutputTypeGetPayload<S['select'][P]> : never
  } 
    : gd_datalake_folder
  : gd_datalake_folder


  type gd_datalake_folderCountArgs = Merge<
    Omit<gd_datalake_folderFindManyArgs, 'select' | 'include'> & {
      select?: Gd_datalake_folderCountAggregateInputType | true
    }
  >

  export interface gd_datalake_folderDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one Gd_datalake_folder that matches the filter.
     * @param {gd_datalake_folderFindUniqueArgs} args - Arguments to find a Gd_datalake_folder
     * @example
     * // Get one Gd_datalake_folder
     * const gd_datalake_folder = await prisma.gd_datalake_folder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends gd_datalake_folderFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, gd_datalake_folderFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'gd_datalake_folder'> extends True ? CheckSelect<T, Prisma__gd_datalake_folderClient<gd_datalake_folder>, Prisma__gd_datalake_folderClient<gd_datalake_folderGetPayload<T>>> : CheckSelect<T, Prisma__gd_datalake_folderClient<gd_datalake_folder | null >, Prisma__gd_datalake_folderClient<gd_datalake_folderGetPayload<T> | null >>

    /**
     * Find the first Gd_datalake_folder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_datalake_folderFindFirstArgs} args - Arguments to find a Gd_datalake_folder
     * @example
     * // Get one Gd_datalake_folder
     * const gd_datalake_folder = await prisma.gd_datalake_folder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends gd_datalake_folderFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, gd_datalake_folderFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'gd_datalake_folder'> extends True ? CheckSelect<T, Prisma__gd_datalake_folderClient<gd_datalake_folder>, Prisma__gd_datalake_folderClient<gd_datalake_folderGetPayload<T>>> : CheckSelect<T, Prisma__gd_datalake_folderClient<gd_datalake_folder | null >, Prisma__gd_datalake_folderClient<gd_datalake_folderGetPayload<T> | null >>

    /**
     * Find zero or more Gd_datalake_folders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_datalake_folderFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gd_datalake_folders
     * const gd_datalake_folders = await prisma.gd_datalake_folder.findMany()
     * 
     * // Get first 10 Gd_datalake_folders
     * const gd_datalake_folders = await prisma.gd_datalake_folder.findMany({ take: 10 })
     * 
     * // Only select the `dl_folder_id`
     * const gd_datalake_folderWithDl_folder_idOnly = await prisma.gd_datalake_folder.findMany({ select: { dl_folder_id: true } })
     * 
    **/
    findMany<T extends gd_datalake_folderFindManyArgs>(
      args?: SelectSubset<T, gd_datalake_folderFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<gd_datalake_folder>>, PrismaPromise<Array<gd_datalake_folderGetPayload<T>>>>

    /**
     * Create a Gd_datalake_folder.
     * @param {gd_datalake_folderCreateArgs} args - Arguments to create a Gd_datalake_folder.
     * @example
     * // Create one Gd_datalake_folder
     * const Gd_datalake_folder = await prisma.gd_datalake_folder.create({
     *   data: {
     *     // ... data to create a Gd_datalake_folder
     *   }
     * })
     * 
    **/
    create<T extends gd_datalake_folderCreateArgs>(
      args: SelectSubset<T, gd_datalake_folderCreateArgs>
    ): CheckSelect<T, Prisma__gd_datalake_folderClient<gd_datalake_folder>, Prisma__gd_datalake_folderClient<gd_datalake_folderGetPayload<T>>>

    /**
     * Create many Gd_datalake_folders.
     *     @param {gd_datalake_folderCreateManyArgs} args - Arguments to create many Gd_datalake_folders.
     *     @example
     *     // Create many Gd_datalake_folders
     *     const gd_datalake_folder = await prisma.gd_datalake_folder.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends gd_datalake_folderCreateManyArgs>(
      args?: SelectSubset<T, gd_datalake_folderCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gd_datalake_folder.
     * @param {gd_datalake_folderDeleteArgs} args - Arguments to delete one Gd_datalake_folder.
     * @example
     * // Delete one Gd_datalake_folder
     * const Gd_datalake_folder = await prisma.gd_datalake_folder.delete({
     *   where: {
     *     // ... filter to delete one Gd_datalake_folder
     *   }
     * })
     * 
    **/
    delete<T extends gd_datalake_folderDeleteArgs>(
      args: SelectSubset<T, gd_datalake_folderDeleteArgs>
    ): CheckSelect<T, Prisma__gd_datalake_folderClient<gd_datalake_folder>, Prisma__gd_datalake_folderClient<gd_datalake_folderGetPayload<T>>>

    /**
     * Update one Gd_datalake_folder.
     * @param {gd_datalake_folderUpdateArgs} args - Arguments to update one Gd_datalake_folder.
     * @example
     * // Update one Gd_datalake_folder
     * const gd_datalake_folder = await prisma.gd_datalake_folder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends gd_datalake_folderUpdateArgs>(
      args: SelectSubset<T, gd_datalake_folderUpdateArgs>
    ): CheckSelect<T, Prisma__gd_datalake_folderClient<gd_datalake_folder>, Prisma__gd_datalake_folderClient<gd_datalake_folderGetPayload<T>>>

    /**
     * Delete zero or more Gd_datalake_folders.
     * @param {gd_datalake_folderDeleteManyArgs} args - Arguments to filter Gd_datalake_folders to delete.
     * @example
     * // Delete a few Gd_datalake_folders
     * const { count } = await prisma.gd_datalake_folder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends gd_datalake_folderDeleteManyArgs>(
      args?: SelectSubset<T, gd_datalake_folderDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gd_datalake_folders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_datalake_folderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gd_datalake_folders
     * const gd_datalake_folder = await prisma.gd_datalake_folder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends gd_datalake_folderUpdateManyArgs>(
      args: SelectSubset<T, gd_datalake_folderUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gd_datalake_folder.
     * @param {gd_datalake_folderUpsertArgs} args - Arguments to update or create a Gd_datalake_folder.
     * @example
     * // Update or create a Gd_datalake_folder
     * const gd_datalake_folder = await prisma.gd_datalake_folder.upsert({
     *   create: {
     *     // ... data to create a Gd_datalake_folder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gd_datalake_folder we want to update
     *   }
     * })
    **/
    upsert<T extends gd_datalake_folderUpsertArgs>(
      args: SelectSubset<T, gd_datalake_folderUpsertArgs>
    ): CheckSelect<T, Prisma__gd_datalake_folderClient<gd_datalake_folder>, Prisma__gd_datalake_folderClient<gd_datalake_folderGetPayload<T>>>

    /**
     * Count the number of Gd_datalake_folders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {gd_datalake_folderCountArgs} args - Arguments to filter Gd_datalake_folders to count.
     * @example
     * // Count the number of Gd_datalake_folders
     * const count = await prisma.gd_datalake_folder.count({
     *   where: {
     *     // ... the filter for the Gd_datalake_folders we want to count
     *   }
     * })
    **/
    count<T extends gd_datalake_folderCountArgs>(
      args?: Subset<T, gd_datalake_folderCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gd_datalake_folderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gd_datalake_folder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_datalake_folderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gd_datalake_folderAggregateArgs>(args: Subset<T, Gd_datalake_folderAggregateArgs>): PrismaPromise<GetGd_datalake_folderAggregateType<T>>

    /**
     * Group by Gd_datalake_folder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gd_datalake_folderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gd_datalake_folderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gd_datalake_folderGroupByArgs['orderBy'] }
        : { orderBy?: Gd_datalake_folderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gd_datalake_folderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGd_datalake_folderGroupByPayload<T> : Promise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for gd_datalake_folder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__gd_datalake_folderClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    files<T extends gd_datalake_fileFindManyArgs = {}>(args?: Subset<T, gd_datalake_fileFindManyArgs>): CheckSelect<T, PrismaPromise<Array<gd_datalake_file>>, PrismaPromise<Array<gd_datalake_fileGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * gd_datalake_folder findUnique
   */
  export type gd_datalake_folderFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_folder
     * 
    **/
    select?: gd_datalake_folderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_folderInclude | null
    /**
     * Throw an Error if a gd_datalake_folder can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_datalake_folder to fetch.
     * 
    **/
    where: gd_datalake_folderWhereUniqueInput
  }


  /**
   * gd_datalake_folder findFirst
   */
  export type gd_datalake_folderFindFirstArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_folder
     * 
    **/
    select?: gd_datalake_folderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_folderInclude | null
    /**
     * Throw an Error if a gd_datalake_folder can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which gd_datalake_folder to fetch.
     * 
    **/
    where?: gd_datalake_folderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_datalake_folders to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_datalake_folderOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for gd_datalake_folders.
     * 
    **/
    cursor?: gd_datalake_folderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_datalake_folders from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_datalake_folders.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of gd_datalake_folders.
     * 
    **/
    distinct?: Enumerable<Gd_datalake_folderScalarFieldEnum>
  }


  /**
   * gd_datalake_folder findMany
   */
  export type gd_datalake_folderFindManyArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_folder
     * 
    **/
    select?: gd_datalake_folderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_folderInclude | null
    /**
     * Filter, which gd_datalake_folders to fetch.
     * 
    **/
    where?: gd_datalake_folderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of gd_datalake_folders to fetch.
     * 
    **/
    orderBy?: Enumerable<gd_datalake_folderOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing gd_datalake_folders.
     * 
    **/
    cursor?: gd_datalake_folderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` gd_datalake_folders from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` gd_datalake_folders.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gd_datalake_folderScalarFieldEnum>
  }


  /**
   * gd_datalake_folder create
   */
  export type gd_datalake_folderCreateArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_folder
     * 
    **/
    select?: gd_datalake_folderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_folderInclude | null
    /**
     * The data needed to create a gd_datalake_folder.
     * 
    **/
    data: XOR<gd_datalake_folderCreateInput, gd_datalake_folderUncheckedCreateInput>
  }


  /**
   * gd_datalake_folder createMany
   */
  export type gd_datalake_folderCreateManyArgs = {
    data: Enumerable<gd_datalake_folderCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * gd_datalake_folder update
   */
  export type gd_datalake_folderUpdateArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_folder
     * 
    **/
    select?: gd_datalake_folderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_folderInclude | null
    /**
     * The data needed to update a gd_datalake_folder.
     * 
    **/
    data: XOR<gd_datalake_folderUpdateInput, gd_datalake_folderUncheckedUpdateInput>
    /**
     * Choose, which gd_datalake_folder to update.
     * 
    **/
    where: gd_datalake_folderWhereUniqueInput
  }


  /**
   * gd_datalake_folder updateMany
   */
  export type gd_datalake_folderUpdateManyArgs = {
    data: XOR<gd_datalake_folderUpdateManyMutationInput, gd_datalake_folderUncheckedUpdateManyInput>
    where?: gd_datalake_folderWhereInput
  }


  /**
   * gd_datalake_folder upsert
   */
  export type gd_datalake_folderUpsertArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_folder
     * 
    **/
    select?: gd_datalake_folderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_folderInclude | null
    /**
     * The filter to search for the gd_datalake_folder to update in case it exists.
     * 
    **/
    where: gd_datalake_folderWhereUniqueInput
    /**
     * In case the gd_datalake_folder found by the `where` argument doesn't exist, create a new gd_datalake_folder with this data.
     * 
    **/
    create: XOR<gd_datalake_folderCreateInput, gd_datalake_folderUncheckedCreateInput>
    /**
     * In case the gd_datalake_folder was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<gd_datalake_folderUpdateInput, gd_datalake_folderUncheckedUpdateInput>
  }


  /**
   * gd_datalake_folder delete
   */
  export type gd_datalake_folderDeleteArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_folder
     * 
    **/
    select?: gd_datalake_folderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_folderInclude | null
    /**
     * Filter which gd_datalake_folder to delete.
     * 
    **/
    where: gd_datalake_folderWhereUniqueInput
  }


  /**
   * gd_datalake_folder deleteMany
   */
  export type gd_datalake_folderDeleteManyArgs = {
    where?: gd_datalake_folderWhereInput
  }


  /**
   * gd_datalake_folder without action
   */
  export type gd_datalake_folderArgs = {
    /**
     * Select specific fields to fetch from the gd_datalake_folder
     * 
    **/
    select?: gd_datalake_folderSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: gd_datalake_folderInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const Gd_userScalarFieldEnum: {
    user_id: 'user_id',
    user_email: 'user_email',
    user_password: 'user_password',
    user_first_name: 'user_first_name',
    user_last_name: 'user_last_name',
    user_status: 'user_status',
    user_create_at: 'user_create_at',
    user_update_at: 'user_update_at',
    user_create_by: 'user_create_by',
    user_update_by: 'user_update_by',
    user_deleted: 'user_deleted',
    user_deleted_at: 'user_deleted_at'
  };

  export type Gd_userScalarFieldEnum = (typeof Gd_userScalarFieldEnum)[keyof typeof Gd_userScalarFieldEnum]


  export const Gd_tokenScalarFieldEnum: {
    access_token: 'access_token',
    user_id: 'user_id',
    referesh_token: 'referesh_token',
    token_create_at: 'token_create_at',
    token_expired_at: 'token_expired_at'
  };

  export type Gd_tokenScalarFieldEnum = (typeof Gd_tokenScalarFieldEnum)[keyof typeof Gd_tokenScalarFieldEnum]


  export const Gd_roleScalarFieldEnum: {
    role_id: 'role_id',
    role_name: 'role_name',
    role_create_date: 'role_create_date',
    role_update_date: 'role_update_date',
    role_create_by: 'role_create_by',
    role_update_by: 'role_update_by'
  };

  export type Gd_roleScalarFieldEnum = (typeof Gd_roleScalarFieldEnum)[keyof typeof Gd_roleScalarFieldEnum]


  export const Gd_user_roleScalarFieldEnum: {
    user_id: 'user_id',
    role_id: 'role_id',
    user_role_create_date: 'user_role_create_date',
    user_role_update_date: 'user_role_update_date',
    user_role_create_by: 'user_role_create_by',
    user_role_update_by: 'user_role_update_by'
  };

  export type Gd_user_roleScalarFieldEnum = (typeof Gd_user_roleScalarFieldEnum)[keyof typeof Gd_user_roleScalarFieldEnum]


  export const Gd_projectScalarFieldEnum: {
    project_id: 'project_id',
    project_name: 'project_name',
    project_revision: 'project_revision',
    project_create_date: 'project_create_date',
    project_update_date: 'project_update_date',
    project_create_by: 'project_create_by',
    project_update_by: 'project_update_by',
    project_deleted: 'project_deleted',
    project_deleted_at: 'project_deleted_at'
  };

  export type Gd_projectScalarFieldEnum = (typeof Gd_projectScalarFieldEnum)[keyof typeof Gd_projectScalarFieldEnum]


  export const Gd_user_projectScalarFieldEnum: {
    project_id: 'project_id',
    user_id: 'user_id',
    user_project_create_date: 'user_project_create_date',
    user_project_update_date: 'user_project_update_date',
    user_project_create_by: 'user_project_create_by',
    user_project_update_by: 'user_project_update_by'
  };

  export type Gd_user_projectScalarFieldEnum = (typeof Gd_user_projectScalarFieldEnum)[keyof typeof Gd_user_projectScalarFieldEnum]


  export const Gd_workflowScalarFieldEnum: {
    workflow_id: 'workflow_id',
    workflow_name: 'workflow_name',
    project_id: 'project_id',
    workflow_create_date: 'workflow_create_date',
    workflow_update_date: 'workflow_update_date',
    workflow_create_by: 'workflow_create_by',
    workflow_update_by: 'workflow_update_by',
    workflow_delete: 'workflow_delete',
    workflow_delete_at: 'workflow_delete_at'
  };

  export type Gd_workflowScalarFieldEnum = (typeof Gd_workflowScalarFieldEnum)[keyof typeof Gd_workflowScalarFieldEnum]


  export const Gd_fileScalarFieldEnum: {
    file_id: 'file_id',
    file_path: 'file_path',
    project_id: 'project_id',
    workflow_id: 'workflow_id',
    file_create_date: 'file_create_date',
    file_update_date: 'file_update_date',
    file_create_by: 'file_create_by',
    file_update_by: 'file_update_by',
    file_deleted: 'file_deleted',
    file_deleted_at: 'file_deleted_at'
  };

  export type Gd_fileScalarFieldEnum = (typeof Gd_fileScalarFieldEnum)[keyof typeof Gd_fileScalarFieldEnum]


  export const Gd_logScalarFieldEnum: {
    log_id: 'log_id',
    workflow_id: 'workflow_id',
    log_session_time: 'log_session_time',
    log_session_attempt: 'log_session_attempt',
    log_last_duration: 'log_last_duration',
    log_status: 'log_status',
    log_created_date: 'log_created_date',
    log_updated_date: 'log_updated_date',
    log_created_by: 'log_created_by',
    log_updated_by: 'log_updated_by'
  };

  export type Gd_logScalarFieldEnum = (typeof Gd_logScalarFieldEnum)[keyof typeof Gd_logScalarFieldEnum]


  export const Gd_import_fileScalarFieldEnum: {
    import_id: 'import_id',
    import_file_name: 'import_file_name',
    import_fundname: 'import_fundname',
    import_uploaded: 'import_uploaded',
    import_status_raw_table: 'import_status_raw_table',
    import_status_destination_table: 'import_status_destination_table',
    import_date_uploaded: 'import_date_uploaded',
    user_id: 'user_id'
  };

  export type Gd_import_fileScalarFieldEnum = (typeof Gd_import_fileScalarFieldEnum)[keyof typeof Gd_import_fileScalarFieldEnum]


  export const Gd_datalake_fileScalarFieldEnum: {
    dl_file_id: 'dl_file_id',
    dl_file_name: 'dl_file_name',
    dl_folder_id: 'dl_folder_id',
    dl_file_content: 'dl_file_content',
    dl_file_deleted: 'dl_file_deleted',
    dl_file_created_by: 'dl_file_created_by',
    dl_file_updated_by: 'dl_file_updated_by',
    dl_file_deleted_at: 'dl_file_deleted_at',
    dl_file_updated_at: 'dl_file_updated_at',
    dl_file_created_at: 'dl_file_created_at'
  };

  export type Gd_datalake_fileScalarFieldEnum = (typeof Gd_datalake_fileScalarFieldEnum)[keyof typeof Gd_datalake_fileScalarFieldEnum]


  export const Gd_datalake_folderScalarFieldEnum: {
    dl_folder_id: 'dl_folder_id',
    dl_folder_name: 'dl_folder_name',
    dl_parent_folder_id: 'dl_parent_folder_id',
    dl_folder_deleted: 'dl_folder_deleted',
    dl_folder_created_by: 'dl_folder_created_by',
    dl_folder_updated_by: 'dl_folder_updated_by',
    dl_folder_deleted_at: 'dl_folder_deleted_at',
    dl_folder_updated_at: 'dl_folder_updated_at',
    dl_folder_created_at: 'dl_folder_created_at'
  };

  export type Gd_datalake_folderScalarFieldEnum = (typeof Gd_datalake_folderScalarFieldEnum)[keyof typeof Gd_datalake_folderScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Deep Input Types
   */


  export type gd_userWhereInput = {
    AND?: Enumerable<gd_userWhereInput>
    OR?: Enumerable<gd_userWhereInput>
    NOT?: Enumerable<gd_userWhereInput>
    user_id?: IntFilter | number
    user_email?: StringFilter | string
    user_password?: StringNullableFilter | string | null
    user_first_name?: StringNullableFilter | string | null
    user_last_name?: StringNullableFilter | string | null
    user_status?: IntNullableFilter | number | null
    user_create_at?: DateTimeNullableFilter | Date | string | null
    user_update_at?: DateTimeNullableFilter | Date | string | null
    user_create_by?: IntNullableFilter | number | null
    user_update_by?: IntNullableFilter | number | null
    user_deleted?: IntNullableFilter | number | null
    user_deleted_at?: DateTimeNullableFilter | Date | string | null
    user_tokens?: Gd_tokenListRelationFilter
    user_roles?: Gd_user_roleListRelationFilter
    user_projects?: Gd_user_projectListRelationFilter
  }

  export type gd_userOrderByWithRelationInput = {
    user_id?: SortOrder
    user_email?: SortOrder
    user_password?: SortOrder
    user_first_name?: SortOrder
    user_last_name?: SortOrder
    user_status?: SortOrder
    user_create_at?: SortOrder
    user_update_at?: SortOrder
    user_create_by?: SortOrder
    user_update_by?: SortOrder
    user_deleted?: SortOrder
    user_deleted_at?: SortOrder
    user_tokens?: gd_tokenOrderByRelationAggregateInput
    user_roles?: gd_user_roleOrderByRelationAggregateInput
    user_projects?: gd_user_projectOrderByRelationAggregateInput
  }

  export type gd_userWhereUniqueInput = {
    user_id?: number
  }

  export type gd_userOrderByWithAggregationInput = {
    user_id?: SortOrder
    user_email?: SortOrder
    user_password?: SortOrder
    user_first_name?: SortOrder
    user_last_name?: SortOrder
    user_status?: SortOrder
    user_create_at?: SortOrder
    user_update_at?: SortOrder
    user_create_by?: SortOrder
    user_update_by?: SortOrder
    user_deleted?: SortOrder
    user_deleted_at?: SortOrder
    _count?: gd_userCountOrderByAggregateInput
    _avg?: gd_userAvgOrderByAggregateInput
    _max?: gd_userMaxOrderByAggregateInput
    _min?: gd_userMinOrderByAggregateInput
    _sum?: gd_userSumOrderByAggregateInput
  }

  export type gd_userScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gd_userScalarWhereWithAggregatesInput>
    OR?: Enumerable<gd_userScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gd_userScalarWhereWithAggregatesInput>
    user_id?: IntWithAggregatesFilter | number
    user_email?: StringWithAggregatesFilter | string
    user_password?: StringNullableWithAggregatesFilter | string | null
    user_first_name?: StringNullableWithAggregatesFilter | string | null
    user_last_name?: StringNullableWithAggregatesFilter | string | null
    user_status?: IntNullableWithAggregatesFilter | number | null
    user_create_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    user_update_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    user_create_by?: IntNullableWithAggregatesFilter | number | null
    user_update_by?: IntNullableWithAggregatesFilter | number | null
    user_deleted?: IntNullableWithAggregatesFilter | number | null
    user_deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type gd_tokenWhereInput = {
    AND?: Enumerable<gd_tokenWhereInput>
    OR?: Enumerable<gd_tokenWhereInput>
    NOT?: Enumerable<gd_tokenWhereInput>
    access_token?: StringFilter | string
    user_id?: IntFilter | number
    referesh_token?: StringNullableFilter | string | null
    token_create_at?: StringNullableFilter | string | null
    token_expired_at?: StringNullableFilter | string | null
    user?: XOR<Gd_userRelationFilter, gd_userWhereInput> | null
  }

  export type gd_tokenOrderByWithRelationInput = {
    access_token?: SortOrder
    user_id?: SortOrder
    referesh_token?: SortOrder
    token_create_at?: SortOrder
    token_expired_at?: SortOrder
    user?: gd_userOrderByWithRelationInput
  }

  export type gd_tokenWhereUniqueInput = {
    access_token_user_id?: gd_tokenAccess_tokenUser_idCompoundUniqueInput
  }

  export type gd_tokenOrderByWithAggregationInput = {
    access_token?: SortOrder
    user_id?: SortOrder
    referesh_token?: SortOrder
    token_create_at?: SortOrder
    token_expired_at?: SortOrder
    _count?: gd_tokenCountOrderByAggregateInput
    _avg?: gd_tokenAvgOrderByAggregateInput
    _max?: gd_tokenMaxOrderByAggregateInput
    _min?: gd_tokenMinOrderByAggregateInput
    _sum?: gd_tokenSumOrderByAggregateInput
  }

  export type gd_tokenScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gd_tokenScalarWhereWithAggregatesInput>
    OR?: Enumerable<gd_tokenScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gd_tokenScalarWhereWithAggregatesInput>
    access_token?: StringWithAggregatesFilter | string
    user_id?: IntWithAggregatesFilter | number
    referesh_token?: StringNullableWithAggregatesFilter | string | null
    token_create_at?: StringNullableWithAggregatesFilter | string | null
    token_expired_at?: StringNullableWithAggregatesFilter | string | null
  }

  export type gd_roleWhereInput = {
    AND?: Enumerable<gd_roleWhereInput>
    OR?: Enumerable<gd_roleWhereInput>
    NOT?: Enumerable<gd_roleWhereInput>
    role_id?: IntFilter | number
    role_name?: StringFilter | string
    role_create_date?: DateTimeNullableFilter | Date | string | null
    role_update_date?: DateTimeNullableFilter | Date | string | null
    role_create_by?: IntNullableFilter | number | null
    role_update_by?: IntNullableFilter | number | null
    user_role?: Gd_user_roleListRelationFilter
  }

  export type gd_roleOrderByWithRelationInput = {
    role_id?: SortOrder
    role_name?: SortOrder
    role_create_date?: SortOrder
    role_update_date?: SortOrder
    role_create_by?: SortOrder
    role_update_by?: SortOrder
    user_role?: gd_user_roleOrderByRelationAggregateInput
  }

  export type gd_roleWhereUniqueInput = {
    role_id?: number
  }

  export type gd_roleOrderByWithAggregationInput = {
    role_id?: SortOrder
    role_name?: SortOrder
    role_create_date?: SortOrder
    role_update_date?: SortOrder
    role_create_by?: SortOrder
    role_update_by?: SortOrder
    _count?: gd_roleCountOrderByAggregateInput
    _avg?: gd_roleAvgOrderByAggregateInput
    _max?: gd_roleMaxOrderByAggregateInput
    _min?: gd_roleMinOrderByAggregateInput
    _sum?: gd_roleSumOrderByAggregateInput
  }

  export type gd_roleScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gd_roleScalarWhereWithAggregatesInput>
    OR?: Enumerable<gd_roleScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gd_roleScalarWhereWithAggregatesInput>
    role_id?: IntWithAggregatesFilter | number
    role_name?: StringWithAggregatesFilter | string
    role_create_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    role_update_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    role_create_by?: IntNullableWithAggregatesFilter | number | null
    role_update_by?: IntNullableWithAggregatesFilter | number | null
  }

  export type gd_user_roleWhereInput = {
    AND?: Enumerable<gd_user_roleWhereInput>
    OR?: Enumerable<gd_user_roleWhereInput>
    NOT?: Enumerable<gd_user_roleWhereInput>
    user_id?: IntFilter | number
    role_id?: IntFilter | number
    user_role_create_date?: DateTimeNullableFilter | Date | string | null
    user_role_update_date?: DateTimeNullableFilter | Date | string | null
    user_role_create_by?: IntNullableFilter | number | null
    user_role_update_by?: IntNullableFilter | number | null
    user?: XOR<Gd_userRelationFilter, gd_userWhereInput> | null
    role?: XOR<Gd_roleRelationFilter, gd_roleWhereInput> | null
  }

  export type gd_user_roleOrderByWithRelationInput = {
    user_id?: SortOrder
    role_id?: SortOrder
    user_role_create_date?: SortOrder
    user_role_update_date?: SortOrder
    user_role_create_by?: SortOrder
    user_role_update_by?: SortOrder
    user?: gd_userOrderByWithRelationInput
    role?: gd_roleOrderByWithRelationInput
  }

  export type gd_user_roleWhereUniqueInput = {
    user_id_role_id?: gd_user_roleUser_idRole_idCompoundUniqueInput
  }

  export type gd_user_roleOrderByWithAggregationInput = {
    user_id?: SortOrder
    role_id?: SortOrder
    user_role_create_date?: SortOrder
    user_role_update_date?: SortOrder
    user_role_create_by?: SortOrder
    user_role_update_by?: SortOrder
    _count?: gd_user_roleCountOrderByAggregateInput
    _avg?: gd_user_roleAvgOrderByAggregateInput
    _max?: gd_user_roleMaxOrderByAggregateInput
    _min?: gd_user_roleMinOrderByAggregateInput
    _sum?: gd_user_roleSumOrderByAggregateInput
  }

  export type gd_user_roleScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gd_user_roleScalarWhereWithAggregatesInput>
    OR?: Enumerable<gd_user_roleScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gd_user_roleScalarWhereWithAggregatesInput>
    user_id?: IntWithAggregatesFilter | number
    role_id?: IntWithAggregatesFilter | number
    user_role_create_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    user_role_update_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    user_role_create_by?: IntNullableWithAggregatesFilter | number | null
    user_role_update_by?: IntNullableWithAggregatesFilter | number | null
  }

  export type gd_projectWhereInput = {
    AND?: Enumerable<gd_projectWhereInput>
    OR?: Enumerable<gd_projectWhereInput>
    NOT?: Enumerable<gd_projectWhereInput>
    project_id?: IntFilter | number
    project_name?: StringNullableFilter | string | null
    project_revision?: StringNullableFilter | string | null
    project_create_date?: DateTimeNullableFilter | Date | string | null
    project_update_date?: DateTimeNullableFilter | Date | string | null
    project_create_by?: IntNullableFilter | number | null
    project_update_by?: IntNullableFilter | number | null
    project_deleted?: IntNullableFilter | number | null
    project_deleted_at?: DateTimeNullableFilter | Date | string | null
    user_projects?: Gd_user_projectListRelationFilter
    workflows?: Gd_workflowListRelationFilter
    files?: Gd_fileListRelationFilter
  }

  export type gd_projectOrderByWithRelationInput = {
    project_id?: SortOrder
    project_name?: SortOrder
    project_revision?: SortOrder
    project_create_date?: SortOrder
    project_update_date?: SortOrder
    project_create_by?: SortOrder
    project_update_by?: SortOrder
    project_deleted?: SortOrder
    project_deleted_at?: SortOrder
    user_projects?: gd_user_projectOrderByRelationAggregateInput
    workflows?: gd_workflowOrderByRelationAggregateInput
    files?: gd_fileOrderByRelationAggregateInput
  }

  export type gd_projectWhereUniqueInput = {
    project_id?: number
  }

  export type gd_projectOrderByWithAggregationInput = {
    project_id?: SortOrder
    project_name?: SortOrder
    project_revision?: SortOrder
    project_create_date?: SortOrder
    project_update_date?: SortOrder
    project_create_by?: SortOrder
    project_update_by?: SortOrder
    project_deleted?: SortOrder
    project_deleted_at?: SortOrder
    _count?: gd_projectCountOrderByAggregateInput
    _avg?: gd_projectAvgOrderByAggregateInput
    _max?: gd_projectMaxOrderByAggregateInput
    _min?: gd_projectMinOrderByAggregateInput
    _sum?: gd_projectSumOrderByAggregateInput
  }

  export type gd_projectScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gd_projectScalarWhereWithAggregatesInput>
    OR?: Enumerable<gd_projectScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gd_projectScalarWhereWithAggregatesInput>
    project_id?: IntWithAggregatesFilter | number
    project_name?: StringNullableWithAggregatesFilter | string | null
    project_revision?: StringNullableWithAggregatesFilter | string | null
    project_create_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    project_update_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    project_create_by?: IntNullableWithAggregatesFilter | number | null
    project_update_by?: IntNullableWithAggregatesFilter | number | null
    project_deleted?: IntNullableWithAggregatesFilter | number | null
    project_deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type gd_user_projectWhereInput = {
    AND?: Enumerable<gd_user_projectWhereInput>
    OR?: Enumerable<gd_user_projectWhereInput>
    NOT?: Enumerable<gd_user_projectWhereInput>
    project_id?: IntFilter | number
    user_id?: IntFilter | number
    user_project_create_date?: DateTimeNullableFilter | Date | string | null
    user_project_update_date?: DateTimeNullableFilter | Date | string | null
    user_project_create_by?: IntNullableFilter | number | null
    user_project_update_by?: IntNullableFilter | number | null
    user?: XOR<Gd_userRelationFilter, gd_userWhereInput> | null
    project?: XOR<Gd_projectRelationFilter, gd_projectWhereInput>
  }

  export type gd_user_projectOrderByWithRelationInput = {
    project_id?: SortOrder
    user_id?: SortOrder
    user_project_create_date?: SortOrder
    user_project_update_date?: SortOrder
    user_project_create_by?: SortOrder
    user_project_update_by?: SortOrder
    user?: gd_userOrderByWithRelationInput
    project?: gd_projectOrderByWithRelationInput
  }

  export type gd_user_projectWhereUniqueInput = {
    project_id_user_id?: gd_user_projectProject_idUser_idCompoundUniqueInput
  }

  export type gd_user_projectOrderByWithAggregationInput = {
    project_id?: SortOrder
    user_id?: SortOrder
    user_project_create_date?: SortOrder
    user_project_update_date?: SortOrder
    user_project_create_by?: SortOrder
    user_project_update_by?: SortOrder
    _count?: gd_user_projectCountOrderByAggregateInput
    _avg?: gd_user_projectAvgOrderByAggregateInput
    _max?: gd_user_projectMaxOrderByAggregateInput
    _min?: gd_user_projectMinOrderByAggregateInput
    _sum?: gd_user_projectSumOrderByAggregateInput
  }

  export type gd_user_projectScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gd_user_projectScalarWhereWithAggregatesInput>
    OR?: Enumerable<gd_user_projectScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gd_user_projectScalarWhereWithAggregatesInput>
    project_id?: IntWithAggregatesFilter | number
    user_id?: IntWithAggregatesFilter | number
    user_project_create_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    user_project_update_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    user_project_create_by?: IntNullableWithAggregatesFilter | number | null
    user_project_update_by?: IntNullableWithAggregatesFilter | number | null
  }

  export type gd_workflowWhereInput = {
    AND?: Enumerable<gd_workflowWhereInput>
    OR?: Enumerable<gd_workflowWhereInput>
    NOT?: Enumerable<gd_workflowWhereInput>
    workflow_id?: IntFilter | number
    workflow_name?: StringFilter | string
    project_id?: IntNullableFilter | number | null
    workflow_create_date?: DateTimeNullableFilter | Date | string | null
    workflow_update_date?: DateTimeNullableFilter | Date | string | null
    workflow_create_by?: IntNullableFilter | number | null
    workflow_update_by?: IntNullableFilter | number | null
    workflow_delete?: IntNullableFilter | number | null
    workflow_delete_at?: DateTimeNullableFilter | Date | string | null
    project?: XOR<Gd_projectRelationFilter, gd_projectWhereInput> | null
    logs?: Gd_logListRelationFilter
    files?: Gd_fileListRelationFilter
  }

  export type gd_workflowOrderByWithRelationInput = {
    workflow_id?: SortOrder
    workflow_name?: SortOrder
    project_id?: SortOrder
    workflow_create_date?: SortOrder
    workflow_update_date?: SortOrder
    workflow_create_by?: SortOrder
    workflow_update_by?: SortOrder
    workflow_delete?: SortOrder
    workflow_delete_at?: SortOrder
    project?: gd_projectOrderByWithRelationInput
    logs?: gd_logOrderByRelationAggregateInput
    files?: gd_fileOrderByRelationAggregateInput
  }

  export type gd_workflowWhereUniqueInput = {
    workflow_id?: number
  }

  export type gd_workflowOrderByWithAggregationInput = {
    workflow_id?: SortOrder
    workflow_name?: SortOrder
    project_id?: SortOrder
    workflow_create_date?: SortOrder
    workflow_update_date?: SortOrder
    workflow_create_by?: SortOrder
    workflow_update_by?: SortOrder
    workflow_delete?: SortOrder
    workflow_delete_at?: SortOrder
    _count?: gd_workflowCountOrderByAggregateInput
    _avg?: gd_workflowAvgOrderByAggregateInput
    _max?: gd_workflowMaxOrderByAggregateInput
    _min?: gd_workflowMinOrderByAggregateInput
    _sum?: gd_workflowSumOrderByAggregateInput
  }

  export type gd_workflowScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gd_workflowScalarWhereWithAggregatesInput>
    OR?: Enumerable<gd_workflowScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gd_workflowScalarWhereWithAggregatesInput>
    workflow_id?: IntWithAggregatesFilter | number
    workflow_name?: StringWithAggregatesFilter | string
    project_id?: IntNullableWithAggregatesFilter | number | null
    workflow_create_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    workflow_update_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    workflow_create_by?: IntNullableWithAggregatesFilter | number | null
    workflow_update_by?: IntNullableWithAggregatesFilter | number | null
    workflow_delete?: IntNullableWithAggregatesFilter | number | null
    workflow_delete_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type gd_fileWhereInput = {
    AND?: Enumerable<gd_fileWhereInput>
    OR?: Enumerable<gd_fileWhereInput>
    NOT?: Enumerable<gd_fileWhereInput>
    file_id?: IntFilter | number
    file_path?: StringNullableFilter | string | null
    project_id?: IntNullableFilter | number | null
    workflow_id?: IntNullableFilter | number | null
    file_create_date?: DateTimeNullableFilter | Date | string | null
    file_update_date?: DateTimeNullableFilter | Date | string | null
    file_create_by?: IntNullableFilter | number | null
    file_update_by?: IntNullableFilter | number | null
    file_deleted?: IntNullableFilter | number | null
    file_deleted_at?: DateTimeNullableFilter | Date | string | null
    project?: XOR<Gd_projectRelationFilter, gd_projectWhereInput> | null
    workflow?: XOR<Gd_workflowRelationFilter, gd_workflowWhereInput> | null
  }

  export type gd_fileOrderByWithRelationInput = {
    file_id?: SortOrder
    file_path?: SortOrder
    project_id?: SortOrder
    workflow_id?: SortOrder
    file_create_date?: SortOrder
    file_update_date?: SortOrder
    file_create_by?: SortOrder
    file_update_by?: SortOrder
    file_deleted?: SortOrder
    file_deleted_at?: SortOrder
    project?: gd_projectOrderByWithRelationInput
    workflow?: gd_workflowOrderByWithRelationInput
  }

  export type gd_fileWhereUniqueInput = {
    file_id?: number
  }

  export type gd_fileOrderByWithAggregationInput = {
    file_id?: SortOrder
    file_path?: SortOrder
    project_id?: SortOrder
    workflow_id?: SortOrder
    file_create_date?: SortOrder
    file_update_date?: SortOrder
    file_create_by?: SortOrder
    file_update_by?: SortOrder
    file_deleted?: SortOrder
    file_deleted_at?: SortOrder
    _count?: gd_fileCountOrderByAggregateInput
    _avg?: gd_fileAvgOrderByAggregateInput
    _max?: gd_fileMaxOrderByAggregateInput
    _min?: gd_fileMinOrderByAggregateInput
    _sum?: gd_fileSumOrderByAggregateInput
  }

  export type gd_fileScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gd_fileScalarWhereWithAggregatesInput>
    OR?: Enumerable<gd_fileScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gd_fileScalarWhereWithAggregatesInput>
    file_id?: IntWithAggregatesFilter | number
    file_path?: StringNullableWithAggregatesFilter | string | null
    project_id?: IntNullableWithAggregatesFilter | number | null
    workflow_id?: IntNullableWithAggregatesFilter | number | null
    file_create_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    file_update_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    file_create_by?: IntNullableWithAggregatesFilter | number | null
    file_update_by?: IntNullableWithAggregatesFilter | number | null
    file_deleted?: IntNullableWithAggregatesFilter | number | null
    file_deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type gd_logWhereInput = {
    AND?: Enumerable<gd_logWhereInput>
    OR?: Enumerable<gd_logWhereInput>
    NOT?: Enumerable<gd_logWhereInput>
    log_id?: IntFilter | number
    workflow_id?: IntNullableFilter | number | null
    log_session_time?: DateTimeNullableFilter | Date | string | null
    log_session_attempt?: StringNullableFilter | string | null
    log_last_duration?: StringNullableFilter | string | null
    log_status?: IntNullableFilter | number | null
    log_created_date?: DateTimeNullableFilter | Date | string | null
    log_updated_date?: DateTimeNullableFilter | Date | string | null
    log_created_by?: IntNullableFilter | number | null
    log_updated_by?: IntNullableFilter | number | null
    workflow?: XOR<Gd_workflowRelationFilter, gd_workflowWhereInput> | null
  }

  export type gd_logOrderByWithRelationInput = {
    log_id?: SortOrder
    workflow_id?: SortOrder
    log_session_time?: SortOrder
    log_session_attempt?: SortOrder
    log_last_duration?: SortOrder
    log_status?: SortOrder
    log_created_date?: SortOrder
    log_updated_date?: SortOrder
    log_created_by?: SortOrder
    log_updated_by?: SortOrder
    workflow?: gd_workflowOrderByWithRelationInput
  }

  export type gd_logWhereUniqueInput = {
    log_id?: number
  }

  export type gd_logOrderByWithAggregationInput = {
    log_id?: SortOrder
    workflow_id?: SortOrder
    log_session_time?: SortOrder
    log_session_attempt?: SortOrder
    log_last_duration?: SortOrder
    log_status?: SortOrder
    log_created_date?: SortOrder
    log_updated_date?: SortOrder
    log_created_by?: SortOrder
    log_updated_by?: SortOrder
    _count?: gd_logCountOrderByAggregateInput
    _avg?: gd_logAvgOrderByAggregateInput
    _max?: gd_logMaxOrderByAggregateInput
    _min?: gd_logMinOrderByAggregateInput
    _sum?: gd_logSumOrderByAggregateInput
  }

  export type gd_logScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gd_logScalarWhereWithAggregatesInput>
    OR?: Enumerable<gd_logScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gd_logScalarWhereWithAggregatesInput>
    log_id?: IntWithAggregatesFilter | number
    workflow_id?: IntNullableWithAggregatesFilter | number | null
    log_session_time?: DateTimeNullableWithAggregatesFilter | Date | string | null
    log_session_attempt?: StringNullableWithAggregatesFilter | string | null
    log_last_duration?: StringNullableWithAggregatesFilter | string | null
    log_status?: IntNullableWithAggregatesFilter | number | null
    log_created_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    log_updated_date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    log_created_by?: IntNullableWithAggregatesFilter | number | null
    log_updated_by?: IntNullableWithAggregatesFilter | number | null
  }

  export type gd_import_fileWhereInput = {
    AND?: Enumerable<gd_import_fileWhereInput>
    OR?: Enumerable<gd_import_fileWhereInput>
    NOT?: Enumerable<gd_import_fileWhereInput>
    import_id?: IntFilter | number
    import_file_name?: StringNullableFilter | string | null
    import_fundname?: StringNullableFilter | string | null
    import_uploaded?: IntNullableFilter | number | null
    import_status_raw_table?: IntNullableFilter | number | null
    import_status_destination_table?: IntNullableFilter | number | null
    import_date_uploaded?: StringNullableFilter | string | null
    user_id?: IntNullableFilter | number | null
  }

  export type gd_import_fileOrderByWithRelationInput = {
    import_id?: SortOrder
    import_file_name?: SortOrder
    import_fundname?: SortOrder
    import_uploaded?: SortOrder
    import_status_raw_table?: SortOrder
    import_status_destination_table?: SortOrder
    import_date_uploaded?: SortOrder
    user_id?: SortOrder
  }

  export type gd_import_fileWhereUniqueInput = {
    import_id?: number
  }

  export type gd_import_fileOrderByWithAggregationInput = {
    import_id?: SortOrder
    import_file_name?: SortOrder
    import_fundname?: SortOrder
    import_uploaded?: SortOrder
    import_status_raw_table?: SortOrder
    import_status_destination_table?: SortOrder
    import_date_uploaded?: SortOrder
    user_id?: SortOrder
    _count?: gd_import_fileCountOrderByAggregateInput
    _avg?: gd_import_fileAvgOrderByAggregateInput
    _max?: gd_import_fileMaxOrderByAggregateInput
    _min?: gd_import_fileMinOrderByAggregateInput
    _sum?: gd_import_fileSumOrderByAggregateInput
  }

  export type gd_import_fileScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gd_import_fileScalarWhereWithAggregatesInput>
    OR?: Enumerable<gd_import_fileScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gd_import_fileScalarWhereWithAggregatesInput>
    import_id?: IntWithAggregatesFilter | number
    import_file_name?: StringNullableWithAggregatesFilter | string | null
    import_fundname?: StringNullableWithAggregatesFilter | string | null
    import_uploaded?: IntNullableWithAggregatesFilter | number | null
    import_status_raw_table?: IntNullableWithAggregatesFilter | number | null
    import_status_destination_table?: IntNullableWithAggregatesFilter | number | null
    import_date_uploaded?: StringNullableWithAggregatesFilter | string | null
    user_id?: IntNullableWithAggregatesFilter | number | null
  }

  export type gd_datalake_fileWhereInput = {
    AND?: Enumerable<gd_datalake_fileWhereInput>
    OR?: Enumerable<gd_datalake_fileWhereInput>
    NOT?: Enumerable<gd_datalake_fileWhereInput>
    dl_file_id?: IntFilter | number
    dl_file_name?: StringNullableFilter | string | null
    dl_folder_id?: IntNullableFilter | number | null
    dl_file_content?: StringNullableFilter | string | null
    dl_file_deleted?: IntNullableFilter | number | null
    dl_file_created_by?: IntNullableFilter | number | null
    dl_file_updated_by?: IntNullableFilter | number | null
    dl_file_deleted_at?: DateTimeNullableFilter | Date | string | null
    dl_file_updated_at?: DateTimeNullableFilter | Date | string | null
    dl_file_created_at?: DateTimeNullableFilter | Date | string | null
    folder?: XOR<Gd_datalake_folderRelationFilter, gd_datalake_folderWhereInput> | null
  }

  export type gd_datalake_fileOrderByWithRelationInput = {
    dl_file_id?: SortOrder
    dl_file_name?: SortOrder
    dl_folder_id?: SortOrder
    dl_file_content?: SortOrder
    dl_file_deleted?: SortOrder
    dl_file_created_by?: SortOrder
    dl_file_updated_by?: SortOrder
    dl_file_deleted_at?: SortOrder
    dl_file_updated_at?: SortOrder
    dl_file_created_at?: SortOrder
    folder?: gd_datalake_folderOrderByWithRelationInput
  }

  export type gd_datalake_fileWhereUniqueInput = {
    dl_file_id?: number
  }

  export type gd_datalake_fileOrderByWithAggregationInput = {
    dl_file_id?: SortOrder
    dl_file_name?: SortOrder
    dl_folder_id?: SortOrder
    dl_file_content?: SortOrder
    dl_file_deleted?: SortOrder
    dl_file_created_by?: SortOrder
    dl_file_updated_by?: SortOrder
    dl_file_deleted_at?: SortOrder
    dl_file_updated_at?: SortOrder
    dl_file_created_at?: SortOrder
    _count?: gd_datalake_fileCountOrderByAggregateInput
    _avg?: gd_datalake_fileAvgOrderByAggregateInput
    _max?: gd_datalake_fileMaxOrderByAggregateInput
    _min?: gd_datalake_fileMinOrderByAggregateInput
    _sum?: gd_datalake_fileSumOrderByAggregateInput
  }

  export type gd_datalake_fileScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gd_datalake_fileScalarWhereWithAggregatesInput>
    OR?: Enumerable<gd_datalake_fileScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gd_datalake_fileScalarWhereWithAggregatesInput>
    dl_file_id?: IntWithAggregatesFilter | number
    dl_file_name?: StringNullableWithAggregatesFilter | string | null
    dl_folder_id?: IntNullableWithAggregatesFilter | number | null
    dl_file_content?: StringNullableWithAggregatesFilter | string | null
    dl_file_deleted?: IntNullableWithAggregatesFilter | number | null
    dl_file_created_by?: IntNullableWithAggregatesFilter | number | null
    dl_file_updated_by?: IntNullableWithAggregatesFilter | number | null
    dl_file_deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    dl_file_updated_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    dl_file_created_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type gd_datalake_folderWhereInput = {
    AND?: Enumerable<gd_datalake_folderWhereInput>
    OR?: Enumerable<gd_datalake_folderWhereInput>
    NOT?: Enumerable<gd_datalake_folderWhereInput>
    dl_folder_id?: IntFilter | number
    dl_folder_name?: StringNullableFilter | string | null
    dl_parent_folder_id?: IntNullableFilter | number | null
    dl_folder_deleted?: IntNullableFilter | number | null
    dl_folder_created_by?: IntNullableFilter | number | null
    dl_folder_updated_by?: IntNullableFilter | number | null
    dl_folder_deleted_at?: DateTimeNullableFilter | Date | string | null
    dl_folder_updated_at?: DateTimeNullableFilter | Date | string | null
    dl_folder_created_at?: DateTimeNullableFilter | Date | string | null
    files?: Gd_datalake_fileListRelationFilter
  }

  export type gd_datalake_folderOrderByWithRelationInput = {
    dl_folder_id?: SortOrder
    dl_folder_name?: SortOrder
    dl_parent_folder_id?: SortOrder
    dl_folder_deleted?: SortOrder
    dl_folder_created_by?: SortOrder
    dl_folder_updated_by?: SortOrder
    dl_folder_deleted_at?: SortOrder
    dl_folder_updated_at?: SortOrder
    dl_folder_created_at?: SortOrder
    files?: gd_datalake_fileOrderByRelationAggregateInput
  }

  export type gd_datalake_folderWhereUniqueInput = {
    dl_folder_id?: number
  }

  export type gd_datalake_folderOrderByWithAggregationInput = {
    dl_folder_id?: SortOrder
    dl_folder_name?: SortOrder
    dl_parent_folder_id?: SortOrder
    dl_folder_deleted?: SortOrder
    dl_folder_created_by?: SortOrder
    dl_folder_updated_by?: SortOrder
    dl_folder_deleted_at?: SortOrder
    dl_folder_updated_at?: SortOrder
    dl_folder_created_at?: SortOrder
    _count?: gd_datalake_folderCountOrderByAggregateInput
    _avg?: gd_datalake_folderAvgOrderByAggregateInput
    _max?: gd_datalake_folderMaxOrderByAggregateInput
    _min?: gd_datalake_folderMinOrderByAggregateInput
    _sum?: gd_datalake_folderSumOrderByAggregateInput
  }

  export type gd_datalake_folderScalarWhereWithAggregatesInput = {
    AND?: Enumerable<gd_datalake_folderScalarWhereWithAggregatesInput>
    OR?: Enumerable<gd_datalake_folderScalarWhereWithAggregatesInput>
    NOT?: Enumerable<gd_datalake_folderScalarWhereWithAggregatesInput>
    dl_folder_id?: IntWithAggregatesFilter | number
    dl_folder_name?: StringNullableWithAggregatesFilter | string | null
    dl_parent_folder_id?: IntNullableWithAggregatesFilter | number | null
    dl_folder_deleted?: IntNullableWithAggregatesFilter | number | null
    dl_folder_created_by?: IntNullableWithAggregatesFilter | number | null
    dl_folder_updated_by?: IntNullableWithAggregatesFilter | number | null
    dl_folder_deleted_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    dl_folder_updated_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    dl_folder_created_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type gd_userCreateInput = {
    user_email: string
    user_password?: string | null
    user_first_name?: string | null
    user_last_name?: string | null
    user_status?: number | null
    user_create_at?: Date | string | null
    user_update_at?: Date | string | null
    user_create_by?: number | null
    user_update_by?: number | null
    user_deleted?: number | null
    user_deleted_at?: Date | string | null
    user_tokens?: gd_tokenCreateNestedManyWithoutUserInput
    user_roles?: gd_user_roleCreateNestedManyWithoutUserInput
    user_projects?: gd_user_projectCreateNestedManyWithoutUserInput
  }

  export type gd_userUncheckedCreateInput = {
    user_id?: number
    user_email: string
    user_password?: string | null
    user_first_name?: string | null
    user_last_name?: string | null
    user_status?: number | null
    user_create_at?: Date | string | null
    user_update_at?: Date | string | null
    user_create_by?: number | null
    user_update_by?: number | null
    user_deleted?: number | null
    user_deleted_at?: Date | string | null
    user_tokens?: gd_tokenUncheckedCreateNestedManyWithoutUserInput
    user_roles?: gd_user_roleUncheckedCreateNestedManyWithoutUserInput
    user_projects?: gd_user_projectUncheckedCreateNestedManyWithoutUserInput
  }

  export type gd_userUpdateInput = {
    user_email?: StringFieldUpdateOperationsInput | string
    user_password?: NullableStringFieldUpdateOperationsInput | string | null
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: NullableIntFieldUpdateOperationsInput | number | null
    user_create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_tokens?: gd_tokenUpdateManyWithoutUserInput
    user_roles?: gd_user_roleUpdateManyWithoutUserInput
    user_projects?: gd_user_projectUpdateManyWithoutUserInput
  }

  export type gd_userUncheckedUpdateInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_password?: NullableStringFieldUpdateOperationsInput | string | null
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: NullableIntFieldUpdateOperationsInput | number | null
    user_create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_tokens?: gd_tokenUncheckedUpdateManyWithoutUserInput
    user_roles?: gd_user_roleUncheckedUpdateManyWithoutUserInput
    user_projects?: gd_user_projectUncheckedUpdateManyWithoutUserInput
  }

  export type gd_userCreateManyInput = {
    user_id?: number
    user_email: string
    user_password?: string | null
    user_first_name?: string | null
    user_last_name?: string | null
    user_status?: number | null
    user_create_at?: Date | string | null
    user_update_at?: Date | string | null
    user_create_by?: number | null
    user_update_by?: number | null
    user_deleted?: number | null
    user_deleted_at?: Date | string | null
  }

  export type gd_userUpdateManyMutationInput = {
    user_email?: StringFieldUpdateOperationsInput | string
    user_password?: NullableStringFieldUpdateOperationsInput | string | null
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: NullableIntFieldUpdateOperationsInput | number | null
    user_create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_userUncheckedUpdateManyInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_password?: NullableStringFieldUpdateOperationsInput | string | null
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: NullableIntFieldUpdateOperationsInput | number | null
    user_create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_tokenCreateInput = {
    access_token: string
    referesh_token?: string | null
    token_create_at?: string | null
    token_expired_at?: string | null
    user?: gd_userCreateNestedOneWithoutUser_tokensInput
  }

  export type gd_tokenUncheckedCreateInput = {
    access_token: string
    user_id: number
    referesh_token?: string | null
    token_create_at?: string | null
    token_expired_at?: string | null
  }

  export type gd_tokenUpdateInput = {
    access_token?: StringFieldUpdateOperationsInput | string
    referesh_token?: NullableStringFieldUpdateOperationsInput | string | null
    token_create_at?: NullableStringFieldUpdateOperationsInput | string | null
    token_expired_at?: NullableStringFieldUpdateOperationsInput | string | null
    user?: gd_userUpdateOneWithoutUser_tokensInput
  }

  export type gd_tokenUncheckedUpdateInput = {
    access_token?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    referesh_token?: NullableStringFieldUpdateOperationsInput | string | null
    token_create_at?: NullableStringFieldUpdateOperationsInput | string | null
    token_expired_at?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gd_tokenCreateManyInput = {
    access_token: string
    user_id: number
    referesh_token?: string | null
    token_create_at?: string | null
    token_expired_at?: string | null
  }

  export type gd_tokenUpdateManyMutationInput = {
    access_token?: StringFieldUpdateOperationsInput | string
    referesh_token?: NullableStringFieldUpdateOperationsInput | string | null
    token_create_at?: NullableStringFieldUpdateOperationsInput | string | null
    token_expired_at?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gd_tokenUncheckedUpdateManyInput = {
    access_token?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    referesh_token?: NullableStringFieldUpdateOperationsInput | string | null
    token_create_at?: NullableStringFieldUpdateOperationsInput | string | null
    token_expired_at?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gd_roleCreateInput = {
    role_name: string
    role_create_date?: Date | string | null
    role_update_date?: Date | string | null
    role_create_by?: number | null
    role_update_by?: number | null
    user_role?: gd_user_roleCreateNestedManyWithoutRoleInput
  }

  export type gd_roleUncheckedCreateInput = {
    role_id?: number
    role_name: string
    role_create_date?: Date | string | null
    role_update_date?: Date | string | null
    role_create_by?: number | null
    role_update_by?: number | null
    user_role?: gd_user_roleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type gd_roleUpdateInput = {
    role_name?: StringFieldUpdateOperationsInput | string
    role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_role?: gd_user_roleUpdateManyWithoutRoleInput
  }

  export type gd_roleUncheckedUpdateInput = {
    role_id?: IntFieldUpdateOperationsInput | number
    role_name?: StringFieldUpdateOperationsInput | string
    role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_role?: gd_user_roleUncheckedUpdateManyWithoutRoleInput
  }

  export type gd_roleCreateManyInput = {
    role_id?: number
    role_name: string
    role_create_date?: Date | string | null
    role_update_date?: Date | string | null
    role_create_by?: number | null
    role_update_by?: number | null
  }

  export type gd_roleUpdateManyMutationInput = {
    role_name?: StringFieldUpdateOperationsInput | string
    role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_roleUncheckedUpdateManyInput = {
    role_id?: IntFieldUpdateOperationsInput | number
    role_name?: StringFieldUpdateOperationsInput | string
    role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_user_roleCreateInput = {
    user_role_create_date?: Date | string | null
    user_role_update_date?: Date | string | null
    user_role_create_by?: number | null
    user_role_update_by?: number | null
    user?: gd_userCreateNestedOneWithoutUser_rolesInput
    role?: gd_roleCreateNestedOneWithoutUser_roleInput
  }

  export type gd_user_roleUncheckedCreateInput = {
    user_id: number
    role_id: number
    user_role_create_date?: Date | string | null
    user_role_update_date?: Date | string | null
    user_role_create_by?: number | null
    user_role_update_by?: number | null
  }

  export type gd_user_roleUpdateInput = {
    user_role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user?: gd_userUpdateOneWithoutUser_rolesInput
    role?: gd_roleUpdateOneWithoutUser_roleInput
  }

  export type gd_user_roleUncheckedUpdateInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
    user_role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_user_roleCreateManyInput = {
    user_id: number
    role_id: number
    user_role_create_date?: Date | string | null
    user_role_update_date?: Date | string | null
    user_role_create_by?: number | null
    user_role_update_by?: number | null
  }

  export type gd_user_roleUpdateManyMutationInput = {
    user_role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_user_roleUncheckedUpdateManyInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    role_id?: IntFieldUpdateOperationsInput | number
    user_role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_projectCreateInput = {
    project_name?: string | null
    project_revision?: string | null
    project_create_date?: Date | string | null
    project_update_date?: Date | string | null
    project_create_by?: number | null
    project_update_by?: number | null
    project_deleted?: number | null
    project_deleted_at?: Date | string | null
    user_projects?: gd_user_projectCreateNestedManyWithoutProjectInput
    workflows?: gd_workflowCreateNestedManyWithoutProjectInput
    files?: gd_fileCreateNestedManyWithoutProjectInput
  }

  export type gd_projectUncheckedCreateInput = {
    project_id?: number
    project_name?: string | null
    project_revision?: string | null
    project_create_date?: Date | string | null
    project_update_date?: Date | string | null
    project_create_by?: number | null
    project_update_by?: number | null
    project_deleted?: number | null
    project_deleted_at?: Date | string | null
    user_projects?: gd_user_projectUncheckedCreateNestedManyWithoutProjectInput
    workflows?: gd_workflowUncheckedCreateNestedManyWithoutProjectInput
    files?: gd_fileUncheckedCreateNestedManyWithoutProjectInput
  }

  export type gd_projectUpdateInput = {
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    project_revision?: NullableStringFieldUpdateOperationsInput | string | null
    project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_projects?: gd_user_projectUpdateManyWithoutProjectInput
    workflows?: gd_workflowUpdateManyWithoutProjectInput
    files?: gd_fileUpdateManyWithoutProjectInput
  }

  export type gd_projectUncheckedUpdateInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    project_revision?: NullableStringFieldUpdateOperationsInput | string | null
    project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_projects?: gd_user_projectUncheckedUpdateManyWithoutProjectInput
    workflows?: gd_workflowUncheckedUpdateManyWithoutProjectInput
    files?: gd_fileUncheckedUpdateManyWithoutProjectInput
  }

  export type gd_projectCreateManyInput = {
    project_id?: number
    project_name?: string | null
    project_revision?: string | null
    project_create_date?: Date | string | null
    project_update_date?: Date | string | null
    project_create_by?: number | null
    project_update_by?: number | null
    project_deleted?: number | null
    project_deleted_at?: Date | string | null
  }

  export type gd_projectUpdateManyMutationInput = {
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    project_revision?: NullableStringFieldUpdateOperationsInput | string | null
    project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_projectUncheckedUpdateManyInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    project_revision?: NullableStringFieldUpdateOperationsInput | string | null
    project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_user_projectCreateInput = {
    user_project_create_date?: Date | string | null
    user_project_update_date?: Date | string | null
    user_project_create_by?: number | null
    user_project_update_by?: number | null
    user?: gd_userCreateNestedOneWithoutUser_projectsInput
    project: gd_projectCreateNestedOneWithoutUser_projectsInput
  }

  export type gd_user_projectUncheckedCreateInput = {
    project_id: number
    user_id: number
    user_project_create_date?: Date | string | null
    user_project_update_date?: Date | string | null
    user_project_create_by?: number | null
    user_project_update_by?: number | null
  }

  export type gd_user_projectUpdateInput = {
    user_project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user?: gd_userUpdateOneWithoutUser_projectsInput
    project?: gd_projectUpdateOneRequiredWithoutUser_projectsInput
  }

  export type gd_user_projectUncheckedUpdateInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    user_project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_user_projectCreateManyInput = {
    project_id: number
    user_id: number
    user_project_create_date?: Date | string | null
    user_project_update_date?: Date | string | null
    user_project_create_by?: number | null
    user_project_update_by?: number | null
  }

  export type gd_user_projectUpdateManyMutationInput = {
    user_project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_user_projectUncheckedUpdateManyInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    user_project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_workflowCreateInput = {
    workflow_name: string
    workflow_create_date?: Date | string | null
    workflow_update_date?: Date | string | null
    workflow_create_by?: number | null
    workflow_update_by?: number | null
    workflow_delete?: number | null
    workflow_delete_at?: Date | string | null
    project?: gd_projectCreateNestedOneWithoutWorkflowsInput
    logs?: gd_logCreateNestedManyWithoutWorkflowInput
    files?: gd_fileCreateNestedManyWithoutWorkflowInput
  }

  export type gd_workflowUncheckedCreateInput = {
    workflow_id?: number
    workflow_name: string
    project_id?: number | null
    workflow_create_date?: Date | string | null
    workflow_update_date?: Date | string | null
    workflow_create_by?: number | null
    workflow_update_by?: number | null
    workflow_delete?: number | null
    workflow_delete_at?: Date | string | null
    logs?: gd_logUncheckedCreateNestedManyWithoutWorkflowInput
    files?: gd_fileUncheckedCreateNestedManyWithoutWorkflowInput
  }

  export type gd_workflowUpdateInput = {
    workflow_name?: StringFieldUpdateOperationsInput | string
    workflow_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: gd_projectUpdateOneWithoutWorkflowsInput
    logs?: gd_logUpdateManyWithoutWorkflowInput
    files?: gd_fileUpdateManyWithoutWorkflowInput
  }

  export type gd_workflowUncheckedUpdateInput = {
    workflow_id?: IntFieldUpdateOperationsInput | number
    workflow_name?: StringFieldUpdateOperationsInput | string
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logs?: gd_logUncheckedUpdateManyWithoutWorkflowInput
    files?: gd_fileUncheckedUpdateManyWithoutWorkflowInput
  }

  export type gd_workflowCreateManyInput = {
    workflow_id?: number
    workflow_name: string
    project_id?: number | null
    workflow_create_date?: Date | string | null
    workflow_update_date?: Date | string | null
    workflow_create_by?: number | null
    workflow_update_by?: number | null
    workflow_delete?: number | null
    workflow_delete_at?: Date | string | null
  }

  export type gd_workflowUpdateManyMutationInput = {
    workflow_name?: StringFieldUpdateOperationsInput | string
    workflow_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_workflowUncheckedUpdateManyInput = {
    workflow_id?: IntFieldUpdateOperationsInput | number
    workflow_name?: StringFieldUpdateOperationsInput | string
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_fileCreateInput = {
    file_path?: string | null
    file_create_date?: Date | string | null
    file_update_date?: Date | string | null
    file_create_by?: number | null
    file_update_by?: number | null
    file_deleted?: number | null
    file_deleted_at?: Date | string | null
    project?: gd_projectCreateNestedOneWithoutFilesInput
    workflow?: gd_workflowCreateNestedOneWithoutFilesInput
  }

  export type gd_fileUncheckedCreateInput = {
    file_id?: number
    file_path?: string | null
    project_id?: number | null
    workflow_id?: number | null
    file_create_date?: Date | string | null
    file_update_date?: Date | string | null
    file_create_by?: number | null
    file_update_by?: number | null
    file_deleted?: number | null
    file_deleted_at?: Date | string | null
  }

  export type gd_fileUpdateInput = {
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    file_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: gd_projectUpdateOneWithoutFilesInput
    workflow?: gd_workflowUpdateOneWithoutFilesInput
  }

  export type gd_fileUncheckedUpdateInput = {
    file_id?: IntFieldUpdateOperationsInput | number
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_id?: NullableIntFieldUpdateOperationsInput | number | null
    file_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_fileCreateManyInput = {
    file_id?: number
    file_path?: string | null
    project_id?: number | null
    workflow_id?: number | null
    file_create_date?: Date | string | null
    file_update_date?: Date | string | null
    file_create_by?: number | null
    file_update_by?: number | null
    file_deleted?: number | null
    file_deleted_at?: Date | string | null
  }

  export type gd_fileUpdateManyMutationInput = {
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    file_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_fileUncheckedUpdateManyInput = {
    file_id?: IntFieldUpdateOperationsInput | number
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_id?: NullableIntFieldUpdateOperationsInput | number | null
    file_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_logCreateInput = {
    log_session_time?: Date | string | null
    log_session_attempt?: string | null
    log_last_duration?: string | null
    log_status?: number | null
    log_created_date?: Date | string | null
    log_updated_date?: Date | string | null
    log_created_by?: number | null
    log_updated_by?: number | null
    workflow?: gd_workflowCreateNestedOneWithoutLogsInput
  }

  export type gd_logUncheckedCreateInput = {
    log_id?: number
    workflow_id?: number | null
    log_session_time?: Date | string | null
    log_session_attempt?: string | null
    log_last_duration?: string | null
    log_status?: number | null
    log_created_date?: Date | string | null
    log_updated_date?: Date | string | null
    log_created_by?: number | null
    log_updated_by?: number | null
  }

  export type gd_logUpdateInput = {
    log_session_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_session_attempt?: NullableStringFieldUpdateOperationsInput | string | null
    log_last_duration?: NullableStringFieldUpdateOperationsInput | string | null
    log_status?: NullableIntFieldUpdateOperationsInput | number | null
    log_created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    log_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow?: gd_workflowUpdateOneWithoutLogsInput
  }

  export type gd_logUncheckedUpdateInput = {
    log_id?: IntFieldUpdateOperationsInput | number
    workflow_id?: NullableIntFieldUpdateOperationsInput | number | null
    log_session_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_session_attempt?: NullableStringFieldUpdateOperationsInput | string | null
    log_last_duration?: NullableStringFieldUpdateOperationsInput | string | null
    log_status?: NullableIntFieldUpdateOperationsInput | number | null
    log_created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    log_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_logCreateManyInput = {
    log_id?: number
    workflow_id?: number | null
    log_session_time?: Date | string | null
    log_session_attempt?: string | null
    log_last_duration?: string | null
    log_status?: number | null
    log_created_date?: Date | string | null
    log_updated_date?: Date | string | null
    log_created_by?: number | null
    log_updated_by?: number | null
  }

  export type gd_logUpdateManyMutationInput = {
    log_session_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_session_attempt?: NullableStringFieldUpdateOperationsInput | string | null
    log_last_duration?: NullableStringFieldUpdateOperationsInput | string | null
    log_status?: NullableIntFieldUpdateOperationsInput | number | null
    log_created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    log_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_logUncheckedUpdateManyInput = {
    log_id?: IntFieldUpdateOperationsInput | number
    workflow_id?: NullableIntFieldUpdateOperationsInput | number | null
    log_session_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_session_attempt?: NullableStringFieldUpdateOperationsInput | string | null
    log_last_duration?: NullableStringFieldUpdateOperationsInput | string | null
    log_status?: NullableIntFieldUpdateOperationsInput | number | null
    log_created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    log_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_import_fileCreateInput = {
    import_file_name?: string | null
    import_fundname?: string | null
    import_uploaded?: number | null
    import_status_raw_table?: number | null
    import_status_destination_table?: number | null
    import_date_uploaded?: string | null
    user_id?: number | null
  }

  export type gd_import_fileUncheckedCreateInput = {
    import_id?: number
    import_file_name?: string | null
    import_fundname?: string | null
    import_uploaded?: number | null
    import_status_raw_table?: number | null
    import_status_destination_table?: number | null
    import_date_uploaded?: string | null
    user_id?: number | null
  }

  export type gd_import_fileUpdateInput = {
    import_file_name?: NullableStringFieldUpdateOperationsInput | string | null
    import_fundname?: NullableStringFieldUpdateOperationsInput | string | null
    import_uploaded?: NullableIntFieldUpdateOperationsInput | number | null
    import_status_raw_table?: NullableIntFieldUpdateOperationsInput | number | null
    import_status_destination_table?: NullableIntFieldUpdateOperationsInput | number | null
    import_date_uploaded?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_import_fileUncheckedUpdateInput = {
    import_id?: IntFieldUpdateOperationsInput | number
    import_file_name?: NullableStringFieldUpdateOperationsInput | string | null
    import_fundname?: NullableStringFieldUpdateOperationsInput | string | null
    import_uploaded?: NullableIntFieldUpdateOperationsInput | number | null
    import_status_raw_table?: NullableIntFieldUpdateOperationsInput | number | null
    import_status_destination_table?: NullableIntFieldUpdateOperationsInput | number | null
    import_date_uploaded?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_import_fileCreateManyInput = {
    import_id?: number
    import_file_name?: string | null
    import_fundname?: string | null
    import_uploaded?: number | null
    import_status_raw_table?: number | null
    import_status_destination_table?: number | null
    import_date_uploaded?: string | null
    user_id?: number | null
  }

  export type gd_import_fileUpdateManyMutationInput = {
    import_file_name?: NullableStringFieldUpdateOperationsInput | string | null
    import_fundname?: NullableStringFieldUpdateOperationsInput | string | null
    import_uploaded?: NullableIntFieldUpdateOperationsInput | number | null
    import_status_raw_table?: NullableIntFieldUpdateOperationsInput | number | null
    import_status_destination_table?: NullableIntFieldUpdateOperationsInput | number | null
    import_date_uploaded?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_import_fileUncheckedUpdateManyInput = {
    import_id?: IntFieldUpdateOperationsInput | number
    import_file_name?: NullableStringFieldUpdateOperationsInput | string | null
    import_fundname?: NullableStringFieldUpdateOperationsInput | string | null
    import_uploaded?: NullableIntFieldUpdateOperationsInput | number | null
    import_status_raw_table?: NullableIntFieldUpdateOperationsInput | number | null
    import_status_destination_table?: NullableIntFieldUpdateOperationsInput | number | null
    import_date_uploaded?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_datalake_fileCreateInput = {
    dl_file_name?: string | null
    dl_file_content?: string | null
    dl_file_deleted?: number | null
    dl_file_created_by?: number | null
    dl_file_updated_by?: number | null
    dl_file_deleted_at?: Date | string | null
    dl_file_updated_at?: Date | string | null
    dl_file_created_at?: Date | string | null
    folder?: gd_datalake_folderCreateNestedOneWithoutFilesInput
  }

  export type gd_datalake_fileUncheckedCreateInput = {
    dl_file_id?: number
    dl_file_name?: string | null
    dl_folder_id?: number | null
    dl_file_content?: string | null
    dl_file_deleted?: number | null
    dl_file_created_by?: number | null
    dl_file_updated_by?: number | null
    dl_file_deleted_at?: Date | string | null
    dl_file_updated_at?: Date | string | null
    dl_file_created_at?: Date | string | null
  }

  export type gd_datalake_fileUpdateInput = {
    dl_file_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_file_content?: NullableStringFieldUpdateOperationsInput | string | null
    dl_file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    folder?: gd_datalake_folderUpdateOneWithoutFilesInput
  }

  export type gd_datalake_fileUncheckedUpdateInput = {
    dl_file_id?: IntFieldUpdateOperationsInput | number
    dl_file_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_folder_id?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_content?: NullableStringFieldUpdateOperationsInput | string | null
    dl_file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_datalake_fileCreateManyInput = {
    dl_file_id?: number
    dl_file_name?: string | null
    dl_folder_id?: number | null
    dl_file_content?: string | null
    dl_file_deleted?: number | null
    dl_file_created_by?: number | null
    dl_file_updated_by?: number | null
    dl_file_deleted_at?: Date | string | null
    dl_file_updated_at?: Date | string | null
    dl_file_created_at?: Date | string | null
  }

  export type gd_datalake_fileUpdateManyMutationInput = {
    dl_file_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_file_content?: NullableStringFieldUpdateOperationsInput | string | null
    dl_file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_datalake_fileUncheckedUpdateManyInput = {
    dl_file_id?: IntFieldUpdateOperationsInput | number
    dl_file_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_folder_id?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_content?: NullableStringFieldUpdateOperationsInput | string | null
    dl_file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_datalake_folderCreateInput = {
    dl_folder_name?: string | null
    dl_parent_folder_id?: number | null
    dl_folder_deleted?: number | null
    dl_folder_created_by?: number | null
    dl_folder_updated_by?: number | null
    dl_folder_deleted_at?: Date | string | null
    dl_folder_updated_at?: Date | string | null
    dl_folder_created_at?: Date | string | null
    files?: gd_datalake_fileCreateNestedManyWithoutFolderInput
  }

  export type gd_datalake_folderUncheckedCreateInput = {
    dl_folder_id?: number
    dl_folder_name?: string | null
    dl_parent_folder_id?: number | null
    dl_folder_deleted?: number | null
    dl_folder_created_by?: number | null
    dl_folder_updated_by?: number | null
    dl_folder_deleted_at?: Date | string | null
    dl_folder_updated_at?: Date | string | null
    dl_folder_created_at?: Date | string | null
    files?: gd_datalake_fileUncheckedCreateNestedManyWithoutFolderInput
  }

  export type gd_datalake_folderUpdateInput = {
    dl_folder_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_parent_folder_id?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_folder_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_folder_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    files?: gd_datalake_fileUpdateManyWithoutFolderInput
  }

  export type gd_datalake_folderUncheckedUpdateInput = {
    dl_folder_id?: IntFieldUpdateOperationsInput | number
    dl_folder_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_parent_folder_id?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_folder_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_folder_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    files?: gd_datalake_fileUncheckedUpdateManyWithoutFolderInput
  }

  export type gd_datalake_folderCreateManyInput = {
    dl_folder_id?: number
    dl_folder_name?: string | null
    dl_parent_folder_id?: number | null
    dl_folder_deleted?: number | null
    dl_folder_created_by?: number | null
    dl_folder_updated_by?: number | null
    dl_folder_deleted_at?: Date | string | null
    dl_folder_updated_at?: Date | string | null
    dl_folder_created_at?: Date | string | null
  }

  export type gd_datalake_folderUpdateManyMutationInput = {
    dl_folder_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_parent_folder_id?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_folder_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_folder_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_datalake_folderUncheckedUpdateManyInput = {
    dl_folder_id?: IntFieldUpdateOperationsInput | number
    dl_folder_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_parent_folder_id?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_folder_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_folder_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringFilter | string
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter | string | null
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type Gd_tokenListRelationFilter = {
    every?: gd_tokenWhereInput
    some?: gd_tokenWhereInput
    none?: gd_tokenWhereInput
  }

  export type Gd_user_roleListRelationFilter = {
    every?: gd_user_roleWhereInput
    some?: gd_user_roleWhereInput
    none?: gd_user_roleWhereInput
  }

  export type Gd_user_projectListRelationFilter = {
    every?: gd_user_projectWhereInput
    some?: gd_user_projectWhereInput
    none?: gd_user_projectWhereInput
  }

  export type gd_tokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type gd_user_roleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type gd_user_projectOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type gd_userCountOrderByAggregateInput = {
    user_id?: SortOrder
    user_email?: SortOrder
    user_password?: SortOrder
    user_first_name?: SortOrder
    user_last_name?: SortOrder
    user_status?: SortOrder
    user_create_at?: SortOrder
    user_update_at?: SortOrder
    user_create_by?: SortOrder
    user_update_by?: SortOrder
    user_deleted?: SortOrder
    user_deleted_at?: SortOrder
  }

  export type gd_userAvgOrderByAggregateInput = {
    user_id?: SortOrder
    user_status?: SortOrder
    user_create_by?: SortOrder
    user_update_by?: SortOrder
    user_deleted?: SortOrder
  }

  export type gd_userMaxOrderByAggregateInput = {
    user_id?: SortOrder
    user_email?: SortOrder
    user_password?: SortOrder
    user_first_name?: SortOrder
    user_last_name?: SortOrder
    user_status?: SortOrder
    user_create_at?: SortOrder
    user_update_at?: SortOrder
    user_create_by?: SortOrder
    user_update_by?: SortOrder
    user_deleted?: SortOrder
    user_deleted_at?: SortOrder
  }

  export type gd_userMinOrderByAggregateInput = {
    user_id?: SortOrder
    user_email?: SortOrder
    user_password?: SortOrder
    user_first_name?: SortOrder
    user_last_name?: SortOrder
    user_status?: SortOrder
    user_create_at?: SortOrder
    user_update_at?: SortOrder
    user_create_by?: SortOrder
    user_update_by?: SortOrder
    user_deleted?: SortOrder
    user_deleted_at?: SortOrder
  }

  export type gd_userSumOrderByAggregateInput = {
    user_id?: SortOrder
    user_status?: SortOrder
    user_create_by?: SortOrder
    user_update_by?: SortOrder
    user_deleted?: SortOrder
  }

  export type IntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type StringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type StringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type IntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type DateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type Gd_userRelationFilter = {
    is?: gd_userWhereInput | null
    isNot?: gd_userWhereInput | null
  }

  export type gd_tokenAccess_tokenUser_idCompoundUniqueInput = {
    access_token: string
    user_id: number
  }

  export type gd_tokenCountOrderByAggregateInput = {
    access_token?: SortOrder
    user_id?: SortOrder
    referesh_token?: SortOrder
    token_create_at?: SortOrder
    token_expired_at?: SortOrder
  }

  export type gd_tokenAvgOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type gd_tokenMaxOrderByAggregateInput = {
    access_token?: SortOrder
    user_id?: SortOrder
    referesh_token?: SortOrder
    token_create_at?: SortOrder
    token_expired_at?: SortOrder
  }

  export type gd_tokenMinOrderByAggregateInput = {
    access_token?: SortOrder
    user_id?: SortOrder
    referesh_token?: SortOrder
    token_create_at?: SortOrder
    token_expired_at?: SortOrder
  }

  export type gd_tokenSumOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type gd_roleCountOrderByAggregateInput = {
    role_id?: SortOrder
    role_name?: SortOrder
    role_create_date?: SortOrder
    role_update_date?: SortOrder
    role_create_by?: SortOrder
    role_update_by?: SortOrder
  }

  export type gd_roleAvgOrderByAggregateInput = {
    role_id?: SortOrder
    role_create_by?: SortOrder
    role_update_by?: SortOrder
  }

  export type gd_roleMaxOrderByAggregateInput = {
    role_id?: SortOrder
    role_name?: SortOrder
    role_create_date?: SortOrder
    role_update_date?: SortOrder
    role_create_by?: SortOrder
    role_update_by?: SortOrder
  }

  export type gd_roleMinOrderByAggregateInput = {
    role_id?: SortOrder
    role_name?: SortOrder
    role_create_date?: SortOrder
    role_update_date?: SortOrder
    role_create_by?: SortOrder
    role_update_by?: SortOrder
  }

  export type gd_roleSumOrderByAggregateInput = {
    role_id?: SortOrder
    role_create_by?: SortOrder
    role_update_by?: SortOrder
  }

  export type Gd_roleRelationFilter = {
    is?: gd_roleWhereInput | null
    isNot?: gd_roleWhereInput | null
  }

  export type gd_user_roleUser_idRole_idCompoundUniqueInput = {
    user_id: number
    role_id: number
  }

  export type gd_user_roleCountOrderByAggregateInput = {
    user_id?: SortOrder
    role_id?: SortOrder
    user_role_create_date?: SortOrder
    user_role_update_date?: SortOrder
    user_role_create_by?: SortOrder
    user_role_update_by?: SortOrder
  }

  export type gd_user_roleAvgOrderByAggregateInput = {
    user_id?: SortOrder
    role_id?: SortOrder
    user_role_create_by?: SortOrder
    user_role_update_by?: SortOrder
  }

  export type gd_user_roleMaxOrderByAggregateInput = {
    user_id?: SortOrder
    role_id?: SortOrder
    user_role_create_date?: SortOrder
    user_role_update_date?: SortOrder
    user_role_create_by?: SortOrder
    user_role_update_by?: SortOrder
  }

  export type gd_user_roleMinOrderByAggregateInput = {
    user_id?: SortOrder
    role_id?: SortOrder
    user_role_create_date?: SortOrder
    user_role_update_date?: SortOrder
    user_role_create_by?: SortOrder
    user_role_update_by?: SortOrder
  }

  export type gd_user_roleSumOrderByAggregateInput = {
    user_id?: SortOrder
    role_id?: SortOrder
    user_role_create_by?: SortOrder
    user_role_update_by?: SortOrder
  }

  export type Gd_workflowListRelationFilter = {
    every?: gd_workflowWhereInput
    some?: gd_workflowWhereInput
    none?: gd_workflowWhereInput
  }

  export type Gd_fileListRelationFilter = {
    every?: gd_fileWhereInput
    some?: gd_fileWhereInput
    none?: gd_fileWhereInput
  }

  export type gd_workflowOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type gd_fileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type gd_projectCountOrderByAggregateInput = {
    project_id?: SortOrder
    project_name?: SortOrder
    project_revision?: SortOrder
    project_create_date?: SortOrder
    project_update_date?: SortOrder
    project_create_by?: SortOrder
    project_update_by?: SortOrder
    project_deleted?: SortOrder
    project_deleted_at?: SortOrder
  }

  export type gd_projectAvgOrderByAggregateInput = {
    project_id?: SortOrder
    project_create_by?: SortOrder
    project_update_by?: SortOrder
    project_deleted?: SortOrder
  }

  export type gd_projectMaxOrderByAggregateInput = {
    project_id?: SortOrder
    project_name?: SortOrder
    project_revision?: SortOrder
    project_create_date?: SortOrder
    project_update_date?: SortOrder
    project_create_by?: SortOrder
    project_update_by?: SortOrder
    project_deleted?: SortOrder
    project_deleted_at?: SortOrder
  }

  export type gd_projectMinOrderByAggregateInput = {
    project_id?: SortOrder
    project_name?: SortOrder
    project_revision?: SortOrder
    project_create_date?: SortOrder
    project_update_date?: SortOrder
    project_create_by?: SortOrder
    project_update_by?: SortOrder
    project_deleted?: SortOrder
    project_deleted_at?: SortOrder
  }

  export type gd_projectSumOrderByAggregateInput = {
    project_id?: SortOrder
    project_create_by?: SortOrder
    project_update_by?: SortOrder
    project_deleted?: SortOrder
  }

  export type Gd_projectRelationFilter = {
    is?: gd_projectWhereInput | null
    isNot?: gd_projectWhereInput | null
  }

  export type gd_user_projectProject_idUser_idCompoundUniqueInput = {
    project_id: number
    user_id: number
  }

  export type gd_user_projectCountOrderByAggregateInput = {
    project_id?: SortOrder
    user_id?: SortOrder
    user_project_create_date?: SortOrder
    user_project_update_date?: SortOrder
    user_project_create_by?: SortOrder
    user_project_update_by?: SortOrder
  }

  export type gd_user_projectAvgOrderByAggregateInput = {
    project_id?: SortOrder
    user_id?: SortOrder
    user_project_create_by?: SortOrder
    user_project_update_by?: SortOrder
  }

  export type gd_user_projectMaxOrderByAggregateInput = {
    project_id?: SortOrder
    user_id?: SortOrder
    user_project_create_date?: SortOrder
    user_project_update_date?: SortOrder
    user_project_create_by?: SortOrder
    user_project_update_by?: SortOrder
  }

  export type gd_user_projectMinOrderByAggregateInput = {
    project_id?: SortOrder
    user_id?: SortOrder
    user_project_create_date?: SortOrder
    user_project_update_date?: SortOrder
    user_project_create_by?: SortOrder
    user_project_update_by?: SortOrder
  }

  export type gd_user_projectSumOrderByAggregateInput = {
    project_id?: SortOrder
    user_id?: SortOrder
    user_project_create_by?: SortOrder
    user_project_update_by?: SortOrder
  }

  export type Gd_logListRelationFilter = {
    every?: gd_logWhereInput
    some?: gd_logWhereInput
    none?: gd_logWhereInput
  }

  export type gd_logOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type gd_workflowCountOrderByAggregateInput = {
    workflow_id?: SortOrder
    workflow_name?: SortOrder
    project_id?: SortOrder
    workflow_create_date?: SortOrder
    workflow_update_date?: SortOrder
    workflow_create_by?: SortOrder
    workflow_update_by?: SortOrder
    workflow_delete?: SortOrder
    workflow_delete_at?: SortOrder
  }

  export type gd_workflowAvgOrderByAggregateInput = {
    workflow_id?: SortOrder
    project_id?: SortOrder
    workflow_create_by?: SortOrder
    workflow_update_by?: SortOrder
    workflow_delete?: SortOrder
  }

  export type gd_workflowMaxOrderByAggregateInput = {
    workflow_id?: SortOrder
    workflow_name?: SortOrder
    project_id?: SortOrder
    workflow_create_date?: SortOrder
    workflow_update_date?: SortOrder
    workflow_create_by?: SortOrder
    workflow_update_by?: SortOrder
    workflow_delete?: SortOrder
    workflow_delete_at?: SortOrder
  }

  export type gd_workflowMinOrderByAggregateInput = {
    workflow_id?: SortOrder
    workflow_name?: SortOrder
    project_id?: SortOrder
    workflow_create_date?: SortOrder
    workflow_update_date?: SortOrder
    workflow_create_by?: SortOrder
    workflow_update_by?: SortOrder
    workflow_delete?: SortOrder
    workflow_delete_at?: SortOrder
  }

  export type gd_workflowSumOrderByAggregateInput = {
    workflow_id?: SortOrder
    project_id?: SortOrder
    workflow_create_by?: SortOrder
    workflow_update_by?: SortOrder
    workflow_delete?: SortOrder
  }

  export type Gd_workflowRelationFilter = {
    is?: gd_workflowWhereInput | null
    isNot?: gd_workflowWhereInput | null
  }

  export type gd_fileCountOrderByAggregateInput = {
    file_id?: SortOrder
    file_path?: SortOrder
    project_id?: SortOrder
    workflow_id?: SortOrder
    file_create_date?: SortOrder
    file_update_date?: SortOrder
    file_create_by?: SortOrder
    file_update_by?: SortOrder
    file_deleted?: SortOrder
    file_deleted_at?: SortOrder
  }

  export type gd_fileAvgOrderByAggregateInput = {
    file_id?: SortOrder
    project_id?: SortOrder
    workflow_id?: SortOrder
    file_create_by?: SortOrder
    file_update_by?: SortOrder
    file_deleted?: SortOrder
  }

  export type gd_fileMaxOrderByAggregateInput = {
    file_id?: SortOrder
    file_path?: SortOrder
    project_id?: SortOrder
    workflow_id?: SortOrder
    file_create_date?: SortOrder
    file_update_date?: SortOrder
    file_create_by?: SortOrder
    file_update_by?: SortOrder
    file_deleted?: SortOrder
    file_deleted_at?: SortOrder
  }

  export type gd_fileMinOrderByAggregateInput = {
    file_id?: SortOrder
    file_path?: SortOrder
    project_id?: SortOrder
    workflow_id?: SortOrder
    file_create_date?: SortOrder
    file_update_date?: SortOrder
    file_create_by?: SortOrder
    file_update_by?: SortOrder
    file_deleted?: SortOrder
    file_deleted_at?: SortOrder
  }

  export type gd_fileSumOrderByAggregateInput = {
    file_id?: SortOrder
    project_id?: SortOrder
    workflow_id?: SortOrder
    file_create_by?: SortOrder
    file_update_by?: SortOrder
    file_deleted?: SortOrder
  }

  export type gd_logCountOrderByAggregateInput = {
    log_id?: SortOrder
    workflow_id?: SortOrder
    log_session_time?: SortOrder
    log_session_attempt?: SortOrder
    log_last_duration?: SortOrder
    log_status?: SortOrder
    log_created_date?: SortOrder
    log_updated_date?: SortOrder
    log_created_by?: SortOrder
    log_updated_by?: SortOrder
  }

  export type gd_logAvgOrderByAggregateInput = {
    log_id?: SortOrder
    workflow_id?: SortOrder
    log_status?: SortOrder
    log_created_by?: SortOrder
    log_updated_by?: SortOrder
  }

  export type gd_logMaxOrderByAggregateInput = {
    log_id?: SortOrder
    workflow_id?: SortOrder
    log_session_time?: SortOrder
    log_session_attempt?: SortOrder
    log_last_duration?: SortOrder
    log_status?: SortOrder
    log_created_date?: SortOrder
    log_updated_date?: SortOrder
    log_created_by?: SortOrder
    log_updated_by?: SortOrder
  }

  export type gd_logMinOrderByAggregateInput = {
    log_id?: SortOrder
    workflow_id?: SortOrder
    log_session_time?: SortOrder
    log_session_attempt?: SortOrder
    log_last_duration?: SortOrder
    log_status?: SortOrder
    log_created_date?: SortOrder
    log_updated_date?: SortOrder
    log_created_by?: SortOrder
    log_updated_by?: SortOrder
  }

  export type gd_logSumOrderByAggregateInput = {
    log_id?: SortOrder
    workflow_id?: SortOrder
    log_status?: SortOrder
    log_created_by?: SortOrder
    log_updated_by?: SortOrder
  }

  export type gd_import_fileCountOrderByAggregateInput = {
    import_id?: SortOrder
    import_file_name?: SortOrder
    import_fundname?: SortOrder
    import_uploaded?: SortOrder
    import_status_raw_table?: SortOrder
    import_status_destination_table?: SortOrder
    import_date_uploaded?: SortOrder
    user_id?: SortOrder
  }

  export type gd_import_fileAvgOrderByAggregateInput = {
    import_id?: SortOrder
    import_uploaded?: SortOrder
    import_status_raw_table?: SortOrder
    import_status_destination_table?: SortOrder
    user_id?: SortOrder
  }

  export type gd_import_fileMaxOrderByAggregateInput = {
    import_id?: SortOrder
    import_file_name?: SortOrder
    import_fundname?: SortOrder
    import_uploaded?: SortOrder
    import_status_raw_table?: SortOrder
    import_status_destination_table?: SortOrder
    import_date_uploaded?: SortOrder
    user_id?: SortOrder
  }

  export type gd_import_fileMinOrderByAggregateInput = {
    import_id?: SortOrder
    import_file_name?: SortOrder
    import_fundname?: SortOrder
    import_uploaded?: SortOrder
    import_status_raw_table?: SortOrder
    import_status_destination_table?: SortOrder
    import_date_uploaded?: SortOrder
    user_id?: SortOrder
  }

  export type gd_import_fileSumOrderByAggregateInput = {
    import_id?: SortOrder
    import_uploaded?: SortOrder
    import_status_raw_table?: SortOrder
    import_status_destination_table?: SortOrder
    user_id?: SortOrder
  }

  export type Gd_datalake_folderRelationFilter = {
    is?: gd_datalake_folderWhereInput | null
    isNot?: gd_datalake_folderWhereInput | null
  }

  export type gd_datalake_fileCountOrderByAggregateInput = {
    dl_file_id?: SortOrder
    dl_file_name?: SortOrder
    dl_folder_id?: SortOrder
    dl_file_content?: SortOrder
    dl_file_deleted?: SortOrder
    dl_file_created_by?: SortOrder
    dl_file_updated_by?: SortOrder
    dl_file_deleted_at?: SortOrder
    dl_file_updated_at?: SortOrder
    dl_file_created_at?: SortOrder
  }

  export type gd_datalake_fileAvgOrderByAggregateInput = {
    dl_file_id?: SortOrder
    dl_folder_id?: SortOrder
    dl_file_deleted?: SortOrder
    dl_file_created_by?: SortOrder
    dl_file_updated_by?: SortOrder
  }

  export type gd_datalake_fileMaxOrderByAggregateInput = {
    dl_file_id?: SortOrder
    dl_file_name?: SortOrder
    dl_folder_id?: SortOrder
    dl_file_content?: SortOrder
    dl_file_deleted?: SortOrder
    dl_file_created_by?: SortOrder
    dl_file_updated_by?: SortOrder
    dl_file_deleted_at?: SortOrder
    dl_file_updated_at?: SortOrder
    dl_file_created_at?: SortOrder
  }

  export type gd_datalake_fileMinOrderByAggregateInput = {
    dl_file_id?: SortOrder
    dl_file_name?: SortOrder
    dl_folder_id?: SortOrder
    dl_file_content?: SortOrder
    dl_file_deleted?: SortOrder
    dl_file_created_by?: SortOrder
    dl_file_updated_by?: SortOrder
    dl_file_deleted_at?: SortOrder
    dl_file_updated_at?: SortOrder
    dl_file_created_at?: SortOrder
  }

  export type gd_datalake_fileSumOrderByAggregateInput = {
    dl_file_id?: SortOrder
    dl_folder_id?: SortOrder
    dl_file_deleted?: SortOrder
    dl_file_created_by?: SortOrder
    dl_file_updated_by?: SortOrder
  }

  export type Gd_datalake_fileListRelationFilter = {
    every?: gd_datalake_fileWhereInput
    some?: gd_datalake_fileWhereInput
    none?: gd_datalake_fileWhereInput
  }

  export type gd_datalake_fileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type gd_datalake_folderCountOrderByAggregateInput = {
    dl_folder_id?: SortOrder
    dl_folder_name?: SortOrder
    dl_parent_folder_id?: SortOrder
    dl_folder_deleted?: SortOrder
    dl_folder_created_by?: SortOrder
    dl_folder_updated_by?: SortOrder
    dl_folder_deleted_at?: SortOrder
    dl_folder_updated_at?: SortOrder
    dl_folder_created_at?: SortOrder
  }

  export type gd_datalake_folderAvgOrderByAggregateInput = {
    dl_folder_id?: SortOrder
    dl_parent_folder_id?: SortOrder
    dl_folder_deleted?: SortOrder
    dl_folder_created_by?: SortOrder
    dl_folder_updated_by?: SortOrder
  }

  export type gd_datalake_folderMaxOrderByAggregateInput = {
    dl_folder_id?: SortOrder
    dl_folder_name?: SortOrder
    dl_parent_folder_id?: SortOrder
    dl_folder_deleted?: SortOrder
    dl_folder_created_by?: SortOrder
    dl_folder_updated_by?: SortOrder
    dl_folder_deleted_at?: SortOrder
    dl_folder_updated_at?: SortOrder
    dl_folder_created_at?: SortOrder
  }

  export type gd_datalake_folderMinOrderByAggregateInput = {
    dl_folder_id?: SortOrder
    dl_folder_name?: SortOrder
    dl_parent_folder_id?: SortOrder
    dl_folder_deleted?: SortOrder
    dl_folder_created_by?: SortOrder
    dl_folder_updated_by?: SortOrder
    dl_folder_deleted_at?: SortOrder
    dl_folder_updated_at?: SortOrder
    dl_folder_created_at?: SortOrder
  }

  export type gd_datalake_folderSumOrderByAggregateInput = {
    dl_folder_id?: SortOrder
    dl_parent_folder_id?: SortOrder
    dl_folder_deleted?: SortOrder
    dl_folder_created_by?: SortOrder
    dl_folder_updated_by?: SortOrder
  }

  export type gd_tokenCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<gd_tokenCreateWithoutUserInput>, Enumerable<gd_tokenUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<gd_tokenCreateOrConnectWithoutUserInput>
    createMany?: gd_tokenCreateManyUserInputEnvelope
    connect?: Enumerable<gd_tokenWhereUniqueInput>
  }

  export type gd_user_roleCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<gd_user_roleCreateWithoutUserInput>, Enumerable<gd_user_roleUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<gd_user_roleCreateOrConnectWithoutUserInput>
    createMany?: gd_user_roleCreateManyUserInputEnvelope
    connect?: Enumerable<gd_user_roleWhereUniqueInput>
  }

  export type gd_user_projectCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<gd_user_projectCreateWithoutUserInput>, Enumerable<gd_user_projectUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<gd_user_projectCreateOrConnectWithoutUserInput>
    createMany?: gd_user_projectCreateManyUserInputEnvelope
    connect?: Enumerable<gd_user_projectWhereUniqueInput>
  }

  export type gd_tokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<gd_tokenCreateWithoutUserInput>, Enumerable<gd_tokenUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<gd_tokenCreateOrConnectWithoutUserInput>
    createMany?: gd_tokenCreateManyUserInputEnvelope
    connect?: Enumerable<gd_tokenWhereUniqueInput>
  }

  export type gd_user_roleUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<gd_user_roleCreateWithoutUserInput>, Enumerable<gd_user_roleUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<gd_user_roleCreateOrConnectWithoutUserInput>
    createMany?: gd_user_roleCreateManyUserInputEnvelope
    connect?: Enumerable<gd_user_roleWhereUniqueInput>
  }

  export type gd_user_projectUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<gd_user_projectCreateWithoutUserInput>, Enumerable<gd_user_projectUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<gd_user_projectCreateOrConnectWithoutUserInput>
    createMany?: gd_user_projectCreateManyUserInputEnvelope
    connect?: Enumerable<gd_user_projectWhereUniqueInput>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type gd_tokenUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<gd_tokenCreateWithoutUserInput>, Enumerable<gd_tokenUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<gd_tokenCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<gd_tokenUpsertWithWhereUniqueWithoutUserInput>
    createMany?: gd_tokenCreateManyUserInputEnvelope
    set?: Enumerable<gd_tokenWhereUniqueInput>
    disconnect?: Enumerable<gd_tokenWhereUniqueInput>
    delete?: Enumerable<gd_tokenWhereUniqueInput>
    connect?: Enumerable<gd_tokenWhereUniqueInput>
    update?: Enumerable<gd_tokenUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<gd_tokenUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<gd_tokenScalarWhereInput>
  }

  export type gd_user_roleUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<gd_user_roleCreateWithoutUserInput>, Enumerable<gd_user_roleUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<gd_user_roleCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<gd_user_roleUpsertWithWhereUniqueWithoutUserInput>
    createMany?: gd_user_roleCreateManyUserInputEnvelope
    set?: Enumerable<gd_user_roleWhereUniqueInput>
    disconnect?: Enumerable<gd_user_roleWhereUniqueInput>
    delete?: Enumerable<gd_user_roleWhereUniqueInput>
    connect?: Enumerable<gd_user_roleWhereUniqueInput>
    update?: Enumerable<gd_user_roleUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<gd_user_roleUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<gd_user_roleScalarWhereInput>
  }

  export type gd_user_projectUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<gd_user_projectCreateWithoutUserInput>, Enumerable<gd_user_projectUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<gd_user_projectCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<gd_user_projectUpsertWithWhereUniqueWithoutUserInput>
    createMany?: gd_user_projectCreateManyUserInputEnvelope
    set?: Enumerable<gd_user_projectWhereUniqueInput>
    disconnect?: Enumerable<gd_user_projectWhereUniqueInput>
    delete?: Enumerable<gd_user_projectWhereUniqueInput>
    connect?: Enumerable<gd_user_projectWhereUniqueInput>
    update?: Enumerable<gd_user_projectUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<gd_user_projectUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<gd_user_projectScalarWhereInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type gd_tokenUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<gd_tokenCreateWithoutUserInput>, Enumerable<gd_tokenUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<gd_tokenCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<gd_tokenUpsertWithWhereUniqueWithoutUserInput>
    createMany?: gd_tokenCreateManyUserInputEnvelope
    set?: Enumerable<gd_tokenWhereUniqueInput>
    disconnect?: Enumerable<gd_tokenWhereUniqueInput>
    delete?: Enumerable<gd_tokenWhereUniqueInput>
    connect?: Enumerable<gd_tokenWhereUniqueInput>
    update?: Enumerable<gd_tokenUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<gd_tokenUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<gd_tokenScalarWhereInput>
  }

  export type gd_user_roleUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<gd_user_roleCreateWithoutUserInput>, Enumerable<gd_user_roleUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<gd_user_roleCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<gd_user_roleUpsertWithWhereUniqueWithoutUserInput>
    createMany?: gd_user_roleCreateManyUserInputEnvelope
    set?: Enumerable<gd_user_roleWhereUniqueInput>
    disconnect?: Enumerable<gd_user_roleWhereUniqueInput>
    delete?: Enumerable<gd_user_roleWhereUniqueInput>
    connect?: Enumerable<gd_user_roleWhereUniqueInput>
    update?: Enumerable<gd_user_roleUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<gd_user_roleUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<gd_user_roleScalarWhereInput>
  }

  export type gd_user_projectUncheckedUpdateManyWithoutUserInput = {
    create?: XOR<Enumerable<gd_user_projectCreateWithoutUserInput>, Enumerable<gd_user_projectUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<gd_user_projectCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<gd_user_projectUpsertWithWhereUniqueWithoutUserInput>
    createMany?: gd_user_projectCreateManyUserInputEnvelope
    set?: Enumerable<gd_user_projectWhereUniqueInput>
    disconnect?: Enumerable<gd_user_projectWhereUniqueInput>
    delete?: Enumerable<gd_user_projectWhereUniqueInput>
    connect?: Enumerable<gd_user_projectWhereUniqueInput>
    update?: Enumerable<gd_user_projectUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<gd_user_projectUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<gd_user_projectScalarWhereInput>
  }

  export type gd_userCreateNestedOneWithoutUser_tokensInput = {
    create?: XOR<gd_userCreateWithoutUser_tokensInput, gd_userUncheckedCreateWithoutUser_tokensInput>
    connectOrCreate?: gd_userCreateOrConnectWithoutUser_tokensInput
    connect?: gd_userWhereUniqueInput
  }

  export type gd_userUpdateOneWithoutUser_tokensInput = {
    create?: XOR<gd_userCreateWithoutUser_tokensInput, gd_userUncheckedCreateWithoutUser_tokensInput>
    connectOrCreate?: gd_userCreateOrConnectWithoutUser_tokensInput
    upsert?: gd_userUpsertWithoutUser_tokensInput
    disconnect?: boolean
    delete?: boolean
    connect?: gd_userWhereUniqueInput
    update?: XOR<gd_userUpdateWithoutUser_tokensInput, gd_userUncheckedUpdateWithoutUser_tokensInput>
  }

  export type gd_user_roleCreateNestedManyWithoutRoleInput = {
    create?: XOR<Enumerable<gd_user_roleCreateWithoutRoleInput>, Enumerable<gd_user_roleUncheckedCreateWithoutRoleInput>>
    connectOrCreate?: Enumerable<gd_user_roleCreateOrConnectWithoutRoleInput>
    createMany?: gd_user_roleCreateManyRoleInputEnvelope
    connect?: Enumerable<gd_user_roleWhereUniqueInput>
  }

  export type gd_user_roleUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<Enumerable<gd_user_roleCreateWithoutRoleInput>, Enumerable<gd_user_roleUncheckedCreateWithoutRoleInput>>
    connectOrCreate?: Enumerable<gd_user_roleCreateOrConnectWithoutRoleInput>
    createMany?: gd_user_roleCreateManyRoleInputEnvelope
    connect?: Enumerable<gd_user_roleWhereUniqueInput>
  }

  export type gd_user_roleUpdateManyWithoutRoleInput = {
    create?: XOR<Enumerable<gd_user_roleCreateWithoutRoleInput>, Enumerable<gd_user_roleUncheckedCreateWithoutRoleInput>>
    connectOrCreate?: Enumerable<gd_user_roleCreateOrConnectWithoutRoleInput>
    upsert?: Enumerable<gd_user_roleUpsertWithWhereUniqueWithoutRoleInput>
    createMany?: gd_user_roleCreateManyRoleInputEnvelope
    set?: Enumerable<gd_user_roleWhereUniqueInput>
    disconnect?: Enumerable<gd_user_roleWhereUniqueInput>
    delete?: Enumerable<gd_user_roleWhereUniqueInput>
    connect?: Enumerable<gd_user_roleWhereUniqueInput>
    update?: Enumerable<gd_user_roleUpdateWithWhereUniqueWithoutRoleInput>
    updateMany?: Enumerable<gd_user_roleUpdateManyWithWhereWithoutRoleInput>
    deleteMany?: Enumerable<gd_user_roleScalarWhereInput>
  }

  export type gd_user_roleUncheckedUpdateManyWithoutRoleInput = {
    create?: XOR<Enumerable<gd_user_roleCreateWithoutRoleInput>, Enumerable<gd_user_roleUncheckedCreateWithoutRoleInput>>
    connectOrCreate?: Enumerable<gd_user_roleCreateOrConnectWithoutRoleInput>
    upsert?: Enumerable<gd_user_roleUpsertWithWhereUniqueWithoutRoleInput>
    createMany?: gd_user_roleCreateManyRoleInputEnvelope
    set?: Enumerable<gd_user_roleWhereUniqueInput>
    disconnect?: Enumerable<gd_user_roleWhereUniqueInput>
    delete?: Enumerable<gd_user_roleWhereUniqueInput>
    connect?: Enumerable<gd_user_roleWhereUniqueInput>
    update?: Enumerable<gd_user_roleUpdateWithWhereUniqueWithoutRoleInput>
    updateMany?: Enumerable<gd_user_roleUpdateManyWithWhereWithoutRoleInput>
    deleteMany?: Enumerable<gd_user_roleScalarWhereInput>
  }

  export type gd_userCreateNestedOneWithoutUser_rolesInput = {
    create?: XOR<gd_userCreateWithoutUser_rolesInput, gd_userUncheckedCreateWithoutUser_rolesInput>
    connectOrCreate?: gd_userCreateOrConnectWithoutUser_rolesInput
    connect?: gd_userWhereUniqueInput
  }

  export type gd_roleCreateNestedOneWithoutUser_roleInput = {
    create?: XOR<gd_roleCreateWithoutUser_roleInput, gd_roleUncheckedCreateWithoutUser_roleInput>
    connectOrCreate?: gd_roleCreateOrConnectWithoutUser_roleInput
    connect?: gd_roleWhereUniqueInput
  }

  export type gd_userUpdateOneWithoutUser_rolesInput = {
    create?: XOR<gd_userCreateWithoutUser_rolesInput, gd_userUncheckedCreateWithoutUser_rolesInput>
    connectOrCreate?: gd_userCreateOrConnectWithoutUser_rolesInput
    upsert?: gd_userUpsertWithoutUser_rolesInput
    disconnect?: boolean
    delete?: boolean
    connect?: gd_userWhereUniqueInput
    update?: XOR<gd_userUpdateWithoutUser_rolesInput, gd_userUncheckedUpdateWithoutUser_rolesInput>
  }

  export type gd_roleUpdateOneWithoutUser_roleInput = {
    create?: XOR<gd_roleCreateWithoutUser_roleInput, gd_roleUncheckedCreateWithoutUser_roleInput>
    connectOrCreate?: gd_roleCreateOrConnectWithoutUser_roleInput
    upsert?: gd_roleUpsertWithoutUser_roleInput
    disconnect?: boolean
    delete?: boolean
    connect?: gd_roleWhereUniqueInput
    update?: XOR<gd_roleUpdateWithoutUser_roleInput, gd_roleUncheckedUpdateWithoutUser_roleInput>
  }

  export type gd_user_projectCreateNestedManyWithoutProjectInput = {
    create?: XOR<Enumerable<gd_user_projectCreateWithoutProjectInput>, Enumerable<gd_user_projectUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<gd_user_projectCreateOrConnectWithoutProjectInput>
    createMany?: gd_user_projectCreateManyProjectInputEnvelope
    connect?: Enumerable<gd_user_projectWhereUniqueInput>
  }

  export type gd_workflowCreateNestedManyWithoutProjectInput = {
    create?: XOR<Enumerable<gd_workflowCreateWithoutProjectInput>, Enumerable<gd_workflowUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<gd_workflowCreateOrConnectWithoutProjectInput>
    createMany?: gd_workflowCreateManyProjectInputEnvelope
    connect?: Enumerable<gd_workflowWhereUniqueInput>
  }

  export type gd_fileCreateNestedManyWithoutProjectInput = {
    create?: XOR<Enumerable<gd_fileCreateWithoutProjectInput>, Enumerable<gd_fileUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<gd_fileCreateOrConnectWithoutProjectInput>
    createMany?: gd_fileCreateManyProjectInputEnvelope
    connect?: Enumerable<gd_fileWhereUniqueInput>
  }

  export type gd_user_projectUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<Enumerable<gd_user_projectCreateWithoutProjectInput>, Enumerable<gd_user_projectUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<gd_user_projectCreateOrConnectWithoutProjectInput>
    createMany?: gd_user_projectCreateManyProjectInputEnvelope
    connect?: Enumerable<gd_user_projectWhereUniqueInput>
  }

  export type gd_workflowUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<Enumerable<gd_workflowCreateWithoutProjectInput>, Enumerable<gd_workflowUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<gd_workflowCreateOrConnectWithoutProjectInput>
    createMany?: gd_workflowCreateManyProjectInputEnvelope
    connect?: Enumerable<gd_workflowWhereUniqueInput>
  }

  export type gd_fileUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<Enumerable<gd_fileCreateWithoutProjectInput>, Enumerable<gd_fileUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<gd_fileCreateOrConnectWithoutProjectInput>
    createMany?: gd_fileCreateManyProjectInputEnvelope
    connect?: Enumerable<gd_fileWhereUniqueInput>
  }

  export type gd_user_projectUpdateManyWithoutProjectInput = {
    create?: XOR<Enumerable<gd_user_projectCreateWithoutProjectInput>, Enumerable<gd_user_projectUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<gd_user_projectCreateOrConnectWithoutProjectInput>
    upsert?: Enumerable<gd_user_projectUpsertWithWhereUniqueWithoutProjectInput>
    createMany?: gd_user_projectCreateManyProjectInputEnvelope
    set?: Enumerable<gd_user_projectWhereUniqueInput>
    disconnect?: Enumerable<gd_user_projectWhereUniqueInput>
    delete?: Enumerable<gd_user_projectWhereUniqueInput>
    connect?: Enumerable<gd_user_projectWhereUniqueInput>
    update?: Enumerable<gd_user_projectUpdateWithWhereUniqueWithoutProjectInput>
    updateMany?: Enumerable<gd_user_projectUpdateManyWithWhereWithoutProjectInput>
    deleteMany?: Enumerable<gd_user_projectScalarWhereInput>
  }

  export type gd_workflowUpdateManyWithoutProjectInput = {
    create?: XOR<Enumerable<gd_workflowCreateWithoutProjectInput>, Enumerable<gd_workflowUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<gd_workflowCreateOrConnectWithoutProjectInput>
    upsert?: Enumerable<gd_workflowUpsertWithWhereUniqueWithoutProjectInput>
    createMany?: gd_workflowCreateManyProjectInputEnvelope
    set?: Enumerable<gd_workflowWhereUniqueInput>
    disconnect?: Enumerable<gd_workflowWhereUniqueInput>
    delete?: Enumerable<gd_workflowWhereUniqueInput>
    connect?: Enumerable<gd_workflowWhereUniqueInput>
    update?: Enumerable<gd_workflowUpdateWithWhereUniqueWithoutProjectInput>
    updateMany?: Enumerable<gd_workflowUpdateManyWithWhereWithoutProjectInput>
    deleteMany?: Enumerable<gd_workflowScalarWhereInput>
  }

  export type gd_fileUpdateManyWithoutProjectInput = {
    create?: XOR<Enumerable<gd_fileCreateWithoutProjectInput>, Enumerable<gd_fileUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<gd_fileCreateOrConnectWithoutProjectInput>
    upsert?: Enumerable<gd_fileUpsertWithWhereUniqueWithoutProjectInput>
    createMany?: gd_fileCreateManyProjectInputEnvelope
    set?: Enumerable<gd_fileWhereUniqueInput>
    disconnect?: Enumerable<gd_fileWhereUniqueInput>
    delete?: Enumerable<gd_fileWhereUniqueInput>
    connect?: Enumerable<gd_fileWhereUniqueInput>
    update?: Enumerable<gd_fileUpdateWithWhereUniqueWithoutProjectInput>
    updateMany?: Enumerable<gd_fileUpdateManyWithWhereWithoutProjectInput>
    deleteMany?: Enumerable<gd_fileScalarWhereInput>
  }

  export type gd_user_projectUncheckedUpdateManyWithoutProjectInput = {
    create?: XOR<Enumerable<gd_user_projectCreateWithoutProjectInput>, Enumerable<gd_user_projectUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<gd_user_projectCreateOrConnectWithoutProjectInput>
    upsert?: Enumerable<gd_user_projectUpsertWithWhereUniqueWithoutProjectInput>
    createMany?: gd_user_projectCreateManyProjectInputEnvelope
    set?: Enumerable<gd_user_projectWhereUniqueInput>
    disconnect?: Enumerable<gd_user_projectWhereUniqueInput>
    delete?: Enumerable<gd_user_projectWhereUniqueInput>
    connect?: Enumerable<gd_user_projectWhereUniqueInput>
    update?: Enumerable<gd_user_projectUpdateWithWhereUniqueWithoutProjectInput>
    updateMany?: Enumerable<gd_user_projectUpdateManyWithWhereWithoutProjectInput>
    deleteMany?: Enumerable<gd_user_projectScalarWhereInput>
  }

  export type gd_workflowUncheckedUpdateManyWithoutProjectInput = {
    create?: XOR<Enumerable<gd_workflowCreateWithoutProjectInput>, Enumerable<gd_workflowUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<gd_workflowCreateOrConnectWithoutProjectInput>
    upsert?: Enumerable<gd_workflowUpsertWithWhereUniqueWithoutProjectInput>
    createMany?: gd_workflowCreateManyProjectInputEnvelope
    set?: Enumerable<gd_workflowWhereUniqueInput>
    disconnect?: Enumerable<gd_workflowWhereUniqueInput>
    delete?: Enumerable<gd_workflowWhereUniqueInput>
    connect?: Enumerable<gd_workflowWhereUniqueInput>
    update?: Enumerable<gd_workflowUpdateWithWhereUniqueWithoutProjectInput>
    updateMany?: Enumerable<gd_workflowUpdateManyWithWhereWithoutProjectInput>
    deleteMany?: Enumerable<gd_workflowScalarWhereInput>
  }

  export type gd_fileUncheckedUpdateManyWithoutProjectInput = {
    create?: XOR<Enumerable<gd_fileCreateWithoutProjectInput>, Enumerable<gd_fileUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<gd_fileCreateOrConnectWithoutProjectInput>
    upsert?: Enumerable<gd_fileUpsertWithWhereUniqueWithoutProjectInput>
    createMany?: gd_fileCreateManyProjectInputEnvelope
    set?: Enumerable<gd_fileWhereUniqueInput>
    disconnect?: Enumerable<gd_fileWhereUniqueInput>
    delete?: Enumerable<gd_fileWhereUniqueInput>
    connect?: Enumerable<gd_fileWhereUniqueInput>
    update?: Enumerable<gd_fileUpdateWithWhereUniqueWithoutProjectInput>
    updateMany?: Enumerable<gd_fileUpdateManyWithWhereWithoutProjectInput>
    deleteMany?: Enumerable<gd_fileScalarWhereInput>
  }

  export type gd_userCreateNestedOneWithoutUser_projectsInput = {
    create?: XOR<gd_userCreateWithoutUser_projectsInput, gd_userUncheckedCreateWithoutUser_projectsInput>
    connectOrCreate?: gd_userCreateOrConnectWithoutUser_projectsInput
    connect?: gd_userWhereUniqueInput
  }

  export type gd_projectCreateNestedOneWithoutUser_projectsInput = {
    create?: XOR<gd_projectCreateWithoutUser_projectsInput, gd_projectUncheckedCreateWithoutUser_projectsInput>
    connectOrCreate?: gd_projectCreateOrConnectWithoutUser_projectsInput
    connect?: gd_projectWhereUniqueInput
  }

  export type gd_userUpdateOneWithoutUser_projectsInput = {
    create?: XOR<gd_userCreateWithoutUser_projectsInput, gd_userUncheckedCreateWithoutUser_projectsInput>
    connectOrCreate?: gd_userCreateOrConnectWithoutUser_projectsInput
    upsert?: gd_userUpsertWithoutUser_projectsInput
    disconnect?: boolean
    delete?: boolean
    connect?: gd_userWhereUniqueInput
    update?: XOR<gd_userUpdateWithoutUser_projectsInput, gd_userUncheckedUpdateWithoutUser_projectsInput>
  }

  export type gd_projectUpdateOneRequiredWithoutUser_projectsInput = {
    create?: XOR<gd_projectCreateWithoutUser_projectsInput, gd_projectUncheckedCreateWithoutUser_projectsInput>
    connectOrCreate?: gd_projectCreateOrConnectWithoutUser_projectsInput
    upsert?: gd_projectUpsertWithoutUser_projectsInput
    connect?: gd_projectWhereUniqueInput
    update?: XOR<gd_projectUpdateWithoutUser_projectsInput, gd_projectUncheckedUpdateWithoutUser_projectsInput>
  }

  export type gd_projectCreateNestedOneWithoutWorkflowsInput = {
    create?: XOR<gd_projectCreateWithoutWorkflowsInput, gd_projectUncheckedCreateWithoutWorkflowsInput>
    connectOrCreate?: gd_projectCreateOrConnectWithoutWorkflowsInput
    connect?: gd_projectWhereUniqueInput
  }

  export type gd_logCreateNestedManyWithoutWorkflowInput = {
    create?: XOR<Enumerable<gd_logCreateWithoutWorkflowInput>, Enumerable<gd_logUncheckedCreateWithoutWorkflowInput>>
    connectOrCreate?: Enumerable<gd_logCreateOrConnectWithoutWorkflowInput>
    createMany?: gd_logCreateManyWorkflowInputEnvelope
    connect?: Enumerable<gd_logWhereUniqueInput>
  }

  export type gd_fileCreateNestedManyWithoutWorkflowInput = {
    create?: XOR<Enumerable<gd_fileCreateWithoutWorkflowInput>, Enumerable<gd_fileUncheckedCreateWithoutWorkflowInput>>
    connectOrCreate?: Enumerable<gd_fileCreateOrConnectWithoutWorkflowInput>
    createMany?: gd_fileCreateManyWorkflowInputEnvelope
    connect?: Enumerable<gd_fileWhereUniqueInput>
  }

  export type gd_logUncheckedCreateNestedManyWithoutWorkflowInput = {
    create?: XOR<Enumerable<gd_logCreateWithoutWorkflowInput>, Enumerable<gd_logUncheckedCreateWithoutWorkflowInput>>
    connectOrCreate?: Enumerable<gd_logCreateOrConnectWithoutWorkflowInput>
    createMany?: gd_logCreateManyWorkflowInputEnvelope
    connect?: Enumerable<gd_logWhereUniqueInput>
  }

  export type gd_fileUncheckedCreateNestedManyWithoutWorkflowInput = {
    create?: XOR<Enumerable<gd_fileCreateWithoutWorkflowInput>, Enumerable<gd_fileUncheckedCreateWithoutWorkflowInput>>
    connectOrCreate?: Enumerable<gd_fileCreateOrConnectWithoutWorkflowInput>
    createMany?: gd_fileCreateManyWorkflowInputEnvelope
    connect?: Enumerable<gd_fileWhereUniqueInput>
  }

  export type gd_projectUpdateOneWithoutWorkflowsInput = {
    create?: XOR<gd_projectCreateWithoutWorkflowsInput, gd_projectUncheckedCreateWithoutWorkflowsInput>
    connectOrCreate?: gd_projectCreateOrConnectWithoutWorkflowsInput
    upsert?: gd_projectUpsertWithoutWorkflowsInput
    disconnect?: boolean
    delete?: boolean
    connect?: gd_projectWhereUniqueInput
    update?: XOR<gd_projectUpdateWithoutWorkflowsInput, gd_projectUncheckedUpdateWithoutWorkflowsInput>
  }

  export type gd_logUpdateManyWithoutWorkflowInput = {
    create?: XOR<Enumerable<gd_logCreateWithoutWorkflowInput>, Enumerable<gd_logUncheckedCreateWithoutWorkflowInput>>
    connectOrCreate?: Enumerable<gd_logCreateOrConnectWithoutWorkflowInput>
    upsert?: Enumerable<gd_logUpsertWithWhereUniqueWithoutWorkflowInput>
    createMany?: gd_logCreateManyWorkflowInputEnvelope
    set?: Enumerable<gd_logWhereUniqueInput>
    disconnect?: Enumerable<gd_logWhereUniqueInput>
    delete?: Enumerable<gd_logWhereUniqueInput>
    connect?: Enumerable<gd_logWhereUniqueInput>
    update?: Enumerable<gd_logUpdateWithWhereUniqueWithoutWorkflowInput>
    updateMany?: Enumerable<gd_logUpdateManyWithWhereWithoutWorkflowInput>
    deleteMany?: Enumerable<gd_logScalarWhereInput>
  }

  export type gd_fileUpdateManyWithoutWorkflowInput = {
    create?: XOR<Enumerable<gd_fileCreateWithoutWorkflowInput>, Enumerable<gd_fileUncheckedCreateWithoutWorkflowInput>>
    connectOrCreate?: Enumerable<gd_fileCreateOrConnectWithoutWorkflowInput>
    upsert?: Enumerable<gd_fileUpsertWithWhereUniqueWithoutWorkflowInput>
    createMany?: gd_fileCreateManyWorkflowInputEnvelope
    set?: Enumerable<gd_fileWhereUniqueInput>
    disconnect?: Enumerable<gd_fileWhereUniqueInput>
    delete?: Enumerable<gd_fileWhereUniqueInput>
    connect?: Enumerable<gd_fileWhereUniqueInput>
    update?: Enumerable<gd_fileUpdateWithWhereUniqueWithoutWorkflowInput>
    updateMany?: Enumerable<gd_fileUpdateManyWithWhereWithoutWorkflowInput>
    deleteMany?: Enumerable<gd_fileScalarWhereInput>
  }

  export type gd_logUncheckedUpdateManyWithoutWorkflowInput = {
    create?: XOR<Enumerable<gd_logCreateWithoutWorkflowInput>, Enumerable<gd_logUncheckedCreateWithoutWorkflowInput>>
    connectOrCreate?: Enumerable<gd_logCreateOrConnectWithoutWorkflowInput>
    upsert?: Enumerable<gd_logUpsertWithWhereUniqueWithoutWorkflowInput>
    createMany?: gd_logCreateManyWorkflowInputEnvelope
    set?: Enumerable<gd_logWhereUniqueInput>
    disconnect?: Enumerable<gd_logWhereUniqueInput>
    delete?: Enumerable<gd_logWhereUniqueInput>
    connect?: Enumerable<gd_logWhereUniqueInput>
    update?: Enumerable<gd_logUpdateWithWhereUniqueWithoutWorkflowInput>
    updateMany?: Enumerable<gd_logUpdateManyWithWhereWithoutWorkflowInput>
    deleteMany?: Enumerable<gd_logScalarWhereInput>
  }

  export type gd_fileUncheckedUpdateManyWithoutWorkflowInput = {
    create?: XOR<Enumerable<gd_fileCreateWithoutWorkflowInput>, Enumerable<gd_fileUncheckedCreateWithoutWorkflowInput>>
    connectOrCreate?: Enumerable<gd_fileCreateOrConnectWithoutWorkflowInput>
    upsert?: Enumerable<gd_fileUpsertWithWhereUniqueWithoutWorkflowInput>
    createMany?: gd_fileCreateManyWorkflowInputEnvelope
    set?: Enumerable<gd_fileWhereUniqueInput>
    disconnect?: Enumerable<gd_fileWhereUniqueInput>
    delete?: Enumerable<gd_fileWhereUniqueInput>
    connect?: Enumerable<gd_fileWhereUniqueInput>
    update?: Enumerable<gd_fileUpdateWithWhereUniqueWithoutWorkflowInput>
    updateMany?: Enumerable<gd_fileUpdateManyWithWhereWithoutWorkflowInput>
    deleteMany?: Enumerable<gd_fileScalarWhereInput>
  }

  export type gd_projectCreateNestedOneWithoutFilesInput = {
    create?: XOR<gd_projectCreateWithoutFilesInput, gd_projectUncheckedCreateWithoutFilesInput>
    connectOrCreate?: gd_projectCreateOrConnectWithoutFilesInput
    connect?: gd_projectWhereUniqueInput
  }

  export type gd_workflowCreateNestedOneWithoutFilesInput = {
    create?: XOR<gd_workflowCreateWithoutFilesInput, gd_workflowUncheckedCreateWithoutFilesInput>
    connectOrCreate?: gd_workflowCreateOrConnectWithoutFilesInput
    connect?: gd_workflowWhereUniqueInput
  }

  export type gd_projectUpdateOneWithoutFilesInput = {
    create?: XOR<gd_projectCreateWithoutFilesInput, gd_projectUncheckedCreateWithoutFilesInput>
    connectOrCreate?: gd_projectCreateOrConnectWithoutFilesInput
    upsert?: gd_projectUpsertWithoutFilesInput
    disconnect?: boolean
    delete?: boolean
    connect?: gd_projectWhereUniqueInput
    update?: XOR<gd_projectUpdateWithoutFilesInput, gd_projectUncheckedUpdateWithoutFilesInput>
  }

  export type gd_workflowUpdateOneWithoutFilesInput = {
    create?: XOR<gd_workflowCreateWithoutFilesInput, gd_workflowUncheckedCreateWithoutFilesInput>
    connectOrCreate?: gd_workflowCreateOrConnectWithoutFilesInput
    upsert?: gd_workflowUpsertWithoutFilesInput
    disconnect?: boolean
    delete?: boolean
    connect?: gd_workflowWhereUniqueInput
    update?: XOR<gd_workflowUpdateWithoutFilesInput, gd_workflowUncheckedUpdateWithoutFilesInput>
  }

  export type gd_workflowCreateNestedOneWithoutLogsInput = {
    create?: XOR<gd_workflowCreateWithoutLogsInput, gd_workflowUncheckedCreateWithoutLogsInput>
    connectOrCreate?: gd_workflowCreateOrConnectWithoutLogsInput
    connect?: gd_workflowWhereUniqueInput
  }

  export type gd_workflowUpdateOneWithoutLogsInput = {
    create?: XOR<gd_workflowCreateWithoutLogsInput, gd_workflowUncheckedCreateWithoutLogsInput>
    connectOrCreate?: gd_workflowCreateOrConnectWithoutLogsInput
    upsert?: gd_workflowUpsertWithoutLogsInput
    disconnect?: boolean
    delete?: boolean
    connect?: gd_workflowWhereUniqueInput
    update?: XOR<gd_workflowUpdateWithoutLogsInput, gd_workflowUncheckedUpdateWithoutLogsInput>
  }

  export type gd_datalake_folderCreateNestedOneWithoutFilesInput = {
    create?: XOR<gd_datalake_folderCreateWithoutFilesInput, gd_datalake_folderUncheckedCreateWithoutFilesInput>
    connectOrCreate?: gd_datalake_folderCreateOrConnectWithoutFilesInput
    connect?: gd_datalake_folderWhereUniqueInput
  }

  export type gd_datalake_folderUpdateOneWithoutFilesInput = {
    create?: XOR<gd_datalake_folderCreateWithoutFilesInput, gd_datalake_folderUncheckedCreateWithoutFilesInput>
    connectOrCreate?: gd_datalake_folderCreateOrConnectWithoutFilesInput
    upsert?: gd_datalake_folderUpsertWithoutFilesInput
    disconnect?: boolean
    delete?: boolean
    connect?: gd_datalake_folderWhereUniqueInput
    update?: XOR<gd_datalake_folderUpdateWithoutFilesInput, gd_datalake_folderUncheckedUpdateWithoutFilesInput>
  }

  export type gd_datalake_fileCreateNestedManyWithoutFolderInput = {
    create?: XOR<Enumerable<gd_datalake_fileCreateWithoutFolderInput>, Enumerable<gd_datalake_fileUncheckedCreateWithoutFolderInput>>
    connectOrCreate?: Enumerable<gd_datalake_fileCreateOrConnectWithoutFolderInput>
    createMany?: gd_datalake_fileCreateManyFolderInputEnvelope
    connect?: Enumerable<gd_datalake_fileWhereUniqueInput>
  }

  export type gd_datalake_fileUncheckedCreateNestedManyWithoutFolderInput = {
    create?: XOR<Enumerable<gd_datalake_fileCreateWithoutFolderInput>, Enumerable<gd_datalake_fileUncheckedCreateWithoutFolderInput>>
    connectOrCreate?: Enumerable<gd_datalake_fileCreateOrConnectWithoutFolderInput>
    createMany?: gd_datalake_fileCreateManyFolderInputEnvelope
    connect?: Enumerable<gd_datalake_fileWhereUniqueInput>
  }

  export type gd_datalake_fileUpdateManyWithoutFolderInput = {
    create?: XOR<Enumerable<gd_datalake_fileCreateWithoutFolderInput>, Enumerable<gd_datalake_fileUncheckedCreateWithoutFolderInput>>
    connectOrCreate?: Enumerable<gd_datalake_fileCreateOrConnectWithoutFolderInput>
    upsert?: Enumerable<gd_datalake_fileUpsertWithWhereUniqueWithoutFolderInput>
    createMany?: gd_datalake_fileCreateManyFolderInputEnvelope
    set?: Enumerable<gd_datalake_fileWhereUniqueInput>
    disconnect?: Enumerable<gd_datalake_fileWhereUniqueInput>
    delete?: Enumerable<gd_datalake_fileWhereUniqueInput>
    connect?: Enumerable<gd_datalake_fileWhereUniqueInput>
    update?: Enumerable<gd_datalake_fileUpdateWithWhereUniqueWithoutFolderInput>
    updateMany?: Enumerable<gd_datalake_fileUpdateManyWithWhereWithoutFolderInput>
    deleteMany?: Enumerable<gd_datalake_fileScalarWhereInput>
  }

  export type gd_datalake_fileUncheckedUpdateManyWithoutFolderInput = {
    create?: XOR<Enumerable<gd_datalake_fileCreateWithoutFolderInput>, Enumerable<gd_datalake_fileUncheckedCreateWithoutFolderInput>>
    connectOrCreate?: Enumerable<gd_datalake_fileCreateOrConnectWithoutFolderInput>
    upsert?: Enumerable<gd_datalake_fileUpsertWithWhereUniqueWithoutFolderInput>
    createMany?: gd_datalake_fileCreateManyFolderInputEnvelope
    set?: Enumerable<gd_datalake_fileWhereUniqueInput>
    disconnect?: Enumerable<gd_datalake_fileWhereUniqueInput>
    delete?: Enumerable<gd_datalake_fileWhereUniqueInput>
    connect?: Enumerable<gd_datalake_fileWhereUniqueInput>
    update?: Enumerable<gd_datalake_fileUpdateWithWhereUniqueWithoutFolderInput>
    updateMany?: Enumerable<gd_datalake_fileUpdateManyWithWhereWithoutFolderInput>
    deleteMany?: Enumerable<gd_datalake_fileScalarWhereInput>
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedIntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type NestedFloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type NestedStringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type NestedStringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type NestedIntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type NestedFloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type gd_tokenCreateWithoutUserInput = {
    access_token: string
    referesh_token?: string | null
    token_create_at?: string | null
    token_expired_at?: string | null
  }

  export type gd_tokenUncheckedCreateWithoutUserInput = {
    access_token: string
    referesh_token?: string | null
    token_create_at?: string | null
    token_expired_at?: string | null
  }

  export type gd_tokenCreateOrConnectWithoutUserInput = {
    where: gd_tokenWhereUniqueInput
    create: XOR<gd_tokenCreateWithoutUserInput, gd_tokenUncheckedCreateWithoutUserInput>
  }

  export type gd_tokenCreateManyUserInputEnvelope = {
    data: Enumerable<gd_tokenCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type gd_user_roleCreateWithoutUserInput = {
    user_role_create_date?: Date | string | null
    user_role_update_date?: Date | string | null
    user_role_create_by?: number | null
    user_role_update_by?: number | null
    role?: gd_roleCreateNestedOneWithoutUser_roleInput
  }

  export type gd_user_roleUncheckedCreateWithoutUserInput = {
    role_id: number
    user_role_create_date?: Date | string | null
    user_role_update_date?: Date | string | null
    user_role_create_by?: number | null
    user_role_update_by?: number | null
  }

  export type gd_user_roleCreateOrConnectWithoutUserInput = {
    where: gd_user_roleWhereUniqueInput
    create: XOR<gd_user_roleCreateWithoutUserInput, gd_user_roleUncheckedCreateWithoutUserInput>
  }

  export type gd_user_roleCreateManyUserInputEnvelope = {
    data: Enumerable<gd_user_roleCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type gd_user_projectCreateWithoutUserInput = {
    user_project_create_date?: Date | string | null
    user_project_update_date?: Date | string | null
    user_project_create_by?: number | null
    user_project_update_by?: number | null
    project: gd_projectCreateNestedOneWithoutUser_projectsInput
  }

  export type gd_user_projectUncheckedCreateWithoutUserInput = {
    project_id: number
    user_project_create_date?: Date | string | null
    user_project_update_date?: Date | string | null
    user_project_create_by?: number | null
    user_project_update_by?: number | null
  }

  export type gd_user_projectCreateOrConnectWithoutUserInput = {
    where: gd_user_projectWhereUniqueInput
    create: XOR<gd_user_projectCreateWithoutUserInput, gd_user_projectUncheckedCreateWithoutUserInput>
  }

  export type gd_user_projectCreateManyUserInputEnvelope = {
    data: Enumerable<gd_user_projectCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type gd_tokenUpsertWithWhereUniqueWithoutUserInput = {
    where: gd_tokenWhereUniqueInput
    update: XOR<gd_tokenUpdateWithoutUserInput, gd_tokenUncheckedUpdateWithoutUserInput>
    create: XOR<gd_tokenCreateWithoutUserInput, gd_tokenUncheckedCreateWithoutUserInput>
  }

  export type gd_tokenUpdateWithWhereUniqueWithoutUserInput = {
    where: gd_tokenWhereUniqueInput
    data: XOR<gd_tokenUpdateWithoutUserInput, gd_tokenUncheckedUpdateWithoutUserInput>
  }

  export type gd_tokenUpdateManyWithWhereWithoutUserInput = {
    where: gd_tokenScalarWhereInput
    data: XOR<gd_tokenUpdateManyMutationInput, gd_tokenUncheckedUpdateManyWithoutUser_tokensInput>
  }

  export type gd_tokenScalarWhereInput = {
    AND?: Enumerable<gd_tokenScalarWhereInput>
    OR?: Enumerable<gd_tokenScalarWhereInput>
    NOT?: Enumerable<gd_tokenScalarWhereInput>
    access_token?: StringFilter | string
    user_id?: IntFilter | number
    referesh_token?: StringNullableFilter | string | null
    token_create_at?: StringNullableFilter | string | null
    token_expired_at?: StringNullableFilter | string | null
  }

  export type gd_user_roleUpsertWithWhereUniqueWithoutUserInput = {
    where: gd_user_roleWhereUniqueInput
    update: XOR<gd_user_roleUpdateWithoutUserInput, gd_user_roleUncheckedUpdateWithoutUserInput>
    create: XOR<gd_user_roleCreateWithoutUserInput, gd_user_roleUncheckedCreateWithoutUserInput>
  }

  export type gd_user_roleUpdateWithWhereUniqueWithoutUserInput = {
    where: gd_user_roleWhereUniqueInput
    data: XOR<gd_user_roleUpdateWithoutUserInput, gd_user_roleUncheckedUpdateWithoutUserInput>
  }

  export type gd_user_roleUpdateManyWithWhereWithoutUserInput = {
    where: gd_user_roleScalarWhereInput
    data: XOR<gd_user_roleUpdateManyMutationInput, gd_user_roleUncheckedUpdateManyWithoutUser_rolesInput>
  }

  export type gd_user_roleScalarWhereInput = {
    AND?: Enumerable<gd_user_roleScalarWhereInput>
    OR?: Enumerable<gd_user_roleScalarWhereInput>
    NOT?: Enumerable<gd_user_roleScalarWhereInput>
    user_id?: IntFilter | number
    role_id?: IntFilter | number
    user_role_create_date?: DateTimeNullableFilter | Date | string | null
    user_role_update_date?: DateTimeNullableFilter | Date | string | null
    user_role_create_by?: IntNullableFilter | number | null
    user_role_update_by?: IntNullableFilter | number | null
  }

  export type gd_user_projectUpsertWithWhereUniqueWithoutUserInput = {
    where: gd_user_projectWhereUniqueInput
    update: XOR<gd_user_projectUpdateWithoutUserInput, gd_user_projectUncheckedUpdateWithoutUserInput>
    create: XOR<gd_user_projectCreateWithoutUserInput, gd_user_projectUncheckedCreateWithoutUserInput>
  }

  export type gd_user_projectUpdateWithWhereUniqueWithoutUserInput = {
    where: gd_user_projectWhereUniqueInput
    data: XOR<gd_user_projectUpdateWithoutUserInput, gd_user_projectUncheckedUpdateWithoutUserInput>
  }

  export type gd_user_projectUpdateManyWithWhereWithoutUserInput = {
    where: gd_user_projectScalarWhereInput
    data: XOR<gd_user_projectUpdateManyMutationInput, gd_user_projectUncheckedUpdateManyWithoutUser_projectsInput>
  }

  export type gd_user_projectScalarWhereInput = {
    AND?: Enumerable<gd_user_projectScalarWhereInput>
    OR?: Enumerable<gd_user_projectScalarWhereInput>
    NOT?: Enumerable<gd_user_projectScalarWhereInput>
    project_id?: IntFilter | number
    user_id?: IntFilter | number
    user_project_create_date?: DateTimeNullableFilter | Date | string | null
    user_project_update_date?: DateTimeNullableFilter | Date | string | null
    user_project_create_by?: IntNullableFilter | number | null
    user_project_update_by?: IntNullableFilter | number | null
  }

  export type gd_userCreateWithoutUser_tokensInput = {
    user_email: string
    user_password?: string | null
    user_first_name?: string | null
    user_last_name?: string | null
    user_status?: number | null
    user_create_at?: Date | string | null
    user_update_at?: Date | string | null
    user_create_by?: number | null
    user_update_by?: number | null
    user_deleted?: number | null
    user_deleted_at?: Date | string | null
    user_roles?: gd_user_roleCreateNestedManyWithoutUserInput
    user_projects?: gd_user_projectCreateNestedManyWithoutUserInput
  }

  export type gd_userUncheckedCreateWithoutUser_tokensInput = {
    user_id?: number
    user_email: string
    user_password?: string | null
    user_first_name?: string | null
    user_last_name?: string | null
    user_status?: number | null
    user_create_at?: Date | string | null
    user_update_at?: Date | string | null
    user_create_by?: number | null
    user_update_by?: number | null
    user_deleted?: number | null
    user_deleted_at?: Date | string | null
    user_roles?: gd_user_roleUncheckedCreateNestedManyWithoutUserInput
    user_projects?: gd_user_projectUncheckedCreateNestedManyWithoutUserInput
  }

  export type gd_userCreateOrConnectWithoutUser_tokensInput = {
    where: gd_userWhereUniqueInput
    create: XOR<gd_userCreateWithoutUser_tokensInput, gd_userUncheckedCreateWithoutUser_tokensInput>
  }

  export type gd_userUpsertWithoutUser_tokensInput = {
    update: XOR<gd_userUpdateWithoutUser_tokensInput, gd_userUncheckedUpdateWithoutUser_tokensInput>
    create: XOR<gd_userCreateWithoutUser_tokensInput, gd_userUncheckedCreateWithoutUser_tokensInput>
  }

  export type gd_userUpdateWithoutUser_tokensInput = {
    user_email?: StringFieldUpdateOperationsInput | string
    user_password?: NullableStringFieldUpdateOperationsInput | string | null
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: NullableIntFieldUpdateOperationsInput | number | null
    user_create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_roles?: gd_user_roleUpdateManyWithoutUserInput
    user_projects?: gd_user_projectUpdateManyWithoutUserInput
  }

  export type gd_userUncheckedUpdateWithoutUser_tokensInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_password?: NullableStringFieldUpdateOperationsInput | string | null
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: NullableIntFieldUpdateOperationsInput | number | null
    user_create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_roles?: gd_user_roleUncheckedUpdateManyWithoutUserInput
    user_projects?: gd_user_projectUncheckedUpdateManyWithoutUserInput
  }

  export type gd_user_roleCreateWithoutRoleInput = {
    user_role_create_date?: Date | string | null
    user_role_update_date?: Date | string | null
    user_role_create_by?: number | null
    user_role_update_by?: number | null
    user?: gd_userCreateNestedOneWithoutUser_rolesInput
  }

  export type gd_user_roleUncheckedCreateWithoutRoleInput = {
    user_id: number
    user_role_create_date?: Date | string | null
    user_role_update_date?: Date | string | null
    user_role_create_by?: number | null
    user_role_update_by?: number | null
  }

  export type gd_user_roleCreateOrConnectWithoutRoleInput = {
    where: gd_user_roleWhereUniqueInput
    create: XOR<gd_user_roleCreateWithoutRoleInput, gd_user_roleUncheckedCreateWithoutRoleInput>
  }

  export type gd_user_roleCreateManyRoleInputEnvelope = {
    data: Enumerable<gd_user_roleCreateManyRoleInput>
    skipDuplicates?: boolean
  }

  export type gd_user_roleUpsertWithWhereUniqueWithoutRoleInput = {
    where: gd_user_roleWhereUniqueInput
    update: XOR<gd_user_roleUpdateWithoutRoleInput, gd_user_roleUncheckedUpdateWithoutRoleInput>
    create: XOR<gd_user_roleCreateWithoutRoleInput, gd_user_roleUncheckedCreateWithoutRoleInput>
  }

  export type gd_user_roleUpdateWithWhereUniqueWithoutRoleInput = {
    where: gd_user_roleWhereUniqueInput
    data: XOR<gd_user_roleUpdateWithoutRoleInput, gd_user_roleUncheckedUpdateWithoutRoleInput>
  }

  export type gd_user_roleUpdateManyWithWhereWithoutRoleInput = {
    where: gd_user_roleScalarWhereInput
    data: XOR<gd_user_roleUpdateManyMutationInput, gd_user_roleUncheckedUpdateManyWithoutUser_roleInput>
  }

  export type gd_userCreateWithoutUser_rolesInput = {
    user_email: string
    user_password?: string | null
    user_first_name?: string | null
    user_last_name?: string | null
    user_status?: number | null
    user_create_at?: Date | string | null
    user_update_at?: Date | string | null
    user_create_by?: number | null
    user_update_by?: number | null
    user_deleted?: number | null
    user_deleted_at?: Date | string | null
    user_tokens?: gd_tokenCreateNestedManyWithoutUserInput
    user_projects?: gd_user_projectCreateNestedManyWithoutUserInput
  }

  export type gd_userUncheckedCreateWithoutUser_rolesInput = {
    user_id?: number
    user_email: string
    user_password?: string | null
    user_first_name?: string | null
    user_last_name?: string | null
    user_status?: number | null
    user_create_at?: Date | string | null
    user_update_at?: Date | string | null
    user_create_by?: number | null
    user_update_by?: number | null
    user_deleted?: number | null
    user_deleted_at?: Date | string | null
    user_tokens?: gd_tokenUncheckedCreateNestedManyWithoutUserInput
    user_projects?: gd_user_projectUncheckedCreateNestedManyWithoutUserInput
  }

  export type gd_userCreateOrConnectWithoutUser_rolesInput = {
    where: gd_userWhereUniqueInput
    create: XOR<gd_userCreateWithoutUser_rolesInput, gd_userUncheckedCreateWithoutUser_rolesInput>
  }

  export type gd_roleCreateWithoutUser_roleInput = {
    role_name: string
    role_create_date?: Date | string | null
    role_update_date?: Date | string | null
    role_create_by?: number | null
    role_update_by?: number | null
  }

  export type gd_roleUncheckedCreateWithoutUser_roleInput = {
    role_id?: number
    role_name: string
    role_create_date?: Date | string | null
    role_update_date?: Date | string | null
    role_create_by?: number | null
    role_update_by?: number | null
  }

  export type gd_roleCreateOrConnectWithoutUser_roleInput = {
    where: gd_roleWhereUniqueInput
    create: XOR<gd_roleCreateWithoutUser_roleInput, gd_roleUncheckedCreateWithoutUser_roleInput>
  }

  export type gd_userUpsertWithoutUser_rolesInput = {
    update: XOR<gd_userUpdateWithoutUser_rolesInput, gd_userUncheckedUpdateWithoutUser_rolesInput>
    create: XOR<gd_userCreateWithoutUser_rolesInput, gd_userUncheckedCreateWithoutUser_rolesInput>
  }

  export type gd_userUpdateWithoutUser_rolesInput = {
    user_email?: StringFieldUpdateOperationsInput | string
    user_password?: NullableStringFieldUpdateOperationsInput | string | null
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: NullableIntFieldUpdateOperationsInput | number | null
    user_create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_tokens?: gd_tokenUpdateManyWithoutUserInput
    user_projects?: gd_user_projectUpdateManyWithoutUserInput
  }

  export type gd_userUncheckedUpdateWithoutUser_rolesInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_password?: NullableStringFieldUpdateOperationsInput | string | null
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: NullableIntFieldUpdateOperationsInput | number | null
    user_create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_tokens?: gd_tokenUncheckedUpdateManyWithoutUserInput
    user_projects?: gd_user_projectUncheckedUpdateManyWithoutUserInput
  }

  export type gd_roleUpsertWithoutUser_roleInput = {
    update: XOR<gd_roleUpdateWithoutUser_roleInput, gd_roleUncheckedUpdateWithoutUser_roleInput>
    create: XOR<gd_roleCreateWithoutUser_roleInput, gd_roleUncheckedCreateWithoutUser_roleInput>
  }

  export type gd_roleUpdateWithoutUser_roleInput = {
    role_name?: StringFieldUpdateOperationsInput | string
    role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_roleUncheckedUpdateWithoutUser_roleInput = {
    role_id?: IntFieldUpdateOperationsInput | number
    role_name?: StringFieldUpdateOperationsInput | string
    role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_user_projectCreateWithoutProjectInput = {
    user_project_create_date?: Date | string | null
    user_project_update_date?: Date | string | null
    user_project_create_by?: number | null
    user_project_update_by?: number | null
    user?: gd_userCreateNestedOneWithoutUser_projectsInput
  }

  export type gd_user_projectUncheckedCreateWithoutProjectInput = {
    user_id: number
    user_project_create_date?: Date | string | null
    user_project_update_date?: Date | string | null
    user_project_create_by?: number | null
    user_project_update_by?: number | null
  }

  export type gd_user_projectCreateOrConnectWithoutProjectInput = {
    where: gd_user_projectWhereUniqueInput
    create: XOR<gd_user_projectCreateWithoutProjectInput, gd_user_projectUncheckedCreateWithoutProjectInput>
  }

  export type gd_user_projectCreateManyProjectInputEnvelope = {
    data: Enumerable<gd_user_projectCreateManyProjectInput>
    skipDuplicates?: boolean
  }

  export type gd_workflowCreateWithoutProjectInput = {
    workflow_name: string
    workflow_create_date?: Date | string | null
    workflow_update_date?: Date | string | null
    workflow_create_by?: number | null
    workflow_update_by?: number | null
    workflow_delete?: number | null
    workflow_delete_at?: Date | string | null
    logs?: gd_logCreateNestedManyWithoutWorkflowInput
    files?: gd_fileCreateNestedManyWithoutWorkflowInput
  }

  export type gd_workflowUncheckedCreateWithoutProjectInput = {
    workflow_id?: number
    workflow_name: string
    workflow_create_date?: Date | string | null
    workflow_update_date?: Date | string | null
    workflow_create_by?: number | null
    workflow_update_by?: number | null
    workflow_delete?: number | null
    workflow_delete_at?: Date | string | null
    logs?: gd_logUncheckedCreateNestedManyWithoutWorkflowInput
    files?: gd_fileUncheckedCreateNestedManyWithoutWorkflowInput
  }

  export type gd_workflowCreateOrConnectWithoutProjectInput = {
    where: gd_workflowWhereUniqueInput
    create: XOR<gd_workflowCreateWithoutProjectInput, gd_workflowUncheckedCreateWithoutProjectInput>
  }

  export type gd_workflowCreateManyProjectInputEnvelope = {
    data: Enumerable<gd_workflowCreateManyProjectInput>
    skipDuplicates?: boolean
  }

  export type gd_fileCreateWithoutProjectInput = {
    file_path?: string | null
    file_create_date?: Date | string | null
    file_update_date?: Date | string | null
    file_create_by?: number | null
    file_update_by?: number | null
    file_deleted?: number | null
    file_deleted_at?: Date | string | null
    workflow?: gd_workflowCreateNestedOneWithoutFilesInput
  }

  export type gd_fileUncheckedCreateWithoutProjectInput = {
    file_id?: number
    file_path?: string | null
    workflow_id?: number | null
    file_create_date?: Date | string | null
    file_update_date?: Date | string | null
    file_create_by?: number | null
    file_update_by?: number | null
    file_deleted?: number | null
    file_deleted_at?: Date | string | null
  }

  export type gd_fileCreateOrConnectWithoutProjectInput = {
    where: gd_fileWhereUniqueInput
    create: XOR<gd_fileCreateWithoutProjectInput, gd_fileUncheckedCreateWithoutProjectInput>
  }

  export type gd_fileCreateManyProjectInputEnvelope = {
    data: Enumerable<gd_fileCreateManyProjectInput>
    skipDuplicates?: boolean
  }

  export type gd_user_projectUpsertWithWhereUniqueWithoutProjectInput = {
    where: gd_user_projectWhereUniqueInput
    update: XOR<gd_user_projectUpdateWithoutProjectInput, gd_user_projectUncheckedUpdateWithoutProjectInput>
    create: XOR<gd_user_projectCreateWithoutProjectInput, gd_user_projectUncheckedCreateWithoutProjectInput>
  }

  export type gd_user_projectUpdateWithWhereUniqueWithoutProjectInput = {
    where: gd_user_projectWhereUniqueInput
    data: XOR<gd_user_projectUpdateWithoutProjectInput, gd_user_projectUncheckedUpdateWithoutProjectInput>
  }

  export type gd_user_projectUpdateManyWithWhereWithoutProjectInput = {
    where: gd_user_projectScalarWhereInput
    data: XOR<gd_user_projectUpdateManyMutationInput, gd_user_projectUncheckedUpdateManyWithoutUser_projectsInput>
  }

  export type gd_workflowUpsertWithWhereUniqueWithoutProjectInput = {
    where: gd_workflowWhereUniqueInput
    update: XOR<gd_workflowUpdateWithoutProjectInput, gd_workflowUncheckedUpdateWithoutProjectInput>
    create: XOR<gd_workflowCreateWithoutProjectInput, gd_workflowUncheckedCreateWithoutProjectInput>
  }

  export type gd_workflowUpdateWithWhereUniqueWithoutProjectInput = {
    where: gd_workflowWhereUniqueInput
    data: XOR<gd_workflowUpdateWithoutProjectInput, gd_workflowUncheckedUpdateWithoutProjectInput>
  }

  export type gd_workflowUpdateManyWithWhereWithoutProjectInput = {
    where: gd_workflowScalarWhereInput
    data: XOR<gd_workflowUpdateManyMutationInput, gd_workflowUncheckedUpdateManyWithoutWorkflowsInput>
  }

  export type gd_workflowScalarWhereInput = {
    AND?: Enumerable<gd_workflowScalarWhereInput>
    OR?: Enumerable<gd_workflowScalarWhereInput>
    NOT?: Enumerable<gd_workflowScalarWhereInput>
    workflow_id?: IntFilter | number
    workflow_name?: StringFilter | string
    project_id?: IntNullableFilter | number | null
    workflow_create_date?: DateTimeNullableFilter | Date | string | null
    workflow_update_date?: DateTimeNullableFilter | Date | string | null
    workflow_create_by?: IntNullableFilter | number | null
    workflow_update_by?: IntNullableFilter | number | null
    workflow_delete?: IntNullableFilter | number | null
    workflow_delete_at?: DateTimeNullableFilter | Date | string | null
  }

  export type gd_fileUpsertWithWhereUniqueWithoutProjectInput = {
    where: gd_fileWhereUniqueInput
    update: XOR<gd_fileUpdateWithoutProjectInput, gd_fileUncheckedUpdateWithoutProjectInput>
    create: XOR<gd_fileCreateWithoutProjectInput, gd_fileUncheckedCreateWithoutProjectInput>
  }

  export type gd_fileUpdateWithWhereUniqueWithoutProjectInput = {
    where: gd_fileWhereUniqueInput
    data: XOR<gd_fileUpdateWithoutProjectInput, gd_fileUncheckedUpdateWithoutProjectInput>
  }

  export type gd_fileUpdateManyWithWhereWithoutProjectInput = {
    where: gd_fileScalarWhereInput
    data: XOR<gd_fileUpdateManyMutationInput, gd_fileUncheckedUpdateManyWithoutFilesInput>
  }

  export type gd_fileScalarWhereInput = {
    AND?: Enumerable<gd_fileScalarWhereInput>
    OR?: Enumerable<gd_fileScalarWhereInput>
    NOT?: Enumerable<gd_fileScalarWhereInput>
    file_id?: IntFilter | number
    file_path?: StringNullableFilter | string | null
    project_id?: IntNullableFilter | number | null
    workflow_id?: IntNullableFilter | number | null
    file_create_date?: DateTimeNullableFilter | Date | string | null
    file_update_date?: DateTimeNullableFilter | Date | string | null
    file_create_by?: IntNullableFilter | number | null
    file_update_by?: IntNullableFilter | number | null
    file_deleted?: IntNullableFilter | number | null
    file_deleted_at?: DateTimeNullableFilter | Date | string | null
  }

  export type gd_userCreateWithoutUser_projectsInput = {
    user_email: string
    user_password?: string | null
    user_first_name?: string | null
    user_last_name?: string | null
    user_status?: number | null
    user_create_at?: Date | string | null
    user_update_at?: Date | string | null
    user_create_by?: number | null
    user_update_by?: number | null
    user_deleted?: number | null
    user_deleted_at?: Date | string | null
    user_tokens?: gd_tokenCreateNestedManyWithoutUserInput
    user_roles?: gd_user_roleCreateNestedManyWithoutUserInput
  }

  export type gd_userUncheckedCreateWithoutUser_projectsInput = {
    user_id?: number
    user_email: string
    user_password?: string | null
    user_first_name?: string | null
    user_last_name?: string | null
    user_status?: number | null
    user_create_at?: Date | string | null
    user_update_at?: Date | string | null
    user_create_by?: number | null
    user_update_by?: number | null
    user_deleted?: number | null
    user_deleted_at?: Date | string | null
    user_tokens?: gd_tokenUncheckedCreateNestedManyWithoutUserInput
    user_roles?: gd_user_roleUncheckedCreateNestedManyWithoutUserInput
  }

  export type gd_userCreateOrConnectWithoutUser_projectsInput = {
    where: gd_userWhereUniqueInput
    create: XOR<gd_userCreateWithoutUser_projectsInput, gd_userUncheckedCreateWithoutUser_projectsInput>
  }

  export type gd_projectCreateWithoutUser_projectsInput = {
    project_name?: string | null
    project_revision?: string | null
    project_create_date?: Date | string | null
    project_update_date?: Date | string | null
    project_create_by?: number | null
    project_update_by?: number | null
    project_deleted?: number | null
    project_deleted_at?: Date | string | null
    workflows?: gd_workflowCreateNestedManyWithoutProjectInput
    files?: gd_fileCreateNestedManyWithoutProjectInput
  }

  export type gd_projectUncheckedCreateWithoutUser_projectsInput = {
    project_id?: number
    project_name?: string | null
    project_revision?: string | null
    project_create_date?: Date | string | null
    project_update_date?: Date | string | null
    project_create_by?: number | null
    project_update_by?: number | null
    project_deleted?: number | null
    project_deleted_at?: Date | string | null
    workflows?: gd_workflowUncheckedCreateNestedManyWithoutProjectInput
    files?: gd_fileUncheckedCreateNestedManyWithoutProjectInput
  }

  export type gd_projectCreateOrConnectWithoutUser_projectsInput = {
    where: gd_projectWhereUniqueInput
    create: XOR<gd_projectCreateWithoutUser_projectsInput, gd_projectUncheckedCreateWithoutUser_projectsInput>
  }

  export type gd_userUpsertWithoutUser_projectsInput = {
    update: XOR<gd_userUpdateWithoutUser_projectsInput, gd_userUncheckedUpdateWithoutUser_projectsInput>
    create: XOR<gd_userCreateWithoutUser_projectsInput, gd_userUncheckedCreateWithoutUser_projectsInput>
  }

  export type gd_userUpdateWithoutUser_projectsInput = {
    user_email?: StringFieldUpdateOperationsInput | string
    user_password?: NullableStringFieldUpdateOperationsInput | string | null
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: NullableIntFieldUpdateOperationsInput | number | null
    user_create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_tokens?: gd_tokenUpdateManyWithoutUserInput
    user_roles?: gd_user_roleUpdateManyWithoutUserInput
  }

  export type gd_userUncheckedUpdateWithoutUser_projectsInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_email?: StringFieldUpdateOperationsInput | string
    user_password?: NullableStringFieldUpdateOperationsInput | string | null
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_status?: NullableIntFieldUpdateOperationsInput | number | null
    user_create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    user_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_tokens?: gd_tokenUncheckedUpdateManyWithoutUserInput
    user_roles?: gd_user_roleUncheckedUpdateManyWithoutUserInput
  }

  export type gd_projectUpsertWithoutUser_projectsInput = {
    update: XOR<gd_projectUpdateWithoutUser_projectsInput, gd_projectUncheckedUpdateWithoutUser_projectsInput>
    create: XOR<gd_projectCreateWithoutUser_projectsInput, gd_projectUncheckedCreateWithoutUser_projectsInput>
  }

  export type gd_projectUpdateWithoutUser_projectsInput = {
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    project_revision?: NullableStringFieldUpdateOperationsInput | string | null
    project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflows?: gd_workflowUpdateManyWithoutProjectInput
    files?: gd_fileUpdateManyWithoutProjectInput
  }

  export type gd_projectUncheckedUpdateWithoutUser_projectsInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    project_revision?: NullableStringFieldUpdateOperationsInput | string | null
    project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflows?: gd_workflowUncheckedUpdateManyWithoutProjectInput
    files?: gd_fileUncheckedUpdateManyWithoutProjectInput
  }

  export type gd_projectCreateWithoutWorkflowsInput = {
    project_name?: string | null
    project_revision?: string | null
    project_create_date?: Date | string | null
    project_update_date?: Date | string | null
    project_create_by?: number | null
    project_update_by?: number | null
    project_deleted?: number | null
    project_deleted_at?: Date | string | null
    user_projects?: gd_user_projectCreateNestedManyWithoutProjectInput
    files?: gd_fileCreateNestedManyWithoutProjectInput
  }

  export type gd_projectUncheckedCreateWithoutWorkflowsInput = {
    project_id?: number
    project_name?: string | null
    project_revision?: string | null
    project_create_date?: Date | string | null
    project_update_date?: Date | string | null
    project_create_by?: number | null
    project_update_by?: number | null
    project_deleted?: number | null
    project_deleted_at?: Date | string | null
    user_projects?: gd_user_projectUncheckedCreateNestedManyWithoutProjectInput
    files?: gd_fileUncheckedCreateNestedManyWithoutProjectInput
  }

  export type gd_projectCreateOrConnectWithoutWorkflowsInput = {
    where: gd_projectWhereUniqueInput
    create: XOR<gd_projectCreateWithoutWorkflowsInput, gd_projectUncheckedCreateWithoutWorkflowsInput>
  }

  export type gd_logCreateWithoutWorkflowInput = {
    log_session_time?: Date | string | null
    log_session_attempt?: string | null
    log_last_duration?: string | null
    log_status?: number | null
    log_created_date?: Date | string | null
    log_updated_date?: Date | string | null
    log_created_by?: number | null
    log_updated_by?: number | null
  }

  export type gd_logUncheckedCreateWithoutWorkflowInput = {
    log_id?: number
    log_session_time?: Date | string | null
    log_session_attempt?: string | null
    log_last_duration?: string | null
    log_status?: number | null
    log_created_date?: Date | string | null
    log_updated_date?: Date | string | null
    log_created_by?: number | null
    log_updated_by?: number | null
  }

  export type gd_logCreateOrConnectWithoutWorkflowInput = {
    where: gd_logWhereUniqueInput
    create: XOR<gd_logCreateWithoutWorkflowInput, gd_logUncheckedCreateWithoutWorkflowInput>
  }

  export type gd_logCreateManyWorkflowInputEnvelope = {
    data: Enumerable<gd_logCreateManyWorkflowInput>
    skipDuplicates?: boolean
  }

  export type gd_fileCreateWithoutWorkflowInput = {
    file_path?: string | null
    file_create_date?: Date | string | null
    file_update_date?: Date | string | null
    file_create_by?: number | null
    file_update_by?: number | null
    file_deleted?: number | null
    file_deleted_at?: Date | string | null
    project?: gd_projectCreateNestedOneWithoutFilesInput
  }

  export type gd_fileUncheckedCreateWithoutWorkflowInput = {
    file_id?: number
    file_path?: string | null
    project_id?: number | null
    file_create_date?: Date | string | null
    file_update_date?: Date | string | null
    file_create_by?: number | null
    file_update_by?: number | null
    file_deleted?: number | null
    file_deleted_at?: Date | string | null
  }

  export type gd_fileCreateOrConnectWithoutWorkflowInput = {
    where: gd_fileWhereUniqueInput
    create: XOR<gd_fileCreateWithoutWorkflowInput, gd_fileUncheckedCreateWithoutWorkflowInput>
  }

  export type gd_fileCreateManyWorkflowInputEnvelope = {
    data: Enumerable<gd_fileCreateManyWorkflowInput>
    skipDuplicates?: boolean
  }

  export type gd_projectUpsertWithoutWorkflowsInput = {
    update: XOR<gd_projectUpdateWithoutWorkflowsInput, gd_projectUncheckedUpdateWithoutWorkflowsInput>
    create: XOR<gd_projectCreateWithoutWorkflowsInput, gd_projectUncheckedCreateWithoutWorkflowsInput>
  }

  export type gd_projectUpdateWithoutWorkflowsInput = {
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    project_revision?: NullableStringFieldUpdateOperationsInput | string | null
    project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_projects?: gd_user_projectUpdateManyWithoutProjectInput
    files?: gd_fileUpdateManyWithoutProjectInput
  }

  export type gd_projectUncheckedUpdateWithoutWorkflowsInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    project_revision?: NullableStringFieldUpdateOperationsInput | string | null
    project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_projects?: gd_user_projectUncheckedUpdateManyWithoutProjectInput
    files?: gd_fileUncheckedUpdateManyWithoutProjectInput
  }

  export type gd_logUpsertWithWhereUniqueWithoutWorkflowInput = {
    where: gd_logWhereUniqueInput
    update: XOR<gd_logUpdateWithoutWorkflowInput, gd_logUncheckedUpdateWithoutWorkflowInput>
    create: XOR<gd_logCreateWithoutWorkflowInput, gd_logUncheckedCreateWithoutWorkflowInput>
  }

  export type gd_logUpdateWithWhereUniqueWithoutWorkflowInput = {
    where: gd_logWhereUniqueInput
    data: XOR<gd_logUpdateWithoutWorkflowInput, gd_logUncheckedUpdateWithoutWorkflowInput>
  }

  export type gd_logUpdateManyWithWhereWithoutWorkflowInput = {
    where: gd_logScalarWhereInput
    data: XOR<gd_logUpdateManyMutationInput, gd_logUncheckedUpdateManyWithoutLogsInput>
  }

  export type gd_logScalarWhereInput = {
    AND?: Enumerable<gd_logScalarWhereInput>
    OR?: Enumerable<gd_logScalarWhereInput>
    NOT?: Enumerable<gd_logScalarWhereInput>
    log_id?: IntFilter | number
    workflow_id?: IntNullableFilter | number | null
    log_session_time?: DateTimeNullableFilter | Date | string | null
    log_session_attempt?: StringNullableFilter | string | null
    log_last_duration?: StringNullableFilter | string | null
    log_status?: IntNullableFilter | number | null
    log_created_date?: DateTimeNullableFilter | Date | string | null
    log_updated_date?: DateTimeNullableFilter | Date | string | null
    log_created_by?: IntNullableFilter | number | null
    log_updated_by?: IntNullableFilter | number | null
  }

  export type gd_fileUpsertWithWhereUniqueWithoutWorkflowInput = {
    where: gd_fileWhereUniqueInput
    update: XOR<gd_fileUpdateWithoutWorkflowInput, gd_fileUncheckedUpdateWithoutWorkflowInput>
    create: XOR<gd_fileCreateWithoutWorkflowInput, gd_fileUncheckedCreateWithoutWorkflowInput>
  }

  export type gd_fileUpdateWithWhereUniqueWithoutWorkflowInput = {
    where: gd_fileWhereUniqueInput
    data: XOR<gd_fileUpdateWithoutWorkflowInput, gd_fileUncheckedUpdateWithoutWorkflowInput>
  }

  export type gd_fileUpdateManyWithWhereWithoutWorkflowInput = {
    where: gd_fileScalarWhereInput
    data: XOR<gd_fileUpdateManyMutationInput, gd_fileUncheckedUpdateManyWithoutFilesInput>
  }

  export type gd_projectCreateWithoutFilesInput = {
    project_name?: string | null
    project_revision?: string | null
    project_create_date?: Date | string | null
    project_update_date?: Date | string | null
    project_create_by?: number | null
    project_update_by?: number | null
    project_deleted?: number | null
    project_deleted_at?: Date | string | null
    user_projects?: gd_user_projectCreateNestedManyWithoutProjectInput
    workflows?: gd_workflowCreateNestedManyWithoutProjectInput
  }

  export type gd_projectUncheckedCreateWithoutFilesInput = {
    project_id?: number
    project_name?: string | null
    project_revision?: string | null
    project_create_date?: Date | string | null
    project_update_date?: Date | string | null
    project_create_by?: number | null
    project_update_by?: number | null
    project_deleted?: number | null
    project_deleted_at?: Date | string | null
    user_projects?: gd_user_projectUncheckedCreateNestedManyWithoutProjectInput
    workflows?: gd_workflowUncheckedCreateNestedManyWithoutProjectInput
  }

  export type gd_projectCreateOrConnectWithoutFilesInput = {
    where: gd_projectWhereUniqueInput
    create: XOR<gd_projectCreateWithoutFilesInput, gd_projectUncheckedCreateWithoutFilesInput>
  }

  export type gd_workflowCreateWithoutFilesInput = {
    workflow_name: string
    workflow_create_date?: Date | string | null
    workflow_update_date?: Date | string | null
    workflow_create_by?: number | null
    workflow_update_by?: number | null
    workflow_delete?: number | null
    workflow_delete_at?: Date | string | null
    project?: gd_projectCreateNestedOneWithoutWorkflowsInput
    logs?: gd_logCreateNestedManyWithoutWorkflowInput
  }

  export type gd_workflowUncheckedCreateWithoutFilesInput = {
    workflow_id?: number
    workflow_name: string
    project_id?: number | null
    workflow_create_date?: Date | string | null
    workflow_update_date?: Date | string | null
    workflow_create_by?: number | null
    workflow_update_by?: number | null
    workflow_delete?: number | null
    workflow_delete_at?: Date | string | null
    logs?: gd_logUncheckedCreateNestedManyWithoutWorkflowInput
  }

  export type gd_workflowCreateOrConnectWithoutFilesInput = {
    where: gd_workflowWhereUniqueInput
    create: XOR<gd_workflowCreateWithoutFilesInput, gd_workflowUncheckedCreateWithoutFilesInput>
  }

  export type gd_projectUpsertWithoutFilesInput = {
    update: XOR<gd_projectUpdateWithoutFilesInput, gd_projectUncheckedUpdateWithoutFilesInput>
    create: XOR<gd_projectCreateWithoutFilesInput, gd_projectUncheckedCreateWithoutFilesInput>
  }

  export type gd_projectUpdateWithoutFilesInput = {
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    project_revision?: NullableStringFieldUpdateOperationsInput | string | null
    project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_projects?: gd_user_projectUpdateManyWithoutProjectInput
    workflows?: gd_workflowUpdateManyWithoutProjectInput
  }

  export type gd_projectUncheckedUpdateWithoutFilesInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    project_revision?: NullableStringFieldUpdateOperationsInput | string | null
    project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    project_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_projects?: gd_user_projectUncheckedUpdateManyWithoutProjectInput
    workflows?: gd_workflowUncheckedUpdateManyWithoutProjectInput
  }

  export type gd_workflowUpsertWithoutFilesInput = {
    update: XOR<gd_workflowUpdateWithoutFilesInput, gd_workflowUncheckedUpdateWithoutFilesInput>
    create: XOR<gd_workflowCreateWithoutFilesInput, gd_workflowUncheckedCreateWithoutFilesInput>
  }

  export type gd_workflowUpdateWithoutFilesInput = {
    workflow_name?: StringFieldUpdateOperationsInput | string
    workflow_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: gd_projectUpdateOneWithoutWorkflowsInput
    logs?: gd_logUpdateManyWithoutWorkflowInput
  }

  export type gd_workflowUncheckedUpdateWithoutFilesInput = {
    workflow_id?: IntFieldUpdateOperationsInput | number
    workflow_name?: StringFieldUpdateOperationsInput | string
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logs?: gd_logUncheckedUpdateManyWithoutWorkflowInput
  }

  export type gd_workflowCreateWithoutLogsInput = {
    workflow_name: string
    workflow_create_date?: Date | string | null
    workflow_update_date?: Date | string | null
    workflow_create_by?: number | null
    workflow_update_by?: number | null
    workflow_delete?: number | null
    workflow_delete_at?: Date | string | null
    project?: gd_projectCreateNestedOneWithoutWorkflowsInput
    files?: gd_fileCreateNestedManyWithoutWorkflowInput
  }

  export type gd_workflowUncheckedCreateWithoutLogsInput = {
    workflow_id?: number
    workflow_name: string
    project_id?: number | null
    workflow_create_date?: Date | string | null
    workflow_update_date?: Date | string | null
    workflow_create_by?: number | null
    workflow_update_by?: number | null
    workflow_delete?: number | null
    workflow_delete_at?: Date | string | null
    files?: gd_fileUncheckedCreateNestedManyWithoutWorkflowInput
  }

  export type gd_workflowCreateOrConnectWithoutLogsInput = {
    where: gd_workflowWhereUniqueInput
    create: XOR<gd_workflowCreateWithoutLogsInput, gd_workflowUncheckedCreateWithoutLogsInput>
  }

  export type gd_workflowUpsertWithoutLogsInput = {
    update: XOR<gd_workflowUpdateWithoutLogsInput, gd_workflowUncheckedUpdateWithoutLogsInput>
    create: XOR<gd_workflowCreateWithoutLogsInput, gd_workflowUncheckedCreateWithoutLogsInput>
  }

  export type gd_workflowUpdateWithoutLogsInput = {
    workflow_name?: StringFieldUpdateOperationsInput | string
    workflow_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: gd_projectUpdateOneWithoutWorkflowsInput
    files?: gd_fileUpdateManyWithoutWorkflowInput
  }

  export type gd_workflowUncheckedUpdateWithoutLogsInput = {
    workflow_id?: IntFieldUpdateOperationsInput | number
    workflow_name?: StringFieldUpdateOperationsInput | string
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    files?: gd_fileUncheckedUpdateManyWithoutWorkflowInput
  }

  export type gd_datalake_folderCreateWithoutFilesInput = {
    dl_folder_name?: string | null
    dl_parent_folder_id?: number | null
    dl_folder_deleted?: number | null
    dl_folder_created_by?: number | null
    dl_folder_updated_by?: number | null
    dl_folder_deleted_at?: Date | string | null
    dl_folder_updated_at?: Date | string | null
    dl_folder_created_at?: Date | string | null
  }

  export type gd_datalake_folderUncheckedCreateWithoutFilesInput = {
    dl_folder_id?: number
    dl_folder_name?: string | null
    dl_parent_folder_id?: number | null
    dl_folder_deleted?: number | null
    dl_folder_created_by?: number | null
    dl_folder_updated_by?: number | null
    dl_folder_deleted_at?: Date | string | null
    dl_folder_updated_at?: Date | string | null
    dl_folder_created_at?: Date | string | null
  }

  export type gd_datalake_folderCreateOrConnectWithoutFilesInput = {
    where: gd_datalake_folderWhereUniqueInput
    create: XOR<gd_datalake_folderCreateWithoutFilesInput, gd_datalake_folderUncheckedCreateWithoutFilesInput>
  }

  export type gd_datalake_folderUpsertWithoutFilesInput = {
    update: XOR<gd_datalake_folderUpdateWithoutFilesInput, gd_datalake_folderUncheckedUpdateWithoutFilesInput>
    create: XOR<gd_datalake_folderCreateWithoutFilesInput, gd_datalake_folderUncheckedCreateWithoutFilesInput>
  }

  export type gd_datalake_folderUpdateWithoutFilesInput = {
    dl_folder_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_parent_folder_id?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_folder_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_folder_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_datalake_folderUncheckedUpdateWithoutFilesInput = {
    dl_folder_id?: IntFieldUpdateOperationsInput | number
    dl_folder_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_parent_folder_id?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_folder_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_folder_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_folder_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_datalake_fileCreateWithoutFolderInput = {
    dl_file_name?: string | null
    dl_file_content?: string | null
    dl_file_deleted?: number | null
    dl_file_created_by?: number | null
    dl_file_updated_by?: number | null
    dl_file_deleted_at?: Date | string | null
    dl_file_updated_at?: Date | string | null
    dl_file_created_at?: Date | string | null
  }

  export type gd_datalake_fileUncheckedCreateWithoutFolderInput = {
    dl_file_id?: number
    dl_file_name?: string | null
    dl_file_content?: string | null
    dl_file_deleted?: number | null
    dl_file_created_by?: number | null
    dl_file_updated_by?: number | null
    dl_file_deleted_at?: Date | string | null
    dl_file_updated_at?: Date | string | null
    dl_file_created_at?: Date | string | null
  }

  export type gd_datalake_fileCreateOrConnectWithoutFolderInput = {
    where: gd_datalake_fileWhereUniqueInput
    create: XOR<gd_datalake_fileCreateWithoutFolderInput, gd_datalake_fileUncheckedCreateWithoutFolderInput>
  }

  export type gd_datalake_fileCreateManyFolderInputEnvelope = {
    data: Enumerable<gd_datalake_fileCreateManyFolderInput>
    skipDuplicates?: boolean
  }

  export type gd_datalake_fileUpsertWithWhereUniqueWithoutFolderInput = {
    where: gd_datalake_fileWhereUniqueInput
    update: XOR<gd_datalake_fileUpdateWithoutFolderInput, gd_datalake_fileUncheckedUpdateWithoutFolderInput>
    create: XOR<gd_datalake_fileCreateWithoutFolderInput, gd_datalake_fileUncheckedCreateWithoutFolderInput>
  }

  export type gd_datalake_fileUpdateWithWhereUniqueWithoutFolderInput = {
    where: gd_datalake_fileWhereUniqueInput
    data: XOR<gd_datalake_fileUpdateWithoutFolderInput, gd_datalake_fileUncheckedUpdateWithoutFolderInput>
  }

  export type gd_datalake_fileUpdateManyWithWhereWithoutFolderInput = {
    where: gd_datalake_fileScalarWhereInput
    data: XOR<gd_datalake_fileUpdateManyMutationInput, gd_datalake_fileUncheckedUpdateManyWithoutFilesInput>
  }

  export type gd_datalake_fileScalarWhereInput = {
    AND?: Enumerable<gd_datalake_fileScalarWhereInput>
    OR?: Enumerable<gd_datalake_fileScalarWhereInput>
    NOT?: Enumerable<gd_datalake_fileScalarWhereInput>
    dl_file_id?: IntFilter | number
    dl_file_name?: StringNullableFilter | string | null
    dl_folder_id?: IntNullableFilter | number | null
    dl_file_content?: StringNullableFilter | string | null
    dl_file_deleted?: IntNullableFilter | number | null
    dl_file_created_by?: IntNullableFilter | number | null
    dl_file_updated_by?: IntNullableFilter | number | null
    dl_file_deleted_at?: DateTimeNullableFilter | Date | string | null
    dl_file_updated_at?: DateTimeNullableFilter | Date | string | null
    dl_file_created_at?: DateTimeNullableFilter | Date | string | null
  }

  export type gd_tokenCreateManyUserInput = {
    access_token: string
    referesh_token?: string | null
    token_create_at?: string | null
    token_expired_at?: string | null
  }

  export type gd_user_roleCreateManyUserInput = {
    role_id: number
    user_role_create_date?: Date | string | null
    user_role_update_date?: Date | string | null
    user_role_create_by?: number | null
    user_role_update_by?: number | null
  }

  export type gd_user_projectCreateManyUserInput = {
    project_id: number
    user_project_create_date?: Date | string | null
    user_project_update_date?: Date | string | null
    user_project_create_by?: number | null
    user_project_update_by?: number | null
  }

  export type gd_tokenUpdateWithoutUserInput = {
    access_token?: StringFieldUpdateOperationsInput | string
    referesh_token?: NullableStringFieldUpdateOperationsInput | string | null
    token_create_at?: NullableStringFieldUpdateOperationsInput | string | null
    token_expired_at?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gd_tokenUncheckedUpdateWithoutUserInput = {
    access_token?: StringFieldUpdateOperationsInput | string
    referesh_token?: NullableStringFieldUpdateOperationsInput | string | null
    token_create_at?: NullableStringFieldUpdateOperationsInput | string | null
    token_expired_at?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gd_tokenUncheckedUpdateManyWithoutUser_tokensInput = {
    access_token?: StringFieldUpdateOperationsInput | string
    referesh_token?: NullableStringFieldUpdateOperationsInput | string | null
    token_create_at?: NullableStringFieldUpdateOperationsInput | string | null
    token_expired_at?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type gd_user_roleUpdateWithoutUserInput = {
    user_role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    role?: gd_roleUpdateOneWithoutUser_roleInput
  }

  export type gd_user_roleUncheckedUpdateWithoutUserInput = {
    role_id?: IntFieldUpdateOperationsInput | number
    user_role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_user_roleUncheckedUpdateManyWithoutUser_rolesInput = {
    role_id?: IntFieldUpdateOperationsInput | number
    user_role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_user_projectUpdateWithoutUserInput = {
    user_project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    project?: gd_projectUpdateOneRequiredWithoutUser_projectsInput
  }

  export type gd_user_projectUncheckedUpdateWithoutUserInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    user_project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_user_projectUncheckedUpdateManyWithoutUser_projectsInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    user_project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_user_roleCreateManyRoleInput = {
    user_id: number
    user_role_create_date?: Date | string | null
    user_role_update_date?: Date | string | null
    user_role_create_by?: number | null
    user_role_update_by?: number | null
  }

  export type gd_user_roleUpdateWithoutRoleInput = {
    user_role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user?: gd_userUpdateOneWithoutUser_rolesInput
  }

  export type gd_user_roleUncheckedUpdateWithoutRoleInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_user_roleUncheckedUpdateManyWithoutUser_roleInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_role_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_role_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_role_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_user_projectCreateManyProjectInput = {
    user_id: number
    user_project_create_date?: Date | string | null
    user_project_update_date?: Date | string | null
    user_project_create_by?: number | null
    user_project_update_by?: number | null
  }

  export type gd_workflowCreateManyProjectInput = {
    workflow_id?: number
    workflow_name: string
    workflow_create_date?: Date | string | null
    workflow_update_date?: Date | string | null
    workflow_create_by?: number | null
    workflow_update_by?: number | null
    workflow_delete?: number | null
    workflow_delete_at?: Date | string | null
  }

  export type gd_fileCreateManyProjectInput = {
    file_id?: number
    file_path?: string | null
    workflow_id?: number | null
    file_create_date?: Date | string | null
    file_update_date?: Date | string | null
    file_create_by?: number | null
    file_update_by?: number | null
    file_deleted?: number | null
    file_deleted_at?: Date | string | null
  }

  export type gd_user_projectUpdateWithoutProjectInput = {
    user_project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    user?: gd_userUpdateOneWithoutUser_projectsInput
  }

  export type gd_user_projectUncheckedUpdateWithoutProjectInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    user_project_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_project_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    user_project_update_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_workflowUpdateWithoutProjectInput = {
    workflow_name?: StringFieldUpdateOperationsInput | string
    workflow_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logs?: gd_logUpdateManyWithoutWorkflowInput
    files?: gd_fileUpdateManyWithoutWorkflowInput
  }

  export type gd_workflowUncheckedUpdateWithoutProjectInput = {
    workflow_id?: IntFieldUpdateOperationsInput | number
    workflow_name?: StringFieldUpdateOperationsInput | string
    workflow_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    logs?: gd_logUncheckedUpdateManyWithoutWorkflowInput
    files?: gd_fileUncheckedUpdateManyWithoutWorkflowInput
  }

  export type gd_workflowUncheckedUpdateManyWithoutWorkflowsInput = {
    workflow_id?: IntFieldUpdateOperationsInput | number
    workflow_name?: StringFieldUpdateOperationsInput | string
    workflow_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete?: NullableIntFieldUpdateOperationsInput | number | null
    workflow_delete_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_fileUpdateWithoutProjectInput = {
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    file_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workflow?: gd_workflowUpdateOneWithoutFilesInput
  }

  export type gd_fileUncheckedUpdateWithoutProjectInput = {
    file_id?: IntFieldUpdateOperationsInput | number
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    workflow_id?: NullableIntFieldUpdateOperationsInput | number | null
    file_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_fileUncheckedUpdateManyWithoutFilesInput = {
    file_id?: IntFieldUpdateOperationsInput | number
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    workflow_id?: NullableIntFieldUpdateOperationsInput | number | null
    file_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_logCreateManyWorkflowInput = {
    log_id?: number
    log_session_time?: Date | string | null
    log_session_attempt?: string | null
    log_last_duration?: string | null
    log_status?: number | null
    log_created_date?: Date | string | null
    log_updated_date?: Date | string | null
    log_created_by?: number | null
    log_updated_by?: number | null
  }

  export type gd_fileCreateManyWorkflowInput = {
    file_id?: number
    file_path?: string | null
    project_id?: number | null
    file_create_date?: Date | string | null
    file_update_date?: Date | string | null
    file_create_by?: number | null
    file_update_by?: number | null
    file_deleted?: number | null
    file_deleted_at?: Date | string | null
  }

  export type gd_logUpdateWithoutWorkflowInput = {
    log_session_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_session_attempt?: NullableStringFieldUpdateOperationsInput | string | null
    log_last_duration?: NullableStringFieldUpdateOperationsInput | string | null
    log_status?: NullableIntFieldUpdateOperationsInput | number | null
    log_created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    log_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_logUncheckedUpdateWithoutWorkflowInput = {
    log_id?: IntFieldUpdateOperationsInput | number
    log_session_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_session_attempt?: NullableStringFieldUpdateOperationsInput | string | null
    log_last_duration?: NullableStringFieldUpdateOperationsInput | string | null
    log_status?: NullableIntFieldUpdateOperationsInput | number | null
    log_created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    log_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_logUncheckedUpdateManyWithoutLogsInput = {
    log_id?: IntFieldUpdateOperationsInput | number
    log_session_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_session_attempt?: NullableStringFieldUpdateOperationsInput | string | null
    log_last_duration?: NullableStringFieldUpdateOperationsInput | string | null
    log_status?: NullableIntFieldUpdateOperationsInput | number | null
    log_created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_updated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    log_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type gd_fileUpdateWithoutWorkflowInput = {
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    file_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project?: gd_projectUpdateOneWithoutFilesInput
  }

  export type gd_fileUncheckedUpdateWithoutWorkflowInput = {
    file_id?: IntFieldUpdateOperationsInput | number
    file_path?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableIntFieldUpdateOperationsInput | number | null
    file_create_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_update_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    file_create_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_update_by?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_datalake_fileCreateManyFolderInput = {
    dl_file_id?: number
    dl_file_name?: string | null
    dl_file_content?: string | null
    dl_file_deleted?: number | null
    dl_file_created_by?: number | null
    dl_file_updated_by?: number | null
    dl_file_deleted_at?: Date | string | null
    dl_file_updated_at?: Date | string | null
    dl_file_created_at?: Date | string | null
  }

  export type gd_datalake_fileUpdateWithoutFolderInput = {
    dl_file_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_file_content?: NullableStringFieldUpdateOperationsInput | string | null
    dl_file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_datalake_fileUncheckedUpdateWithoutFolderInput = {
    dl_file_id?: IntFieldUpdateOperationsInput | number
    dl_file_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_file_content?: NullableStringFieldUpdateOperationsInput | string | null
    dl_file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type gd_datalake_fileUncheckedUpdateManyWithoutFilesInput = {
    dl_file_id?: IntFieldUpdateOperationsInput | number
    dl_file_name?: NullableStringFieldUpdateOperationsInput | string | null
    dl_file_content?: NullableStringFieldUpdateOperationsInput | string | null
    dl_file_deleted?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_created_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_updated_by?: NullableIntFieldUpdateOperationsInput | number | null
    dl_file_deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dl_file_created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.DMMF.Document;
}